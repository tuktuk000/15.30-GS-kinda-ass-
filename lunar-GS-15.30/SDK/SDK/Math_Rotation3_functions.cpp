#pragma once

/*
* SDK generated by Dumper-8
*
* https://github.com/NotTacs/Dumper-8
*/

// Package: Math_Rotation3

#include "Basic.hpp"

#include "Math_Rotation3_classes.hpp"
#include "Math_Rotation3_parameters.hpp"


namespace SDK
{

// Function Math_Rotation3.Rotation3.compose
// (Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class URotation3*                       __verse_0xFE3567E9_rotation1                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class URotation3*                       __verse_0x109AD2FB_rotation2                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class URotation3*                       RetVal                                                 (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class URotation3* URotation3::compose(class URotation3* __verse_0xFE3567E9_rotation1, class URotation3* __verse_0x109AD2FB_rotation2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Rotation3", "compose");

	Params::Rotation3_compose Parms{};

	Parms.__verse_0xFE3567E9_rotation1 = __verse_0xFE3567E9_rotation1;
	Parms.__verse_0x109AD2FB_rotation2 = __verse_0x109AD2FB_rotation2;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Math_Rotation3.Rotation3.Create
// (Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   __verse_0xD38197A3_pitch                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   __verse_0x0A459F28_yaw                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   __verse_0x19D30F18_roll                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class URotation3*                       RetVal                                                 (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class URotation3* URotation3::Create(float __verse_0xD38197A3_pitch, float __verse_0x0A459F28_yaw, float __verse_0x19D30F18_roll)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Rotation3", "Create");

	Params::Rotation3_Create Parms{};

	Parms.__verse_0xD38197A3_pitch = __verse_0xD38197A3_pitch;
	Parms.__verse_0x0A459F28_yaw = __verse_0x0A459F28_yaw;
	Parms.__verse_0x19D30F18_roll = __verse_0x19D30F18_roll;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Math_Rotation3.Rotation3.createFromEuler
// (Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UVector3*                         __verse_0x7E9A2B4F_vector                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class URotation3*                       RetVal                                                 (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class URotation3* URotation3::createFromEuler(class UVector3* __verse_0x7E9A2B4F_vector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Rotation3", "createFromEuler");

	Params::Rotation3_createFromEuler Parms{};

	Parms.__verse_0x7E9A2B4F_vector = __verse_0x7E9A2B4F_vector;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Math_Rotation3.Rotation3.createZero
// (Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class URotation3*                       RetVal                                                 (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class URotation3* URotation3::createZero()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Rotation3", "createZero");

	Params::Rotation3_createZero Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Math_Rotation3.Rotation3.$InitCDO
// ()

void URotation3::_InitCDO()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Rotation3", "$InitCDO");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Math_Rotation3.Rotation3.$InitInstance
// ()

void URotation3::_InitInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Rotation3", "$InitInstance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Math_Rotation3.Rotation3.ToVector3
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UVector3*                         RetVal                                                 (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UVector3* URotation3::ToVector3()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Rotation3", "ToVector3");

	Params::Rotation3_ToVector3 Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Math_Rotation3.Rotation3.getEulerRotationVector
// (Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UVector3*                         RetVal                                                 (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UVector3* URotation3::getEulerRotationVector()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Rotation3", "getEulerRotationVector");

	Params::Rotation3_getEulerRotationVector Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Math_Rotation3.Rotation3.GetForwardVector
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UVector3*                         RetVal                                                 (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UVector3* URotation3::GetForwardVector()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Rotation3", "GetForwardVector");

	Params::Rotation3_GetForwardVector Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Math_Rotation3.Rotation3.GetRightVector
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UVector3*                         RetVal                                                 (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UVector3* URotation3::GetRightVector()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Rotation3", "GetRightVector");

	Params::Rotation3_GetRightVector Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Math_Rotation3.Rotation3.GetUpVector
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UVector3*                         RetVal                                                 (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UVector3* URotation3::GetUpVector()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Rotation3", "GetUpVector");

	Params::Rotation3_GetUpVector Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

