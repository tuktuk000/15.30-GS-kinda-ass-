#pragma once

/*
* SDK generated by Dumper-8
*
* https://github.com/NotTacs/Dumper-8
*/

// Package: Procedural

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "Procedural_structs.hpp"


namespace SDK
{

// Class Procedural.HISMBuilderSettings
// 0x01A8 (0x01D0 - 0x0028)
class UHISMBuilderSettings final : public UObject
{
public:
	EComponentMobility                            Mobility;                                          // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-8 ])
	struct FInt32Interval                         CullDistance;                                      // 0x002C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bCastShadow : 1;                                   // 0x0034(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bAffectDynamicIndirectLighting : 1;                // 0x0034(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bAffectDistanceFieldLighting : 1;                  // 0x0034(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bCastDynamicShadow : 1;                            // 0x0034(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bCastStaticShadow : 1;                             // 0x0034(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bCastShadowAsTwoSided : 1;                         // 0x0034(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bReceivesDecals : 1;                               // 0x0034(0x0001)(BitIndex: 0x06, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bOverrideLightMapRes : 1;                          // 0x0034(0x0001)(BitIndex: 0x07, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-8 ])
	int32                                         OverriddenLightMapRes;                             // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELightmapType                                 LightmapType;                                      // 0x003C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-8 ])
	uint8                                         bUseAsOccluder : 1;                                // 0x0040(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-8 ])
	struct FBodyInstance                          BodyInstance;                                      // 0x0048(0x0158)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	EHasCustomNavigableGeometry                   CustomNavigableGeometry;                           // 0x01A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLightingChannels                      LightingChannels;                                  // 0x01A1(0x0001)(Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A2[0x2];                                      // 0x01A2(0x0002)(Fixing Size After Last Property [ Dumper-8 ])
	uint8                                         bRenderCustomDepth : 1;                            // 0x01A4(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_1A5[0x3];                                      // 0x01A5(0x0003)(Fixing Size After Last Property [ Dumper-8 ])
	int32                                         CustomDepthStencilValue;                           // 0x01A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TranslucencySortPriority;                          // 0x01AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bEnableDensityScaling : 1;                         // 0x01B0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-8 ])
	TArray<class URuntimeVirtualTexture*>         RuntimeVirtualTextures;                            // 0x01B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         VirtualTextureCullMips;                            // 0x01C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERuntimeVirtualTextureMainPassType            VirtualTextureRenderPassType;                      // 0x01CC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1CD[0x3];                                      // 0x01CD(0x0003)(Fixing Struct Size After Last Property [ Dumper-8 ])

public:
	void SetOverriddenLightMapRes(int32 Value);

	int32 GetOverriddenLightMapRes() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HISMBuilderSettings">();
	}
	static class UHISMBuilderSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHISMBuilderSettings>();
	}
};

// Class Procedural.ProceduralParameterModifier
// 0x0010 (0x0038 - 0x0028)
class UProceduralParameterModifier : public UObject
{
public:
	bool                                          bEnabled;                                          // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-8 ])
	float                                         Contribution;                                      // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EProceduralParameterModifierBlendMode         BlendMode;                                         // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-8 ])

public:
	float GetContribution() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProceduralParameterModifier">();
	}
	static class UProceduralParameterModifier* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProceduralParameterModifier>();
	}
};

// Class Procedural.ProceduralContentVariationsWeightsModifier
// 0x0000 (0x0038 - 0x0038)
class UProceduralContentVariationsWeightsModifier : public UProceduralParameterModifier
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProceduralContentVariationsWeightsModifier">();
	}
	static class UProceduralContentVariationsWeightsModifier* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProceduralContentVariationsWeightsModifier>();
	}
};

// Class Procedural.ProceduralContentVariationsWeightsMapModifier
// 0x0010 (0x0048 - 0x0038)
class UProceduralContentVariationsWeightsMapModifier final : public UProceduralContentVariationsWeightsModifier
{
public:
	TArray<struct FProceduralContentVariationMap> VariationsMaps;                                    // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProceduralContentVariationsWeightsMapModifier">();
	}
	static class UProceduralContentVariationsWeightsMapModifier* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProceduralContentVariationsWeightsMapModifier>();
	}
};

// Class Procedural.ProceduralGenerator
// 0x0010 (0x0038 - 0x0028)
class UProceduralGenerator : public UObject
{
public:
	struct FProceduralDebugSettings               DebugSettings;                                     // 0x0028(0x000C)(Edit, BlueprintVisible, Transient, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-8 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProceduralGenerator">();
	}
	static class UProceduralGenerator* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProceduralGenerator>();
	}
};

// Class Procedural.ProceduralCustomGenerator
// 0x0010 (0x0048 - 0x0038)
class UProceduralCustomGenerator final : public UProceduralGenerator
{
public:
	TSubclassOf<class UProceduralGeneratorContext> GeneratorContextClass;                            // 0x0038(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UProceduralGeneratorContext*            GeneratorContext;                                  // 0x0040(0x0008)(Edit, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProceduralCustomGenerator">();
	}
	static class UProceduralCustomGenerator* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProceduralCustomGenerator>();
	}
};

// Class Procedural.ProceduralDataMap
// 0x0008 (0x0030 - 0x0028)
class UProceduralDataMap : public UObject
{
public:
	bool                                          bUseRemapCurve;                                    // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-8 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProceduralDataMap">();
	}
	static class UProceduralDataMap* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProceduralDataMap>();
	}
};

// Class Procedural.ProceduralFloatDataMap
// 0x0088 (0x00B8 - 0x0030)
class UProceduralFloatDataMap : public UProceduralDataMap
{
public:
	struct FProceduralRemapFloatCurve             RemapCurve;                                        // 0x0030(0x0088)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProceduralFloatDataMap">();
	}
	static class UProceduralFloatDataMap* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProceduralFloatDataMap>();
	}
};

// Class Procedural.ProceduralVectorDataMap
// 0x0208 (0x0238 - 0x0030)
class UProceduralVectorDataMap : public UProceduralDataMap
{
public:
	struct FProceduralRemapVectorCurve            RemapCurve;                                        // 0x0030(0x0208)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProceduralVectorDataMap">();
	}
	static class UProceduralVectorDataMap* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProceduralVectorDataMap>();
	}
};

// Class Procedural.ProceduralDensityModifier
// 0x0000 (0x0038 - 0x0038)
class UProceduralDensityModifier : public UProceduralParameterModifier
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProceduralDensityModifier">();
	}
	static class UProceduralDensityModifier* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProceduralDensityModifier>();
	}
};

// Class Procedural.ProceduralDensityMapModifier
// 0x0008 (0x0040 - 0x0038)
class UProceduralDensityMapModifier final : public UProceduralDensityModifier
{
public:
	class UProceduralFloatDataMap*                Map;                                               // 0x0038(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProceduralDensityMapModifier">();
	}
	static class UProceduralDensityMapModifier* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProceduralDensityMapModifier>();
	}
};

// Class Procedural.ProceduralGenerationBlockingVolume
// 0x0010 (0x0268 - 0x0258)
class AProceduralGenerationBlockingVolume final : public AVolume
{
public:
	TArray<class AProceduralGenerationVolume*>    BlockedVolumes;                                    // 0x0258(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProceduralGenerationBlockingVolume">();
	}
	static class AProceduralGenerationBlockingVolume* GetDefaultObj()
	{
		return GetDefaultObjImpl<AProceduralGenerationBlockingVolume>();
	}
};

// Class Procedural.ProceduralGenerationComponent
// 0x0030 (0x00E0 - 0x00B0)
class UProceduralGenerationComponent final : public UActorComponent
{
public:
	class UProceduralGenerator*                   Generator;                                         // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowDebugVisualization;                           // 0x00B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-8 ])
	struct FGuid                                  ProceduralGenerationGuid;                          // 0x00BC(0x0010)(ZeroConstructor, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-8 ])
	class AVolume*                                GenerationVolume;                                  // 0x00D0(0x0008)(ZeroConstructor, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UProceduralGenerationContext*           GenerationContext;                                 // 0x00D8(0x0008)(ZeroConstructor, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProceduralGenerationComponent">();
	}
	static class UProceduralGenerationComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProceduralGenerationComponent>();
	}
};

// Class Procedural.ProceduralGenerationContext
// 0x00C8 (0x00F0 - 0x0028)
class UProceduralGenerationContext final : public UObject
{
public:
	class UProceduralGeneratorContext*            GeneratorContext;                                  // 0x0028(0x0008)(ZeroConstructor, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UProceduralGeneratorContext*>    GeneratedContexts;                                 // 0x0030(0x0010)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UProceduralGeneratorContext*>    RegisteredContexts;                                // 0x0040(0x0010)(ZeroConstructor, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<struct FGuid, class UProceduralGeneratorContext*> GeneratorContexts;                        // 0x0050(0x0050)(DuplicateTransient, Deprecated, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A0[0x50];                                      // 0x00A0(0x0050)(Fixing Struct Size After Last Property [ Dumper-8 ])

public:
	class UProceduralGenerationComponent* GetGenerationComponent() const;
	class AVolume* GetGenerationVolume() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProceduralGenerationContext">();
	}
	static class UProceduralGenerationContext* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProceduralGenerationContext>();
	}
};

// Class Procedural.ProceduralGenerationVolume
// 0x0008 (0x0260 - 0x0258)
class AProceduralGenerationVolume final : public AVolume
{
public:
	class UProceduralGenerationComponent*         ProceduralComponent;                               // 0x0258(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void ClearGeneratedContent();
	void Generate();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProceduralGenerationVolume">();
	}
	static class AProceduralGenerationVolume* GetDefaultObj()
	{
		return GetDefaultObjImpl<AProceduralGenerationVolume>();
	}
};

// Class Procedural.ProceduralGeneratorContext
// 0x0030 (0x0058 - 0x0028)
class UProceduralGeneratorContext : public UObject
{
public:
	class UProceduralGenerator*                   Generator;                                         // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProceduralGenerationContext*           GenerationContext;                                 // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProceduralGeneratorContext*            OwnerContext;                                      // 0x0038(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UObject*>                        GeneratedObjects;                                  // 0x0040(0x0010)(BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProceduralPointCloud*                  ExportedPointCloud;                                // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void ClearGeneratedContent();
	bool Generate();
	void GetOrCreateGeneratorContext(class UProceduralGenerator* Generator_0, class UProceduralGeneratorContext** Context);
	void OnClearGeneratedContent();
	bool OnGenerate();

	TArray<class UProceduralGeneratorContext*> GetGeneratedContexts() const;
	void OnDrawVisualization() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProceduralGeneratorContext">();
	}
	static class UProceduralGeneratorContext* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProceduralGeneratorContext>();
	}
};

// Class Procedural.ProceduralGeneratorStack
// 0x0010 (0x0048 - 0x0038)
class UProceduralGeneratorStack final : public UProceduralGenerator
{
public:
	TArray<struct FProceduralGenerationStackElement> Generators;                                     // 0x0038(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProceduralGeneratorStack">();
	}
	static class UProceduralGeneratorStack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProceduralGeneratorStack>();
	}
};

// Class Procedural.ProceduralGeneratorStackContext
// 0x0000 (0x0058 - 0x0058)
class UProceduralGeneratorStackContext final : public UProceduralGeneratorContext
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProceduralGeneratorStackContext">();
	}
	static class UProceduralGeneratorStackContext* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProceduralGeneratorStackContext>();
	}
};

// Class Procedural.ProceduralLandscapeLayerMap
// 0x0010 (0x00C8 - 0x00B8)
class UProceduralLandscapeLayerMap final : public UProceduralFloatDataMap
{
public:
	class FName                                   LandscapeLayerName;                                // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   LandscapeEditLayerName;                            // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProceduralLandscapeLayerMap">();
	}
	static class UProceduralLandscapeLayerMap* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProceduralLandscapeLayerMap>();
	}
};

// Class Procedural.ProceduralPointCloud
// 0x0010 (0x0038 - 0x0028)
class UProceduralPointCloud final : public UObject
{
public:
	TArray<struct FProceduralPointCloudPoint>     Points;                                            // 0x0028(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void Empty();
	TArray<struct FProceduralPointCloudPoint> GetPointsByTag(class FName InTag);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProceduralPointCloud">();
	}
	static class UProceduralPointCloud* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProceduralPointCloud>();
	}
};

// Class Procedural.ProceduralRotationModifier
// 0x0000 (0x0038 - 0x0038)
class UProceduralRotationModifier : public UProceduralParameterModifier
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProceduralRotationModifier">();
	}
	static class UProceduralRotationModifier* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProceduralRotationModifier>();
	}
};

// Class Procedural.ProceduralRotationMapModifier
// 0x0028 (0x0060 - 0x0038)
class UProceduralRotationMapModifier final : public UProceduralRotationModifier
{
public:
	class UProceduralVectorDataMap*               Map;                                               // 0x0038(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EProceduralRotationFormat                     RotationFormat;                                    // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-8 ])
	struct FFloatInterval                         Roll;                                              // 0x0044(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFloatInterval                         Pitch;                                             // 0x004C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFloatInterval                         Yaw;                                               // 0x0054(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Struct Size After Last Property [ Dumper-8 ])

public:
	void SetPitchMax(float InValue);
	void SetPitchMin(float InValue);
	void SetRollMax(float InValue);
	void SetRollMin(float InValue);
	void SetYawMax(float InValue);
	void SetYawMin(float InValue);

	float GetPitchMax() const;
	float GetPitchMin() const;
	float GetRollMax() const;
	float GetRollMin() const;
	float GetYawMax() const;
	float GetYawMin() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProceduralRotationMapModifier">();
	}
	static class UProceduralRotationMapModifier* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProceduralRotationMapModifier>();
	}
};

// Class Procedural.ProceduralRotationNoiseModifier
// 0x0028 (0x0060 - 0x0038)
class UProceduralRotationNoiseModifier final : public UProceduralRotationModifier
{
public:
	uint8                                         bRandomRoll : 1;                                   // 0x0038(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-8 ])
	struct FFloatInterval                         RandomRoll;                                        // 0x003C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bRandomPitch : 1;                                  // 0x0044(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-8 ])
	struct FFloatInterval                         RandomPitch;                                       // 0x0048(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bRandomYaw : 1;                                    // 0x0050(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-8 ])
	struct FFloatInterval                         RandomYaw;                                         // 0x0054(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Struct Size After Last Property [ Dumper-8 ])

public:
	void SetRandomPitchMax(float InValue);
	void SetRandomPitchMin(float InValue);
	void SetRandomRollMax(float InValue);
	void SetRandomRollMin(float InValue);
	void SetRandomYawMax(float InValue);
	void SetRandomYawMin(float InValue);

	float GetRandomPitchMax() const;
	float GetRandomPitchMin() const;
	float GetRandomRollMax() const;
	float GetRandomRollMin() const;
	float GetRandomYawMax() const;
	float GetRandomYawMin() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProceduralRotationNoiseModifier">();
	}
	static class UProceduralRotationNoiseModifier* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProceduralRotationNoiseModifier>();
	}
};

// Class Procedural.ProceduralScaleModifier
// 0x0000 (0x0038 - 0x0038)
class UProceduralScaleModifier : public UProceduralParameterModifier
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProceduralScaleModifier">();
	}
	static class UProceduralScaleModifier* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProceduralScaleModifier>();
	}
};

// Class Procedural.ProceduralScaleMapModifier
// 0x0018 (0x0050 - 0x0038)
class UProceduralScaleMapModifier final : public UProceduralScaleModifier
{
public:
	bool                                          bRemapScale;                                       // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-8 ])
	struct FFloatInterval                         RemapScale;                                        // 0x003C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-8 ])
	class UProceduralFloatDataMap*                Map;                                               // 0x0048(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void SetRemapScaleMax(float InValue);
	void SetRemapScaleMin(float InValue);

	float GetRemapScaleMax() const;
	float GetRemapScaleMin() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProceduralScaleMapModifier">();
	}
	static class UProceduralScaleMapModifier* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProceduralScaleMapModifier>();
	}
};

// Class Procedural.ProceduralScaleNoiseModifier
// 0x0008 (0x0040 - 0x0038)
class UProceduralScaleNoiseModifier final : public UProceduralScaleModifier
{
public:
	struct FFloatInterval                         Scale;                                             // 0x0038(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void SetScaleMax(float InValue);
	void SetScaleMin(float InValue);

	float GetScaleMax() const;
	float GetScaleMin() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProceduralScaleNoiseModifier">();
	}
	static class UProceduralScaleNoiseModifier* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProceduralScaleNoiseModifier>();
	}
};

// Class Procedural.ProceduralScatterContentVariation
// 0x0070 (0x0098 - 0x0028)
class UProceduralScatterContentVariation : public UObject
{
public:
	float                                         Weight;                                            // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EProceduralScatterContentPivotMode            PivotMode;                                         // 0x002C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-8 ])
	struct FVector                                AdditionalPivotOffset;                             // 0x0030(0x000C)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FootprintBoundingBoxRatio;                         // 0x003C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           SetActorTags;                                      // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x48];                                      // 0x0050(0x0048)(Fixing Struct Size After Last Property [ Dumper-8 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProceduralScatterContentVariation">();
	}
	static class UProceduralScatterContentVariation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProceduralScatterContentVariation>();
	}
};

// Class Procedural.ProceduralScatterActorContentVariation
// 0x0008 (0x00A0 - 0x0098)
class UProceduralScatterActorContentVariation final : public UProceduralScatterContentVariation
{
public:
	TSubclassOf<class AActor>                     ActorClass;                                        // 0x0098(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProceduralScatterActorContentVariation">();
	}
	static class UProceduralScatterActorContentVariation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProceduralScatterActorContentVariation>();
	}
};

// Class Procedural.ProceduralScatterContentSettings
// 0x0040 (0x0068 - 0x0028)
class UProceduralScatterContentSettings : public UObject
{
public:
	TArray<class FName>                           SetActorTags;                                      // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UProceduralScatterContentVariation*> Variations;                                    // 0x0038(0x0010)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_48[0x20];                                      // 0x0048(0x0020)(Fixing Struct Size After Last Property [ Dumper-8 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProceduralScatterContentSettings">();
	}
	static class UProceduralScatterContentSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProceduralScatterContentSettings>();
	}
};

// Class Procedural.ProceduralScatterActorContentSettings
// 0x0008 (0x0070 - 0x0068)
class UProceduralScatterActorContentSettings final : public UProceduralScatterContentSettings
{
public:
	bool                                          bHideFromWorldOutliner;                            // 0x0068(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Struct Size After Last Property [ Dumper-8 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProceduralScatterActorContentSettings">();
	}
	static class UProceduralScatterActorContentSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProceduralScatterActorContentSettings>();
	}
};

// Class Procedural.ProceduralScatterGenerator
// 0x0088 (0x00C0 - 0x0038)
class UProceduralScatterGenerator final : public UProceduralGenerator
{
public:
	EProceduralScatterMethod                      ScatterMethod;                                     // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-8 ])
	struct FProceduralScatterTileSettings         TileSettings;                                      // 0x003C(0x0014)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         RandomSeed;                                        // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DuplicateTransient, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumUniqueSourcePointPatterns;                      // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              GridSize;                                          // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              GridJitter;                                        // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GridRotation;                                      // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              GridOffset;                                        // 0x006C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-8 ])
	TArray<struct FProceduralScatterSettingsElement> ScatterSettingsElements;                        // 0x0078(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           BlockingActorTags;                                 // 0x0088(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllScatterPointsBlocking;                         // 0x0098(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLocalDistribution;                                // 0x0099(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9A[0x6];                                       // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-8 ])
	TArray<class FName>                           BlockingScatterPointTags;                          // 0x00A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FProceduralScatterDebugSettings        ScatterDebugSettings;                              // 0x00B0(0x000C)(Edit, BlueprintVisible, Transient, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Struct Size After Last Property [ Dumper-8 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProceduralScatterGenerator">();
	}
	static class UProceduralScatterGenerator* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProceduralScatterGenerator>();
	}
};

// Class Procedural.ProceduralScatterGeneratorContext
// 0x0238 (0x0290 - 0x0058)
class alignas(0x10) UProceduralScatterGeneratorContext final : public UProceduralGeneratorContext
{
public:
	struct FScatteredPointCloud                   ScatteredPointCloud;                               // 0x0058(0x0010)(BlueprintVisible, BlueprintReadOnly, Transient, NonTransactional, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UProceduralScatterGeneratorTile*> UniqueTiles;                                      // 0x0068(0x0010)(ZeroConstructor, Transient, NonTransactional, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FSourcePointGenerator>          SourcePointGenerators;                             // 0x0078(0x0010)(ZeroConstructor, Transient, NonTransactional, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FProceduralScatterProjectionPoint> ProjectionPointCloud;                           // 0x0088(0x0010)(ZeroConstructor, Transient, NonTransactional, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UProceduralPointCloud*                  SourcePointCloud;                                  // 0x0098(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UProceduralPointCloud*                  BlockerPointCloud;                                 // 0x00A0(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInstanceDynamic*               ProjectionVectorMaterial;                          // 0x00A8(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_B0[0x1E0];                                     // 0x00B0(0x01E0)(Fixing Struct Size After Last Property [ Dumper-8 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProceduralScatterGeneratorContext">();
	}
	static class UProceduralScatterGeneratorContext* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProceduralScatterGeneratorContext>();
	}
};

// Class Procedural.ProceduralScatterGeneratorTile
// 0x0128 (0x0150 - 0x0028)
class UProceduralScatterGeneratorTile final : public UObject
{
public:
	class UProceduralScatterGenerator*            Generator;                                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FProceduralScatter2DPoint>      GeneratedPoints;                                   // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_40[0x110];                                     // 0x0040(0x0110)(Fixing Struct Size After Last Property [ Dumper-8 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProceduralScatterGeneratorTile">();
	}
	static class UProceduralScatterGeneratorTile* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProceduralScatterGeneratorTile>();
	}
};

// Class Procedural.ProceduralScatterSettings
// 0x01A8 (0x01D0 - 0x0028)
class UProceduralScatterSettings final : public UObject
{
public:
	class UProceduralScatterContentSettings*      Content;                                           // 0x0028(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bContentVariationsModifiersEnabled : 1;            // 0x0030(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-8 ])
	struct FProceduralContentVariationsModifiers  ContentVariationsModifiers;                        // 0x0038(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class FName>                           SetPointTags;                                      // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CollisionRadius;                                   // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bAutomaticCollisionRadius : 1;                     // 0x005C(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bUseSphericalBoundsForAutomaticCollisionRadius : 1; // 0x005C(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-8 ])
	float                                         AutomaticCollisionRadiusScaleFactor;               // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DistributionSeed;                                  // 0x0064(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DuplicateTransient, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bDensityModifiersEnabled : 1;                      // 0x0068(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-8 ])
	struct FProceduralDensityModifiers            DensityModifiers;                                  // 0x0070(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                         Density;                                           // 0x0080(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-8 ])
	TArray<class FName>                           SourcePointTagIncludes;                            // 0x0088(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           SourcePointTagExcludes;                            // 0x0098(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           SourceActorTagIncludes;                            // 0x00A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           SourceActorTagExcludes;                            // 0x00B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           SourceComponentTagIncludes;                        // 0x00C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           SourceComponentTagExcludes;                        // 0x00D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFloatInterval                         SourcePointDistance;                               // 0x00E8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bUseSourcePointExactNumber : 1;                    // 0x00F0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-8 ])
	int32                                         SourcePointExactNumber;                            // 0x00F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bScaleModifiersEnabled : 1;                        // 0x00F8(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-8 ])
	struct FProceduralScaleModifiers              ScaleModifiers;                                    // 0x0100(0x0020)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                         bRotationModifiersEnabled : 1;                     // 0x0120(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-8 ])
	struct FProceduralRotationModifiers           RotationModifiers;                                 // 0x0128(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                         bAlignToNormal : 1;                                // 0x0138(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-8 ])
	float                                         AlignMaxAngle;                                     // 0x013C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FProceduralScatterTargetSurface        TargetSurface;                                     // 0x0140(0x0048)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	uint8                                         bDetectOverhangingLedge : 1;                       // 0x0188(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_189[0x3];                                      // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-8 ])
	int32                                         OverhangingLedgeDetectionRayCount;                 // 0x018C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OverhangingLedgeDetectionLength;                   // 0x0190(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OverhangingLedgeDetectionVerticalThreshold;        // 0x0194(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OverhangingLedgeDetectionRadiusScale;              // 0x0198(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FilterMinimumScale;                                // 0x019C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OverlapPriority;                                   // 0x01A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bCollisionWithWorld : 1;                           // 0x01A4(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_1A5[0x3];                                      // 0x01A5(0x0003)(Fixing Size After Last Property [ Dumper-8 ])
	struct FVector                                CollisionScale;                                    // 0x01A8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                 DebugColor;                                        // 0x01B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B8[0x18];                                     // 0x01B8(0x0018)(Fixing Struct Size After Last Property [ Dumper-8 ])

public:
	void SetSourcePointDistanceMax(float InValue);
	void SetSourcePointDistanceMin(float InValue);

	float GetSourcePointDistanceMax() const;
	float GetSourcePointDistanceMin() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProceduralScatterSettings">();
	}
	static class UProceduralScatterSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProceduralScatterSettings>();
	}
};

// Class Procedural.ProceduralScatterStaticMeshContentVariation
// 0x0080 (0x0118 - 0x0098)
class UProceduralScatterStaticMeshContentVariation final : public UProceduralScatterContentVariation
{
public:
	EProceduralScatterStaticMeshMode              StaticMeshMode;                                    // 0x0098(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-8 ])
	class UStaticMesh*                            Mesh;                                              // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                     ActorClass;                                        // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UMaterialInterface*>             OverrideMaterials;                                 // 0x00B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHISMBuilderSettings*                   OverrideInstancingSettings;                        // 0x00C0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, AdvancedDisplay, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C8[0x50];                                      // 0x00C8(0x0050)(Fixing Struct Size After Last Property [ Dumper-8 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProceduralScatterStaticMeshContentVariation">();
	}
	static class UProceduralScatterStaticMeshContentVariation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProceduralScatterStaticMeshContentVariation>();
	}
};

// Class Procedural.ProceduralScatterStaticMeshContentSettings
// 0x0018 (0x0080 - 0x0068)
class UProceduralScatterStaticMeshContentSettings final : public UProceduralScatterContentSettings
{
public:
	TSubclassOf<class UFoliageInstancedStaticMeshComponent> ComponentClass;                          // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ComponentTag;                                      // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHISMBuilderSettings*                   VariationsInstancingSettings;                      // 0x0078(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoClear, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProceduralScatterStaticMeshContentSettings">();
	}
	static class UProceduralScatterStaticMeshContentSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProceduralScatterStaticMeshContentSettings>();
	}
};

// Class Procedural.ProceduralSurfaceHeightMap
// 0x0010 (0x00C8 - 0x00B8)
class UProceduralSurfaceHeightMap final : public UProceduralFloatDataMap
{
public:
	bool                                          bNormalizedHeight;                                 // 0x00B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-8 ])
	struct FFloatInterval                         HeightRange;                                       // 0x00BC(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Struct Size After Last Property [ Dumper-8 ])

public:
	void SetHeightRangeMax(float InValue);
	void SetHeightRangeMin(float InValue);

	float GetHeightRangeMax() const;
	float GetHeightRangeMin() const;
	float GetValue(float InHeight) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProceduralSurfaceHeightMap">();
	}
	static class UProceduralSurfaceHeightMap* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProceduralSurfaceHeightMap>();
	}
};

// Class Procedural.ProceduralSurfaceSlopeAngleMap
// 0x0010 (0x00C8 - 0x00B8)
class UProceduralSurfaceSlopeAngleMap final : public UProceduralFloatDataMap
{
public:
	bool                                          bNormalizedSlopeAngle;                             // 0x00B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-8 ])
	struct FFloatInterval                         SlopeAngleRange;                                   // 0x00BC(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Struct Size After Last Property [ Dumper-8 ])

public:
	void SetSlopeAngleRangeMax(float InValue);
	void SetSlopeAngleRangeMin(float InValue);

	float GetSlopeAngleRangeMax() const;
	float GetSlopeAngleRangeMin() const;
	float GetValue(float InSlopeAngle) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProceduralSurfaceSlopeAngleMap">();
	}
	static class UProceduralSurfaceSlopeAngleMap* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProceduralSurfaceSlopeAngleMap>();
	}
};

// Class Procedural.ProceduralTextureFloatMap
// 0x0040 (0x00F8 - 0x00B8)
class UProceduralTextureFloatMap final : public UProceduralFloatDataMap
{
public:
	EProceduralTextureColorChannel                Channel;                                           // 0x00B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-8 ])
	struct FProceduralTextureSource               Source;                                            // 0x00C0(0x0038)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProceduralTextureFloatMap">();
	}
	static class UProceduralTextureFloatMap* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProceduralTextureFloatMap>();
	}
};

// Class Procedural.ProceduralTextureVectorMap
// 0x0038 (0x0270 - 0x0238)
class UProceduralTextureVectorMap final : public UProceduralVectorDataMap
{
public:
	struct FProceduralTextureSource               Source;                                            // 0x0238(0x0038)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProceduralTextureVectorMap">();
	}
	static class UProceduralTextureVectorMap* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProceduralTextureVectorMap>();
	}
};

// Class Procedural.ProceduralVertexColorMap
// 0x0008 (0x00C0 - 0x00B8)
class UProceduralVertexColorMap final : public UProceduralFloatDataMap
{
public:
	EProceduralTextureColorChannel                Channel;                                           // 0x00B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Struct Size After Last Property [ Dumper-8 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProceduralVertexColorMap">();
	}
	static class UProceduralVertexColorMap* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProceduralVertexColorMap>();
	}
};

}

