#pragma once

/*
* SDK generated by Dumper-8
*
* https://github.com/NotTacs/Dumper-8
*/

// Package: FortniteConversationUI

#include "Basic.hpp"

#include "FortniteConversationUI_classes.hpp"
#include "FortniteConversationUI_parameters.hpp"


namespace SDK
{

// Function FortniteConversationUI.FortBasicBrief.OnChoiceTextReceived
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const class FText&                      Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortBasicBrief::OnChoiceTextReceived(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBasicBrief", "OnChoiceTextReceived");

	Params::FortBasicBrief_OnChoiceTextReceived Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.FortItemTransactionBrief.OnTransactionInfoReceived
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortItem*                        Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemTransactionBrief::OnTransactionInfoReceived(class UFortItem* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemTransactionBrief", "OnTransactionInfoReceived");

	Params::FortItemTransactionBrief_OnTransactionInfoReceived Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.FortBuyBrief.OnDisplayUnavailability
// (Event, Protected, BlueprintEvent)
// Parameters:
// ECannotBuyReason                        CannotBuyReason                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortBuyBrief::OnDisplayUnavailability(ECannotBuyReason CannotBuyReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBuyBrief", "OnDisplayUnavailability");

	Params::FortBuyBrief_OnDisplayUnavailability Parms{};

	Parms.CannotBuyReason = CannotBuyReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.FortBuyBrief.OnPurchaseDataReceived
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   StackSize                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RemainingForSale                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortBuyBrief::OnPurchaseDataReceived(int32 StackSize, int32 RemainingForSale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBuyBrief", "OnPurchaseDataReceived");

	Params::FortBuyBrief_OnPurchaseDataReceived Parms{};

	Parms.StackSize = StackSize;
	Parms.RemainingForSale = RemainingForSale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.FortConversationMarker.OnInteractionRangeChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// EInteractionRange                       TargetInteractionRange                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortConversationMarker::OnInteractionRangeChanged(EInteractionRange TargetInteractionRange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConversationMarker", "OnInteractionRangeChanged");

	Params::FortConversationMarker_OnInteractionRangeChanged Parms{};

	Parms.TargetInteractionRange = TargetInteractionRange;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.FortConversationMarker.OnMessageShownOverActor
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                           OverActor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortConversationMarker::OnMessageShownOverActor(class AActor* OverActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConversationMarker", "OnMessageShownOverActor");

	Params::FortConversationMarker_OnMessageShownOverActor Parms{};

	Parms.OverActor = OverActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.FortConversationMarker.OnSetIndicatedActor
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                           NewIndicatorActor                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortConversationMarker::OnSetIndicatedActor(class AActor* NewIndicatorActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConversationMarker", "OnSetIndicatedActor");

	Params::FortConversationMarker_OnSetIndicatedActor Parms{};

	Parms.NewIndicatorActor = NewIndicatorActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.FortConversationScreen.EndConversation
// (Final, Native, Private)

void UFortConversationScreen::EndConversation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConversationScreen", "EndConversation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteConversationUI.FortConversationScreen.OnConversationOptionUnavailable
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortRadialSlot*                  SelectedEntry                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortConversationScreen::OnConversationOptionUnavailable(class UFortRadialSlot* SelectedEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConversationScreen", "OnConversationOptionUnavailable");

	Params::FortConversationScreen_OnConversationOptionUnavailable Parms{};

	Parms.SelectedEntry = SelectedEntry;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.FortConversationScreen.OnConversationStarted
// (Event, Protected, BlueprintEvent)

void UFortConversationScreen::OnConversationStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConversationScreen", "OnConversationStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteConversationUI.FortConversationScreen.OnItemSelected
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   OriginalIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortConversationScreen::OnItemSelected(int32 OriginalIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConversationScreen", "OnItemSelected");

	Params::FortConversationScreen_OnItemSelected Parms{};

	Parms.OriginalIndex = OriginalIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.FortConversationScreen.OnOptionsPopulated
// (Event, Protected, BlueprintEvent)

void UFortConversationScreen::OnOptionsPopulated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConversationScreen", "OnOptionsPopulated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteConversationUI.FortConversationScreen.OnSelectedItemAvailabilityChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsAvailable                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortConversationScreen::OnSelectedItemAvailabilityChanged(bool bIsAvailable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConversationScreen", "OnSelectedItemAvailabilityChanged");

	Params::FortConversationScreen_OnSelectedItemAvailabilityChanged Parms{};

	Parms.bIsAvailable = bIsAvailable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.FortConversationMessageWidget.OnMainMessageSet
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const class FText&                      NPCName                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class FText&                      MessageBody                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortConversationMessageWidget::OnMainMessageSet(const class FText& NPCName, const class FText& MessageBody)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConversationMessageWidget", "OnMainMessageSet");

	Params::FortConversationMessageWidget_OnMainMessageSet Parms{};

	Parms.NPCName = std::move(NPCName);
	Parms.MessageBody = std::move(MessageBody);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.FortConversationMessageWidget.OnMessageHidden
// (Event, Protected, BlueprintEvent)

void UFortConversationMessageWidget::OnMessageHidden()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConversationMessageWidget", "OnMessageHidden");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteConversationUI.FortConversationMessageWidget.OnMessageShown
// (Event, Protected, BlueprintEvent)

void UFortConversationMessageWidget::OnMessageShown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConversationMessageWidget", "OnMessageShown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteConversationUI.FortConversationMessageWidget.OnPreviewMessageSet
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const class FText&                      PreviewText                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortConversationMessageWidget::OnPreviewMessageSet(const class FText& PreviewText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConversationMessageWidget", "OnPreviewMessageSet");

	Params::FortConversationMessageWidget_OnPreviewMessageSet Parms{};

	Parms.PreviewText = std::move(PreviewText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.FortConversationMessageWidget.SetPreviewMessage
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FText&                      MessageToSet                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortConversationMessageWidget::SetPreviewMessage(const class FText& MessageToSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConversationMessageWidget", "SetPreviewMessage");

	Params::FortConversationMessageWidget_SetPreviewMessage Parms{};

	Parms.MessageToSet = std::move(MessageToSet);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteConversationUI.FortConversationOption.OnOptionConfirmed
// (Event, Public, BlueprintEvent)

void UFortConversationOption::OnOptionConfirmed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConversationOption", "OnOptionConfirmed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteConversationUI.FortConversationOption.OnSetupFromDisplayAsset
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UObject*                          DisplayAsset                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortConversationOption::OnSetupFromDisplayAsset(class UObject* DisplayAsset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConversationOption", "OnSetupFromDisplayAsset");

	Params::FortConversationOption_OnSetupFromDisplayAsset Parms{};

	Parms.DisplayAsset = DisplayAsset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.FortConversationOption.OnSetupFromItemDef
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortItem*                        Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortConversationOption::OnSetupFromItemDef(class UFortItem* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConversationOption", "OnSetupFromItemDef");

	Params::FortConversationOption_OnSetupFromItemDef Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.FortConversationOption.OnSetupPivotFromRadialInformation
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   NumElements                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortConversationOption::OnSetupPivotFromRadialInformation(int32 NumElements, int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConversationOption", "OnSetupPivotFromRadialInformation");

	Params::FortConversationOption_OnSetupPivotFromRadialInformation Parms{};

	Parms.NumElements = NumElements;
	Parms.ItemIndex = ItemIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.FortConversationOption.IsAvailable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortConversationOption::IsAvailable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConversationOption", "IsAvailable");

	Params::FortConversationOption_IsAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteConversationUI.FortConversationOptionsPanel.AddChildToDynamicPanel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          Content                                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPanelSlot*                       ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPanelSlot* UFortConversationOptionsPanel::AddChildToDynamicPanel(class UWidget* Content)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConversationOptionsPanel", "AddChildToDynamicPanel");

	Params::FortConversationOptionsPanel_AddChildToDynamicPanel Parms{};

	Parms.Content = Content;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteConversationUI.FortDuelBrief.DisplayLootItems
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const TArray<class UFortItem*>&         Items                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortDuelBrief::DisplayLootItems(const TArray<class UFortItem*>& Items)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDuelBrief", "DisplayLootItems");

	Params::FortDuelBrief_DisplayLootItems Parms{};

	Parms.Items = std::move(Items);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.FortQuestBrief.OnQuestExpirationTimeSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// const bool                              bDisplayExpirationTime                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestBrief::OnQuestExpirationTimeSet(const bool bDisplayExpirationTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestBrief", "OnQuestExpirationTimeSet");

	Params::FortQuestBrief_OnQuestExpirationTimeSet Parms{};

	Parms.bDisplayExpirationTime = bDisplayExpirationTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.FortQuestBrief.OnQuestInformationRecieved
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const class FText&                      Objective                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FFortRarityItemData&       RarityData                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              CategoryTag                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   XPReward                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MoneyReward                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestBrief::OnQuestInformationRecieved(const class FText& Objective, const struct FFortRarityItemData& RarityData, const struct FGameplayTag& CategoryTag, int32 XPReward, int32 MoneyReward)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestBrief", "OnQuestInformationRecieved");

	Params::FortQuestBrief_OnQuestInformationRecieved Parms{};

	Parms.Objective = std::move(Objective);
	Parms.RarityData = std::move(RarityData);
	Parms.CategoryTag = std::move(CategoryTag);
	Parms.XPReward = XPReward;
	Parms.MoneyReward = MoneyReward;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.FortTransactionStrip.OnTransactionInfoReceived
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   TransactionCost                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OwnedCurrency                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTransactionStrip::OnTransactionInfoReceived(int32 TransactionCost, int32 OwnedCurrency)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTransactionStrip", "OnTransactionInfoReceived");

	Params::FortTransactionStrip_OnTransactionInfoReceived Parms{};

	Parms.TransactionCost = TransactionCost;
	Parms.OwnedCurrency = OwnedCurrency;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.FortUpgradeBrief.OnUnableToUpgrade
// (Event, Protected, BlueprintEvent)
// Parameters:
// EFortWeaponUpgradeInteractionResult     CannotUpgradeCause                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUpgradeBrief::OnUnableToUpgrade(EFortWeaponUpgradeInteractionResult CannotUpgradeCause)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUpgradeBrief", "OnUnableToUpgrade");

	Params::FortUpgradeBrief_OnUnableToUpgrade Parms{};

	Parms.CannotUpgradeCause = CannotUpgradeCause;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.FortUpgradeBrief.OnUpgradeInfoReceived
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortItem*                        CurrentWeapon                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUpgradeBrief::OnUpgradeInfoReceived(class UFortItem* CurrentWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUpgradeBrief", "OnUpgradeInfoReceived");

	Params::FortUpgradeBrief_OnUpgradeInfoReceived Parms{};

	Parms.CurrentWeapon = CurrentWeapon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.MobileConversationScreen.OnHandleConfirmClicked
// (Final, Native, Protected)

void UMobileConversationScreen::OnHandleConfirmClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MobileConversationScreen", "OnHandleConfirmClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}

