#pragma once

/*
* SDK generated by Dumper-8
*
* https://github.com/NotTacs/Dumper-8
*/

// Package: MIDIDevice

#include "Basic.hpp"

#include "MIDIDevice_structs.hpp"


namespace SDK::Params
{

// Function MIDIDevice.MIDIDeviceManager.CreateMIDIDeviceController
// 0x0010 (0x0010 - 0x0000)
struct MIDIDeviceManager_CreateMIDIDeviceController final
{
public:
	int32                                         DeviceID;                                          // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MIDIBufferSize;                                    // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMIDIDeviceController*                  ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MIDIDevice.MIDIDeviceManager.CreateMIDIDeviceInputController
// 0x0010 (0x0010 - 0x0000)
struct MIDIDeviceManager_CreateMIDIDeviceInputController final
{
public:
	int32                                         DeviceID;                                          // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MIDIBufferSize;                                    // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMIDIDeviceInputController*             ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MIDIDevice.MIDIDeviceManager.CreateMIDIDeviceOutputController
// 0x0010 (0x0010 - 0x0000)
struct MIDIDeviceManager_CreateMIDIDeviceOutputController final
{
public:
	int32                                         DeviceID;                                          // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-8 ])
	class UMIDIDeviceOutputController*            ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MIDIDevice.MIDIDeviceManager.FindAllMIDIDeviceInfo
// 0x0020 (0x0020 - 0x0000)
struct MIDIDeviceManager_FindAllMIDIDeviceInfo final
{
public:
	TArray<struct FMIDIDeviceInfo>                OutMIDIInputDevices;                               // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMIDIDeviceInfo>                OutMIDIOutputDevices;                              // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MIDIDevice.MIDIDeviceManager.FindMIDIDevices
// 0x0010 (0x0010 - 0x0000)
struct MIDIDeviceManager_FindMIDIDevices final
{
public:
	TArray<struct FFoundMIDIDevice>               OutMIDIDevices;                                    // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MIDIDevice.MIDIDeviceManager.GetDefaultIMIDIInputDeviceID
// 0x0004 (0x0004 - 0x0000)
struct MIDIDeviceManager_GetDefaultIMIDIInputDeviceID final
{
public:
	int32                                         DeviceID;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MIDIDevice.MIDIDeviceManager.GetDefaultIMIDIOutputDeviceID
// 0x0004 (0x0004 - 0x0000)
struct MIDIDeviceManager_GetDefaultIMIDIOutputDeviceID final
{
public:
	int32                                         DeviceID;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MIDIDevice.MIDIDeviceManager.GetMIDIInputDeviceIDByName
// 0x0018 (0x0018 - 0x0000)
struct MIDIDeviceManager_GetMIDIInputDeviceIDByName final
{
public:
	class FString                                 DeviceName;                                        // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DeviceID;                                          // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-8 ])
};

// Function MIDIDevice.MIDIDeviceManager.GetMIDIOutputDeviceIDByName
// 0x0018 (0x0018 - 0x0000)
struct MIDIDeviceManager_GetMIDIOutputDeviceIDByName final
{
public:
	class FString                                 DeviceName;                                        // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DeviceID;                                          // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-8 ])
};

// Function MIDIDevice.MIDIDeviceOutputController.SendMIDIChannelAftertouch
// 0x0008 (0x0008 - 0x0000)
struct MIDIDeviceOutputController_SendMIDIChannelAftertouch final
{
public:
	int32                                         Channel;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Amount;                                            // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MIDIDevice.MIDIDeviceOutputController.SendMIDIControlChange
// 0x000C (0x000C - 0x0000)
struct MIDIDeviceOutputController_SendMIDIControlChange final
{
public:
	int32                                         Channel;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Type;                                              // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Value;                                             // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MIDIDevice.MIDIDeviceOutputController.SendMIDIEvent
// 0x0010 (0x0010 - 0x0000)
struct MIDIDeviceOutputController_SendMIDIEvent final
{
public:
	EMIDIEventType                                EventType;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-8 ])
	int32                                         Channel;                                           // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         data1;                                             // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         data2;                                             // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MIDIDevice.MIDIDeviceOutputController.SendMIDINoteAftertouch
// 0x000C (0x000C - 0x0000)
struct MIDIDeviceOutputController_SendMIDINoteAftertouch final
{
public:
	int32                                         Channel;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Note;                                              // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Amount;                                            // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MIDIDevice.MIDIDeviceOutputController.SendMIDINoteOff
// 0x000C (0x000C - 0x0000)
struct MIDIDeviceOutputController_SendMIDINoteOff final
{
public:
	int32                                         Channel;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Note;                                              // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Velocity;                                          // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MIDIDevice.MIDIDeviceOutputController.SendMIDINoteOn
// 0x000C (0x000C - 0x0000)
struct MIDIDeviceOutputController_SendMIDINoteOn final
{
public:
	int32                                         Channel;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Note;                                              // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Velocity;                                          // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MIDIDevice.MIDIDeviceOutputController.SendMIDIPitchBend
// 0x0008 (0x0008 - 0x0000)
struct MIDIDeviceOutputController_SendMIDIPitchBend final
{
public:
	int32                                         Channel;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Pitch;                                             // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MIDIDevice.MIDIDeviceOutputController.SendMIDIProgramChange
// 0x0008 (0x0008 - 0x0000)
struct MIDIDeviceOutputController_SendMIDIProgramChange final
{
public:
	int32                                         Channel;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ProgramNumber;                                     // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

}

