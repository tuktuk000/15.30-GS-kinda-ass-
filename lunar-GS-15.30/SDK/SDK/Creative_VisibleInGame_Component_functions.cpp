#pragma once

/*
* SDK generated by Dumper-8
*
* https://github.com/NotTacs/Dumper-8
*/

// Package: Creative_VisibleInGame_Component

#include "Basic.hpp"

#include "Creative_VisibleInGame_Component_classes.hpp"
#include "Creative_VisibleInGame_Component_parameters.hpp"


namespace SDK
{

// Function Creative_VisibleInGame_Component.Creative_VisibleInGame_Component_C.ExecuteUbergraph_Creative_VisibleInGame_Component
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCreative_VisibleInGame_Component_C::ExecuteUbergraph_Creative_VisibleInGame_Component(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_VisibleInGame_Component_C", "ExecuteUbergraph_Creative_VisibleInGame_Component");

	Params::Creative_VisibleInGame_Component_C_ExecuteUbergraph_Creative_VisibleInGame_Component Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Creative_VisibleInGame_Component.Creative_VisibleInGame_Component_C.OnMinigameStateChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortMinigame*                    Minigame                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EFortMinigameState                      MinigameState                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCreative_VisibleInGame_Component_C::OnMinigameStateChanged(class AFortMinigame* Minigame, EFortMinigameState MinigameState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_VisibleInGame_Component_C", "OnMinigameStateChanged");

	Params::Creative_VisibleInGame_Component_C_OnMinigameStateChanged Parms{};

	Parms.Minigame = Minigame;
	Parms.MinigameState = MinigameState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Creative_VisibleInGame_Component.Creative_VisibleInGame_Component_C.Bind Minigame Events
// (BlueprintCallable, BlueprintEvent)

void UCreative_VisibleInGame_Component_C::Bind_Minigame_Events()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_VisibleInGame_Component_C", "Bind Minigame Events");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Creative_VisibleInGame_Component.Creative_VisibleInGame_Component_C.OnPlayModeChangedDelegate
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortMinigame*                    Minigame                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsInPlayMode                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCreative_VisibleInGame_Component_C::OnPlayModeChangedDelegate(class AFortMinigame* Minigame, bool bIsInPlayMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_VisibleInGame_Component_C", "OnPlayModeChangedDelegate");

	Params::Creative_VisibleInGame_Component_C_OnPlayModeChangedDelegate Parms{};

	Parms.Minigame = Minigame;
	Parms.bIsInPlayMode = bIsInPlayMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Creative_VisibleInGame_Component.Creative_VisibleInGame_Component_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UCreative_VisibleInGame_Component_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_VisibleInGame_Component_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Creative_VisibleInGame_Component.Creative_VisibleInGame_Component_C.Get Visibility Components
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class USceneComponent*>*         Components                                             (Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)

void UCreative_VisibleInGame_Component_C::Get_Visibility_Components(TArray<class USceneComponent*>* Components)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_VisibleInGame_Component_C", "Get Visibility Components");

	Params::Creative_VisibleInGame_Component_C_Get_Visibility_Components Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Components != nullptr)
		*Components = std::move(Parms.Components);
}


// Function Creative_VisibleInGame_Component.Creative_VisibleInGame_Component_C.Update Visibility
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UCreative_VisibleInGame_Component_C::Update_Visibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_VisibleInGame_Component_C", "Update Visibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Creative_VisibleInGame_Component.Creative_VisibleInGame_Component_C.Set Visiblity During Phase
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EVisibleInGameState                     New_Visible_During_Phase                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCreative_VisibleInGame_Component_C::Set_Visiblity_During_Phase(EVisibleInGameState New_Visible_During_Phase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_VisibleInGame_Component_C", "Set Visiblity During Phase");

	Params::Creative_VisibleInGame_Component_C_Set_Visiblity_During_Phase Parms{};

	Parms.New_Visible_During_Phase = New_Visible_During_Phase;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Creative_VisibleInGame_Component.Creative_VisibleInGame_Component_C.Update Component Visibility
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  Component                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCreative_VisibleInGame_Component_C::Update_Component_Visibility(class USceneComponent* Component, bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_VisibleInGame_Component_C", "Update Component Visibility");

	Params::Creative_VisibleInGame_Component_C_Update_Component_Visibility Parms{};

	Parms.Component = Component;
	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Creative_VisibleInGame_Component.Creative_VisibleInGame_Component_C.Update Primitive Component Collision
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              Primitive_Component                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCreative_VisibleInGame_Component_C::Update_Primitive_Component_Collision(class UPrimitiveComponent* Primitive_Component, bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_VisibleInGame_Component_C", "Update Primitive Component Collision");

	Params::Creative_VisibleInGame_Component_C_Update_Primitive_Component_Collision Parms{};

	Parms.Primitive_Component = Primitive_Component;
	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Creative_VisibleInGame_Component.Creative_VisibleInGame_Component_C.Update Audio Component
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAudioComponent*                  Audio_Component                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCreative_VisibleInGame_Component_C::Update_Audio_Component(class UAudioComponent* Audio_Component, bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_VisibleInGame_Component_C", "Update Audio Component");

	Params::Creative_VisibleInGame_Component_C_Update_Audio_Component Parms{};

	Parms.Audio_Component = Audio_Component;
	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Creative_VisibleInGame_Component.Creative_VisibleInGame_Component_C.Update Particle Component
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UParticleSystemComponent*         Particle_Component                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCreative_VisibleInGame_Component_C::Update_Particle_Component(class UParticleSystemComponent* Particle_Component, bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_VisibleInGame_Component_C", "Update Particle Component");

	Params::Creative_VisibleInGame_Component_C_Update_Particle_Component Parms{};

	Parms.Particle_Component = Particle_Component;
	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Creative_VisibleInGame_Component.Creative_VisibleInGame_Component_C.Is In Play Mode
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UCreative_VisibleInGame_Component_C::Is_In_Play_Mode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_VisibleInGame_Component_C", "Is In Play Mode");

	Params::Creative_VisibleInGame_Component_C_Is_In_Play_Mode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Creative_VisibleInGame_Component.Creative_VisibleInGame_Component_C.Set Visibility Components
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class USceneComponent*>&         Scene_Components                                       (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)

void UCreative_VisibleInGame_Component_C::Set_Visibility_Components(TArray<class USceneComponent*>& Scene_Components)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_VisibleInGame_Component_C", "Set Visibility Components");

	Params::Creative_VisibleInGame_Component_C_Set_Visibility_Components Parms{};

	Parms.Scene_Components = std::move(Scene_Components);

	UObject::ProcessEvent(Func, &Parms);

	Scene_Components = std::move(Parms.Scene_Components);
}


// Function Creative_VisibleInGame_Component.Creative_VisibleInGame_Component_C.OnRep_VisibleDuringPhase
// (BlueprintCallable, BlueprintEvent)

void UCreative_VisibleInGame_Component_C::OnRep_VisibleDuringPhase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_VisibleInGame_Component_C", "OnRep_VisibleDuringPhase");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Creative_VisibleInGame_Component.Creative_VisibleInGame_Component_C.Should Be Visible
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   Visible                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCreative_VisibleInGame_Component_C::Should_Be_Visible(bool* Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_VisibleInGame_Component_C", "Should Be Visible");

	Params::Creative_VisibleInGame_Component_C_Should_Be_Visible Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Visible != nullptr)
		*Visible = Parms.Visible;
}


// Function Creative_VisibleInGame_Component.Creative_VisibleInGame_Component_C.Set Visibility Components with Collision
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TMap<class USceneComponent*, ECollisionEnabled>&Collision_Overrides                                    (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void UCreative_VisibleInGame_Component_C::Set_Visibility_Components_with_Collision(const TMap<class USceneComponent*, ECollisionEnabled>& Collision_Overrides)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_VisibleInGame_Component_C", "Set Visibility Components with Collision");

	Params::Creative_VisibleInGame_Component_C_Set_Visibility_Components_with_Collision Parms{};

	Parms.Collision_Overrides = std::move(Collision_Overrides);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Creative_VisibleInGame_Component.Creative_VisibleInGame_Component_C.Update Array Visibility
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class USceneComponent*>&         Array                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)

void UCreative_VisibleInGame_Component_C::Update_Array_Visibility(TArray<class USceneComponent*>& Array)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_VisibleInGame_Component_C", "Update Array Visibility");

	Params::Creative_VisibleInGame_Component_C_Update_Array_Visibility Parms{};

	Parms.Array = std::move(Array);

	UObject::ProcessEvent(Func, &Parms);

	Array = std::move(Parms.Array);
}


// Function Creative_VisibleInGame_Component.Creative_VisibleInGame_Component_C.SetForcedVisibilityDuringGame
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// Enum_ForcedValueDuringGame              NewForcedVisibilityDuringGame                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCreative_VisibleInGame_Component_C::SetForcedVisibilityDuringGame(Enum_ForcedValueDuringGame NewForcedVisibilityDuringGame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_VisibleInGame_Component_C", "SetForcedVisibilityDuringGame");

	Params::Creative_VisibleInGame_Component_C_SetForcedVisibilityDuringGame Parms{};

	Parms.NewForcedVisibilityDuringGame = NewForcedVisibilityDuringGame;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Creative_VisibleInGame_Component.Creative_VisibleInGame_Component_C.OnRep_ForcedVisibilityDuringGame
// (BlueprintCallable, BlueprintEvent)

void UCreative_VisibleInGame_Component_C::OnRep_ForcedVisibilityDuringGame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_VisibleInGame_Component_C", "OnRep_ForcedVisibilityDuringGame");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Creative_VisibleInGame_Component.Creative_VisibleInGame_Component_C.Update Foliage
// (Public, BlueprintCallable, BlueprintEvent)

void UCreative_VisibleInGame_Component_C::Update_Foliage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_VisibleInGame_Component_C", "Update Foliage");

	UObject::ProcessEvent(Func, nullptr);
}

}

