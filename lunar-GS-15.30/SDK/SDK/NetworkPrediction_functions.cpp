#pragma once

/*
* SDK generated by Dumper-8
*
* https://github.com/NotTacs/Dumper-8
*/

// Package: NetworkPrediction

#include "Basic.hpp"

#include "NetworkPrediction_classes.hpp"
#include "NetworkPrediction_parameters.hpp"


namespace SDK
{

// Function NetworkPrediction.NetworkPredictionComponent.ServerReceiveClientInput
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// const struct FServerReplicationRPCParameter&ProxyParameter                                         (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UNetworkPredictionComponent::ServerReceiveClientInput(const struct FServerReplicationRPCParameter& ProxyParameter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetworkPredictionComponent", "ServerReceiveClientInput");

	Params::NetworkPredictionComponent_ServerReceiveClientInput Parms{};

	Parms.ProxyParameter = std::move(ProxyParameter);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

