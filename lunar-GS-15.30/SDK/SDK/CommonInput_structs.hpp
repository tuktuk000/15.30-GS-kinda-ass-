#pragma once

/*
* SDK generated by Dumper-8
*
* https://github.com/NotTacs/Dumper-8
*/

// Package: CommonInput

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK
{

// Enum CommonInput.ECommonInputType
// NumValues: 0x0005
enum class ECommonInputType : uint8
{
	MouseAndKeyboard                         = 0,
	Gamepad                                  = 1,
	Touch                                    = 2,
	Count                                    = 3,
	ECommonInputType_MAX                     = 4,
};

// Enum CommonInput.ECommonGamepadType
// NumValues: 0x0008
enum class ECommonGamepadType : uint8
{
	XboxOneController                        = 0,
	PS4Controller                            = 1,
	SwitchController                         = 2,
	GenericController                        = 3,
	XboxSeriesXController                    = 4,
	PS5Controller                            = 5,
	Count                                    = 6,
	ECommonGamepadType_MAX                   = 7,
};

// Enum CommonInput.ECommonPlatformType
// NumValues: 0x000B
enum class ECommonPlatformType : uint8
{
	PC                                       = 0,
	Mac                                      = 1,
	PS4                                      = 2,
	XBox                                     = 3,
	IOS                                      = 4,
	Android                                  = 5,
	Switch                                   = 6,
	XSX                                      = 7,
	PS5                                      = 8,
	Count                                    = 9,
	ECommonPlatformType_MAX                  = 10,
};

// ScriptStruct CommonInput.CommonInputPlatformData
// 0x0028 (0x0028 - 0x0000)
struct FCommonInputPlatformData final
{
public:
	bool                                          bSupported;                                        // 0x0000(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ECommonInputType                              DefaultInputType;                                  // 0x0001(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bSupportsMouseAndKeyboard;                         // 0x0002(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bSupportsGamepad;                                  // 0x0003(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ECommonGamepadType                            DefaultGamepadType;                                // 0x0004(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bCanChangeGamepadType;                             // 0x0005(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bSupportsTouch;                                    // 0x0006(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-8 ])
	TArray<TSoftClassPtr<class UClass>>           ControllerData;                                    // 0x0008(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class UCommonInputControllerData>> ControllerDataClasses;                     // 0x0018(0x0010)(ZeroConstructor, Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};

// ScriptStruct CommonInput.CommonInputKeySetBrushConfiguration
// 0x0098 (0x0098 - 0x0000)
struct FCommonInputKeySetBrushConfiguration final
{
public:
	TArray<struct FKey>                           Keys;                                              // 0x0000(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                            KeyBrush;                                          // 0x0010(0x0088)(Edit, NativeAccessSpecifierPublic)
};

// ScriptStruct CommonInput.CommonInputKeyBrushConfiguration
// 0x00A0 (0x00A0 - 0x0000)
struct FCommonInputKeyBrushConfiguration final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                            KeyBrush;                                          // 0x0018(0x0088)(Edit, NativeAccessSpecifierPublic)
};

}

