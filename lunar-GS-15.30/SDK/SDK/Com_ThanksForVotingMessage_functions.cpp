#pragma once

/*
* SDK generated by Dumper-8
*
* https://github.com/NotTacs/Dumper-8
*/

// Package: Com_ThanksForVotingMessage

#include "Basic.hpp"

#include "Com_ThanksForVotingMessage_classes.hpp"
#include "Com_ThanksForVotingMessage_parameters.hpp"


namespace SDK
{

// Function Com_ThanksForVotingMessage.Com_ThanksForVotingMessage_C.TapToClose
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FPointerEvent&             MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UCom_ThanksForVotingMessage_C::TapToClose(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Com_ThanksForVotingMessage_C", "TapToClose");

	Params::Com_ThanksForVotingMessage_C_TapToClose Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Com_ThanksForVotingMessage.Com_ThanksForVotingMessage_C.FadeOutPopup
// (Event, Protected, BlueprintEvent)

void UCom_ThanksForVotingMessage_C::FadeOutPopup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Com_ThanksForVotingMessage_C", "FadeOutPopup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Com_ThanksForVotingMessage.Com_ThanksForVotingMessage_C.FadeInPopup
// (Event, Protected, BlueprintEvent)

void UCom_ThanksForVotingMessage_C::FadeInPopup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Com_ThanksForVotingMessage_C", "FadeInPopup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Com_ThanksForVotingMessage.Com_ThanksForVotingMessage_C.ExecuteUbergraph_Com_ThanksForVotingMessage
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCom_ThanksForVotingMessage_C::ExecuteUbergraph_Com_ThanksForVotingMessage(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Com_ThanksForVotingMessage_C", "ExecuteUbergraph_Com_ThanksForVotingMessage");

	Params::Com_ThanksForVotingMessage_C_ExecuteUbergraph_Com_ThanksForVotingMessage Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

