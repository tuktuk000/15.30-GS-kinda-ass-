#pragma once

/*
* SDK generated by Dumper-8
*
* https://github.com/NotTacs/Dumper-8
*/

// Package: BattlePassRewardChallenges

#include "Basic.hpp"

#include "BattlePassRewardChallenges_classes.hpp"
#include "BattlePassRewardChallenges_parameters.hpp"


namespace SDK
{

// Function BattlePassRewardChallenges.BattlePassRewardChallenges_C.OnClearEntries
// (Event, Protected, BlueprintEvent)

void UBattlePassRewardChallenges_C::OnClearEntries()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassRewardChallenges_C", "OnClearEntries");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePassRewardChallenges.BattlePassRewardChallenges_C.OnInitPrerequisites
// (Event, Protected, BlueprintEvent)

void UBattlePassRewardChallenges_C::OnInitPrerequisites()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassRewardChallenges_C", "OnInitPrerequisites");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePassRewardChallenges.BattlePassRewardChallenges_C.OnAllChalengesCompleted
// (Event, Protected, BlueprintEvent)

void UBattlePassRewardChallenges_C::OnAllChalengesCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassRewardChallenges_C", "OnAllChalengesCompleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePassRewardChallenges.BattlePassRewardChallenges_C.OnInitChallenges
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const class FText&                      ChallengesTitle                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBattlePassRewardChallenges_C::OnInitChallenges(const class FText& ChallengesTitle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassRewardChallenges_C", "OnInitChallenges");

	Params::BattlePassRewardChallenges_C_OnInitChallenges Parms{};

	Parms.ChallengesTitle = std::move(ChallengesTitle);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassRewardChallenges.BattlePassRewardChallenges_C.OnSetChallengesSwitcher
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bShowChallenges                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePassRewardChallenges_C::OnSetChallengesSwitcher(bool bShowChallenges)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassRewardChallenges_C", "OnSetChallengesSwitcher");

	Params::BattlePassRewardChallenges_C_OnSetChallengesSwitcher Parms{};

	Parms.bShowChallenges = bShowChallenges;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassRewardChallenges.BattlePassRewardChallenges_C.ExecuteUbergraph_BattlePassRewardChallenges
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePassRewardChallenges_C::ExecuteUbergraph_BattlePassRewardChallenges(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassRewardChallenges_C", "ExecuteUbergraph_BattlePassRewardChallenges");

	Params::BattlePassRewardChallenges_C_ExecuteUbergraph_BattlePassRewardChallenges Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

