#pragma once

/*
* SDK generated by Dumper-8
*
* https://github.com/NotTacs/Dumper-8
*/

// Package: GCNL_Nightmare_Cloak_Loop

#include "Basic.hpp"

#include "GCNL_Nightmare_Cloak_Loop_classes.hpp"
#include "GCNL_Nightmare_Cloak_Loop_parameters.hpp"


namespace SDK
{

// Function GCNL_Nightmare_Cloak_Loop.GCNL_Nightmare_Cloak_Loop_C.ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGCNL_Nightmare_Cloak_Loop_C::ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCNL_Nightmare_Cloak_Loop_C", "ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop");

	Params::GCNL_Nightmare_Cloak_Loop_C_ExecuteUbergraph_GCNL_Nightmare_Cloak_Loop Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GCNL_Nightmare_Cloak_Loop.GCNL_Nightmare_Cloak_Loop_C.OnRemovalGeneric
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class AActor*                           MyTarget                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayCueParameters&    Parameters                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// const TArray<class UFXSystemComponent*>&ParticleComponents                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
// const TArray<class UAudioComponent*>&   AudioComponents                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
// class UMatineeCameraShake*              BurstCameraShakeInstance                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ADecalActor*                      BurstDecalInstance                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGCNL_Nightmare_Cloak_Loop_C::OnRemovalGeneric(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters, const TArray<class UFXSystemComponent*>& ParticleComponents, const TArray<class UAudioComponent*>& AudioComponents, class UMatineeCameraShake* BurstCameraShakeInstance, class ADecalActor* BurstDecalInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCNL_Nightmare_Cloak_Loop_C", "OnRemovalGeneric");

	Params::GCNL_Nightmare_Cloak_Loop_C_OnRemovalGeneric Parms{};

	Parms.MyTarget = MyTarget;
	Parms.Parameters = std::move(Parameters);
	Parms.ParticleComponents = std::move(ParticleComponents);
	Parms.AudioComponents = std::move(AudioComponents);
	Parms.BurstCameraShakeInstance = BurstCameraShakeInstance;
	Parms.BurstDecalInstance = BurstDecalInstance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GCNL_Nightmare_Cloak_Loop.GCNL_Nightmare_Cloak_Loop_C.Initialize Player Skeletal Meshes
// (BlueprintCallable, BlueprintEvent)

void AGCNL_Nightmare_Cloak_Loop_C::Initialize_Player_Skeletal_Meshes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCNL_Nightmare_Cloak_Loop_C", "Initialize Player Skeletal Meshes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GCNL_Nightmare_Cloak_Loop.GCNL_Nightmare_Cloak_Loop_C.UpdateTeamVisbility
// (BlueprintCallable, BlueprintEvent)

void AGCNL_Nightmare_Cloak_Loop_C::UpdateTeamVisbility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCNL_Nightmare_Cloak_Loop_C", "UpdateTeamVisbility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GCNL_Nightmare_Cloak_Loop.GCNL_Nightmare_Cloak_Loop_C.SetMaterialCloaked
// (BlueprintCallable, BlueprintEvent)

void AGCNL_Nightmare_Cloak_Loop_C::SetMaterialCloaked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCNL_Nightmare_Cloak_Loop_C", "SetMaterialCloaked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GCNL_Nightmare_Cloak_Loop.GCNL_Nightmare_Cloak_Loop_C.EndedInteract
// (BlueprintCallable, BlueprintEvent)

void AGCNL_Nightmare_Cloak_Loop_C::EndedInteract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCNL_Nightmare_Cloak_Loop_C", "EndedInteract");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GCNL_Nightmare_Cloak_Loop.GCNL_Nightmare_Cloak_Loop_C.StartedInteract
// (BlueprintCallable, BlueprintEvent)

void AGCNL_Nightmare_Cloak_Loop_C::StartedInteract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCNL_Nightmare_Cloak_Loop_C", "StartedInteract");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GCNL_Nightmare_Cloak_Loop.GCNL_Nightmare_Cloak_Loop_C.SetMaterialUncloaked
// (BlueprintCallable, BlueprintEvent)

void AGCNL_Nightmare_Cloak_Loop_C::SetMaterialUncloaked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCNL_Nightmare_Cloak_Loop_C", "SetMaterialUncloaked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GCNL_Nightmare_Cloak_Loop.GCNL_Nightmare_Cloak_Loop_C.Audio Tick
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Velocity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGCNL_Nightmare_Cloak_Loop_C::Audio_Tick(float Velocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCNL_Nightmare_Cloak_Loop_C", "Audio Tick");

	Params::GCNL_Nightmare_Cloak_Loop_C_Audio_Tick Parms{};

	Parms.Velocity = Velocity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GCNL_Nightmare_Cloak_Loop.GCNL_Nightmare_Cloak_Loop_C.ExpireWarningTick
// (BlueprintCallable, BlueprintEvent)

void AGCNL_Nightmare_Cloak_Loop_C::ExpireWarningTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCNL_Nightmare_Cloak_Loop_C", "ExpireWarningTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GCNL_Nightmare_Cloak_Loop.GCNL_Nightmare_Cloak_Loop_C.ClearExpireTell
// (BlueprintCallable, BlueprintEvent)

void AGCNL_Nightmare_Cloak_Loop_C::ClearExpireTell()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCNL_Nightmare_Cloak_Loop_C", "ClearExpireTell");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GCNL_Nightmare_Cloak_Loop.GCNL_Nightmare_Cloak_Loop_C.BeginExpireTell
// (BlueprintCallable, BlueprintEvent)

void AGCNL_Nightmare_Cloak_Loop_C::BeginExpireTell()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCNL_Nightmare_Cloak_Loop_C", "BeginExpireTell");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GCNL_Nightmare_Cloak_Loop.GCNL_Nightmare_Cloak_Loop_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGCNL_Nightmare_Cloak_Loop_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCNL_Nightmare_Cloak_Loop_C", "ReceiveTick");

	Params::GCNL_Nightmare_Cloak_Loop_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GCNL_Nightmare_Cloak_Loop.GCNL_Nightmare_Cloak_Loop_C.OnLoopingStartGeneric
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class AActor*                           MyTarget                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayCueParameters&    Parameters                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// const TArray<class UFXSystemComponent*>&ParticleComponents                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
// const TArray<class UAudioComponent*>&   AudioComponents                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)

void AGCNL_Nightmare_Cloak_Loop_C::OnLoopingStartGeneric(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters, const TArray<class UFXSystemComponent*>& ParticleComponents, const TArray<class UAudioComponent*>& AudioComponents)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCNL_Nightmare_Cloak_Loop_C", "OnLoopingStartGeneric");

	Params::GCNL_Nightmare_Cloak_Loop_C_OnLoopingStartGeneric Parms{};

	Parms.MyTarget = MyTarget;
	Parms.Parameters = std::move(Parameters);
	Parms.ParticleComponents = std::move(ParticleComponents);
	Parms.AudioComponents = std::move(AudioComponents);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GCNL_Nightmare_Cloak_Loop.GCNL_Nightmare_Cloak_Loop_C.Timeline_InteractionFadeInOut__UpdateFunc
// (BlueprintEvent)

void AGCNL_Nightmare_Cloak_Loop_C::Timeline_InteractionFadeInOut__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCNL_Nightmare_Cloak_Loop_C", "Timeline_InteractionFadeInOut__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GCNL_Nightmare_Cloak_Loop.GCNL_Nightmare_Cloak_Loop_C.Timeline_InteractionFadeInOut__FinishedFunc
// (BlueprintEvent)

void AGCNL_Nightmare_Cloak_Loop_C::Timeline_InteractionFadeInOut__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCNL_Nightmare_Cloak_Loop_C", "Timeline_InteractionFadeInOut__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GCNL_Nightmare_Cloak_Loop.GCNL_Nightmare_Cloak_Loop_C.ShouldRenderAsLocalPlayer
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AGCNL_Nightmare_Cloak_Loop_C::ShouldRenderAsLocalPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCNL_Nightmare_Cloak_Loop_C", "ShouldRenderAsLocalPlayer");

	Params::GCNL_Nightmare_Cloak_Loop_C_ShouldRenderAsLocalPlayer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GCNL_Nightmare_Cloak_Loop.GCNL_Nightmare_Cloak_Loop_C.IsPlayerControllerFriendly
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AController*                      PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Is_Friendly_Player                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AGCNL_Nightmare_Cloak_Loop_C::IsPlayerControllerFriendly(class AController* PlayerController, bool* Is_Friendly_Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCNL_Nightmare_Cloak_Loop_C", "IsPlayerControllerFriendly");

	Params::GCNL_Nightmare_Cloak_Loop_C_IsPlayerControllerFriendly Parms{};

	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);

	if (Is_Friendly_Player != nullptr)
		*Is_Friendly_Player = Parms.Is_Friendly_Player;
}


// Function GCNL_Nightmare_Cloak_Loop.GCNL_Nightmare_Cloak_Loop_C.ApplyCloakMaterialOverride
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AGCNL_Nightmare_Cloak_Loop_C::ApplyCloakMaterialOverride()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCNL_Nightmare_Cloak_Loop_C", "ApplyCloakMaterialOverride");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GCNL_Nightmare_Cloak_Loop.GCNL_Nightmare_Cloak_Loop_C.RemoveCloakMaterialOverride
// (Public, BlueprintCallable, BlueprintEvent)

void AGCNL_Nightmare_Cloak_Loop_C::RemoveCloakMaterialOverride()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCNL_Nightmare_Cloak_Loop_C", "RemoveCloakMaterialOverride");

	UObject::ProcessEvent(Func, nullptr);
}

}

