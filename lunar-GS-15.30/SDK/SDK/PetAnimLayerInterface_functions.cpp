#pragma once

/*
* SDK generated by Dumper-8
*
* https://github.com/NotTacs/Dumper-8
*/

// Package: PetAnimLayerInterface

#include "Basic.hpp"

#include "PetAnimLayerInterface_classes.hpp"
#include "PetAnimLayerInterface_parameters.hpp"


namespace SDK
{

// Function PetAnimLayerInterface.PetAnimLayerInterface_C.PetFullOverrideLayer
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FPoseLink&                 InPose                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink*                       PetFullOverrideLayer_0                                 (Parm, OutParm, NoDestructor)

void IPetAnimLayerInterface_C::PetFullOverrideLayer(const struct FPoseLink& InPose, struct FPoseLink* PetFullOverrideLayer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("PetAnimLayerInterface_C", "PetFullOverrideLayer");

	Params::PetAnimLayerInterface_C_PetFullOverrideLayer Parms{};

	Parms.InPose = std::move(InPose);

	AsUObject()->ProcessEvent(Func, &Parms);

	if (PetFullOverrideLayer_0 != nullptr)
		*PetFullOverrideLayer_0 = std::move(Parms.PetFullOverrideLayer_0);
}


// Function PetAnimLayerInterface.PetAnimLayerInterface_C.PetSkeletalControlLayer
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FPoseLink&                 Pose                                                   (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   LookAtOverrideInput                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   LookAtTargetLocationInput                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LegIKAlphaOverride                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   HandIKAlphaOverride                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FPoseLink*                       PetSkeletalControlLayer_0                              (Parm, OutParm, NoDestructor)

void IPetAnimLayerInterface_C::PetSkeletalControlLayer(const struct FPoseLink& Pose, float LookAtOverrideInput, const struct FVector& LookAtTargetLocationInput, float LegIKAlphaOverride, float HandIKAlphaOverride, struct FPoseLink* PetSkeletalControlLayer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("PetAnimLayerInterface_C", "PetSkeletalControlLayer");

	Params::PetAnimLayerInterface_C_PetSkeletalControlLayer Parms{};

	Parms.Pose = std::move(Pose);
	Parms.LookAtOverrideInput = LookAtOverrideInput;
	Parms.LookAtTargetLocationInput = std::move(LookAtTargetLocationInput);
	Parms.LegIKAlphaOverride = LegIKAlphaOverride;
	Parms.HandIKAlphaOverride = HandIKAlphaOverride;

	AsUObject()->ProcessEvent(Func, &Parms);

	if (PetSkeletalControlLayer_0 != nullptr)
		*PetSkeletalControlLayer_0 = std::move(Parms.PetSkeletalControlLayer_0);
}

}

