#pragma once

/*
* SDK generated by Dumper-8
*
* https://github.com/NotTacs/Dumper-8
*/

// Package: LiveLinkCurveDebugUI

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class LiveLinkCurveDebugUI.LiveLinkDebuggerBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class ULiveLinkDebuggerBlueprintLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void DisplayLiveLinkDebugger(const class FString& SubjectName);
	static void HideLiveLinkDebugger();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LiveLinkDebuggerBlueprintLibrary">();
	}
	static class ULiveLinkDebuggerBlueprintLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULiveLinkDebuggerBlueprintLibrary>();
	}
};

// Class LiveLinkCurveDebugUI.LiveLinkDebuggerSettings
// 0x0058 (0x0080 - 0x0028)
class ULiveLinkDebuggerSettings final : public UObject
{
public:
	struct FSlateColor                            MinBarColor;                                       // 0x0028(0x0028)(Edit, Config, NativeAccessSpecifierPublic)
	struct FSlateColor                            MaxBarColor;                                       // 0x0050(0x0028)(Edit, Config, NativeAccessSpecifierPublic)
	float                                         DPIScaleMultiplier;                                // 0x0078(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Struct Size After Last Property [ Dumper-8 ])

public:
	struct FSlateColor GetBarColorForCurveValue(float CurveValue) const;
	float GetDPIScaleBasedOnSize(const struct FIntPoint& Size) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LiveLinkDebuggerSettings">();
	}
	static class ULiveLinkDebuggerSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULiveLinkDebuggerSettings>();
	}
};

}

