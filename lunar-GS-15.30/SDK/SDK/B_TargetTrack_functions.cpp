#pragma once

/*
* SDK generated by Dumper-8
*
* https://github.com/NotTacs/Dumper-8
*/

// Package: B_TargetTrack

#include "Basic.hpp"

#include "B_TargetTrack_classes.hpp"
#include "B_TargetTrack_parameters.hpp"


namespace SDK
{

// Function B_TargetTrack.B_TargetTrack_C.ExecuteUbergraph_B_TargetTrack
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_TargetTrack_C::ExecuteUbergraph_B_TargetTrack(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_TargetTrack_C", "ExecuteUbergraph_B_TargetTrack");

	Params::B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_TargetTrack.B_TargetTrack_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void AB_TargetTrack_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_TargetTrack_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_TargetTrack.B_TargetTrack_C.Stop Move Target Audio
// (BlueprintCallable, BlueprintEvent)

void AB_TargetTrack_C::Stop_Move_Target_Audio()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_TargetTrack_C", "Stop Move Target Audio");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_TargetTrack.B_TargetTrack_C.Move Target Audio
// (BlueprintCallable, BlueprintEvent)

void AB_TargetTrack_C::Move_Target_Audio()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_TargetTrack_C", "Move Target Audio");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_TargetTrack.B_TargetTrack_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_TargetTrack_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_TargetTrack_C", "ReceiveEndPlay");

	Params::B_TargetTrack_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_TargetTrack.B_TargetTrack_C.InitializeSettings
// (BlueprintCallable, BlueprintEvent)

void AB_TargetTrack_C::InitializeSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_TargetTrack_C", "InitializeSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_TargetTrack.B_TargetTrack_C.BndEvt__Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FHitResult&                SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AB_TargetTrack_C::BndEvt__Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_TargetTrack_C", "BndEvt__Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature");

	Params::B_TargetTrack_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_TargetTrack.B_TargetTrack_C.AsyncLoadTargetBase
// (BlueprintCallable, BlueprintEvent)

void AB_TargetTrack_C::AsyncLoadTargetBase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_TargetTrack_C", "AsyncLoadTargetBase");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_TargetTrack.B_TargetTrack_C.ReverseTargetMovement
// (BlueprintCallable, BlueprintEvent)

void AB_TargetTrack_C::ReverseTargetMovement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_TargetTrack_C", "ReverseTargetMovement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_TargetTrack.B_TargetTrack_C.AttachedTargetPoppedUp
// (BlueprintCallable, BlueprintEvent)

void AB_TargetTrack_C::AttachedTargetPoppedUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_TargetTrack_C", "AttachedTargetPoppedUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_TargetTrack.B_TargetTrack_C.StopTargetMovement
// (BlueprintCallable, BlueprintEvent)

void AB_TargetTrack_C::StopTargetMovement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_TargetTrack_C", "StopTargetMovement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_TargetTrack.B_TargetTrack_C.AttachedTargetKnockedDown
// (BlueprintCallable, BlueprintEvent)

void AB_TargetTrack_C::AttachedTargetKnockedDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_TargetTrack_C", "AttachedTargetKnockedDown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_TargetTrack.B_TargetTrack_C.BndEvt__ToyOptionsComponent_K2Node_ComponentBoundEvent_2_AnyPropertyChangedDelegate__DelegateSignature
// (BlueprintEvent)

void AB_TargetTrack_C::BndEvt__ToyOptionsComponent_K2Node_ComponentBoundEvent_2_AnyPropertyChangedDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_TargetTrack_C", "BndEvt__ToyOptionsComponent_K2Node_ComponentBoundEvent_2_AnyPropertyChangedDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_TargetTrack.B_TargetTrack_C.BndEvt__ToyOptionsComponent_K2Node_ComponentBoundEvent_1_AnyPropertyChangedDelegate__DelegateSignature
// (BlueprintEvent)

void AB_TargetTrack_C::BndEvt__ToyOptionsComponent_K2Node_ComponentBoundEvent_1_AnyPropertyChangedDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_TargetTrack_C", "BndEvt__ToyOptionsComponent_K2Node_ComponentBoundEvent_1_AnyPropertyChangedDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_TargetTrack.B_TargetTrack_C.MoveTarget
// (BlueprintCallable, BlueprintEvent)

void AB_TargetTrack_C::MoveTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_TargetTrack_C", "MoveTarget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_TargetTrack.B_TargetTrack_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AB_TargetTrack_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_TargetTrack_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_TargetTrack.B_TargetTrack_C.OnLoaded_3C01053C48BCC07B689033B6DB9706E0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_TargetTrack_C::OnLoaded_3C01053C48BCC07B689033B6DB9706E0(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_TargetTrack_C", "OnLoaded_3C01053C48BCC07B689033B6DB9706E0");

	Params::B_TargetTrack_C_OnLoaded_3C01053C48BCC07B689033B6DB9706E0 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_TargetTrack.B_TargetTrack_C.OnLoaded_27B7684A423E01CDEC2BFC9631F88BF8
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_TargetTrack_C::OnLoaded_27B7684A423E01CDEC2BFC9631F88BF8(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_TargetTrack_C", "OnLoaded_27B7684A423E01CDEC2BFC9631F88BF8");

	Params::B_TargetTrack_C_OnLoaded_27B7684A423E01CDEC2BFC9631F88BF8 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_TargetTrack.B_TargetTrack_C.TargetMovement__UpdateFunc
// (BlueprintEvent)

void AB_TargetTrack_C::TargetMovement__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_TargetTrack_C", "TargetMovement__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_TargetTrack.B_TargetTrack_C.TargetMovement__FinishedFunc
// (BlueprintEvent)

void AB_TargetTrack_C::TargetMovement__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_TargetTrack_C", "TargetMovement__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_TargetTrack.B_TargetTrack_C.GetFinalDestinationOfTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector*                         Destination                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_TargetTrack_C::GetFinalDestinationOfTarget(struct FVector* Destination)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_TargetTrack_C", "GetFinalDestinationOfTarget");

	Params::B_TargetTrack_C_GetFinalDestinationOfTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Destination != nullptr)
		*Destination = std::move(Parms.Destination);
}


// Function B_TargetTrack.B_TargetTrack_C.CalculatePlayRate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float AB_TargetTrack_C::CalculatePlayRate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_TargetTrack_C", "CalculatePlayRate");

	Params::B_TargetTrack_C_CalculatePlayRate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function B_TargetTrack.B_TargetTrack_C.SetTargetRotationAndBaseMesh
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AB_TargetTrack_C::SetTargetRotationAndBaseMesh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_TargetTrack_C", "SetTargetRotationAndBaseMesh");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_TargetTrack.B_TargetTrack_C.SetTrackLength
// (Public, BlueprintCallable, BlueprintEvent)

void AB_TargetTrack_C::SetTrackLength()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_TargetTrack_C", "SetTrackLength");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_TargetTrack.B_TargetTrack_C.OnRep_ServerMoveStartTime
// (BlueprintCallable, BlueprintEvent)

void AB_TargetTrack_C::OnRep_ServerMoveStartTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_TargetTrack_C", "OnRep_ServerMoveStartTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_TargetTrack.B_TargetTrack_C.OnRep_IsTargetUp
// (BlueprintCallable, BlueprintEvent)

void AB_TargetTrack_C::OnRep_IsTargetUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_TargetTrack_C", "OnRep_IsTargetUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_TargetTrack.B_TargetTrack_C.OnRep_CurrentDirection
// (BlueprintCallable, BlueprintEvent)

void AB_TargetTrack_C::OnRep_CurrentDirection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_TargetTrack_C", "OnRep_CurrentDirection");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_TargetTrack.B_TargetTrack_C.OnRep_IsCurrentlyMoving
// (BlueprintCallable, BlueprintEvent)

void AB_TargetTrack_C::OnRep_IsCurrentlyMoving()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_TargetTrack_C", "OnRep_IsCurrentlyMoving");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_TargetTrack.B_TargetTrack_C.UpdateForRepNotify
// (Public, BlueprintCallable, BlueprintEvent)

void AB_TargetTrack_C::UpdateForRepNotify()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_TargetTrack_C", "UpdateForRepNotify");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_TargetTrack.B_TargetTrack_C.OnRep_CurrentLerpValue
// (BlueprintCallable, BlueprintEvent)

void AB_TargetTrack_C::OnRep_CurrentLerpValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_TargetTrack_C", "OnRep_CurrentLerpValue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_TargetTrack.B_TargetTrack_C.UpdateLerpedPosition
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Alpha                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_TargetTrack_C::UpdateLerpedPosition(float Alpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_TargetTrack_C", "UpdateLerpedPosition");

	Params::B_TargetTrack_C_UpdateLerpedPosition Parms{};

	Parms.Alpha = Alpha;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_TargetTrack.B_TargetTrack_C.SetMovementState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_TargetTrack_C::SetMovementState(uint8 State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_TargetTrack_C", "SetMovementState");

	Params::B_TargetTrack_C_SetMovementState Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_TargetTrack.B_TargetTrack_C.OnRep_CurrentMovementState
// (BlueprintCallable, BlueprintEvent)

void AB_TargetTrack_C::OnRep_CurrentMovementState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_TargetTrack_C", "OnRep_CurrentMovementState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_TargetTrack.B_TargetTrack_C.Set Audio Speed Sound
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Target_Speed                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_TargetTrack_C::Set_Audio_Speed_Sound(float Target_Speed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_TargetTrack_C", "Set Audio Speed Sound");

	Params::B_TargetTrack_C_Set_Audio_Speed_Sound Parms{};

	Parms.Target_Speed = Target_Speed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_TargetTrack.B_TargetTrack_C.GetCollisionStaticMesh
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class UStaticMesh*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UStaticMesh* AB_TargetTrack_C::GetCollisionStaticMesh() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_TargetTrack_C", "GetCollisionStaticMesh");

	Params::B_TargetTrack_C_GetCollisionStaticMesh Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function B_TargetTrack.B_TargetTrack_C.GetMeshComponents
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TArray<class UMeshComponent*>           ReturnValue                                            (Parm, OutParm, ReturnParm, ContainsInstancedReference, HasGetValueTypeHash)

TArray<class UMeshComponent*> AB_TargetTrack_C::GetMeshComponents() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_TargetTrack_C", "GetMeshComponents");

	Params::B_TargetTrack_C_GetMeshComponents Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

