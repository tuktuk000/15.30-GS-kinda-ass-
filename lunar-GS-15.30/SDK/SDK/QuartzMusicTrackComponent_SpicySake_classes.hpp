#pragma once

/*
* SDK generated by Dumper-8
*
* https://github.com/NotTacs/Dumper-8
*/

// Package: QuartzMusicTrackComponent_SpicySake

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "QuartzMusicTrackComponent_DataTracker_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass QuartzMusicTrackComponent_SpicySake.QuartzMusicTrackComponent_SpicySake_C
// 0x0018 (0x01D0 - 0x01B8)
class UQuartzMusicTrackComponent_SpicySake_C final : public UQuartzMusicTrackComponent_DataTracker_C
{
public:
	uint8                                         Pad_1B1[0x3];                                      // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-8 ])
	float                                         InterpFloat_Circling;                              // 0x01B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InterpFloat_Attacking;                             // 0x01B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           EventTag_Circling;                                 // 0x01BC(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           EventTag_Attacking;                                // 0x01C4(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void OnDataTrackerUpdate();
	float UpdateInterpValue(float InterpValue, const struct FGameplayTag& EventTag, float Attack_Speed, float Release_Speed);
	void HandleMixState();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"QuartzMusicTrackComponent_SpicySake_C">();
	}
	static class UQuartzMusicTrackComponent_SpicySake_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UQuartzMusicTrackComponent_SpicySake_C>();
	}
};

}

