#pragma once

/*
* SDK generated by Dumper-8
*
* https://github.com/NotTacs/Dumper-8
*/

// Package: MeshDescription

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "MeshDescription_structs.hpp"


namespace SDK::Params
{

// Function MeshDescription.MeshDescriptionBase.ComputePolygonTriangulation
// 0x0004 (0x0004 - 0x0000)
struct MeshDescriptionBase_ComputePolygonTriangulation final
{
public:
	struct FPolygonID                             PolygonID;                                         // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.CreateEdge
// 0x000C (0x000C - 0x0000)
struct MeshDescriptionBase_CreateEdge final
{
public:
	struct FVertexID                              VertexID0;                                         // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVertexID                              VertexID1;                                         // 0x0004(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEdgeID                                ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.CreateEdgeWithID
// 0x000C (0x000C - 0x0000)
struct MeshDescriptionBase_CreateEdgeWithID final
{
public:
	struct FEdgeID                                EdgeID;                                            // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVertexID                              VertexID0;                                         // 0x0004(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVertexID                              VertexID1;                                         // 0x0008(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.CreatePolygon
// 0x0030 (0x0030 - 0x0000)
struct MeshDescriptionBase_CreatePolygon final
{
public:
	struct FPolygonGroupID                        PolygonGroupID;                                    // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-8 ])
	TArray<struct FVertexInstanceID>              VertexInstanceIDs;                                 // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FEdgeID>                        NewEdgeIDs;                                        // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPolygonID                             ReturnValue;                                       // 0x0028(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-8 ])
};

// Function MeshDescription.MeshDescriptionBase.CreatePolygonGroup
// 0x0004 (0x0004 - 0x0000)
struct MeshDescriptionBase_CreatePolygonGroup final
{
public:
	struct FPolygonGroupID                        ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.CreatePolygonGroupWithID
// 0x0004 (0x0004 - 0x0000)
struct MeshDescriptionBase_CreatePolygonGroupWithID final
{
public:
	struct FPolygonGroupID                        PolygonGroupID;                                    // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.CreatePolygonWithID
// 0x0028 (0x0028 - 0x0000)
struct MeshDescriptionBase_CreatePolygonWithID final
{
public:
	struct FPolygonID                             PolygonID;                                         // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPolygonGroupID                        PolygonGroupID;                                    // 0x0004(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVertexInstanceID>              VertexInstanceIDs;                                 // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FEdgeID>                        NewEdgeIDs;                                        // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.CreateTriangle
// 0x0030 (0x0030 - 0x0000)
struct MeshDescriptionBase_CreateTriangle final
{
public:
	struct FPolygonGroupID                        PolygonGroupID;                                    // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-8 ])
	TArray<struct FVertexInstanceID>              VertexInstanceIDs;                                 // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FEdgeID>                        NewEdgeIDs;                                        // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTriangleID                            ReturnValue;                                       // 0x0028(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-8 ])
};

// Function MeshDescription.MeshDescriptionBase.CreateTriangleWithID
// 0x0028 (0x0028 - 0x0000)
struct MeshDescriptionBase_CreateTriangleWithID final
{
public:
	struct FTriangleID                            TriangleID;                                        // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPolygonGroupID                        PolygonGroupID;                                    // 0x0004(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVertexInstanceID>              VertexInstanceIDs;                                 // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FEdgeID>                        NewEdgeIDs;                                        // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.CreateVertex
// 0x0004 (0x0004 - 0x0000)
struct MeshDescriptionBase_CreateVertex final
{
public:
	struct FVertexID                              ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.CreateVertexInstance
// 0x0008 (0x0008 - 0x0000)
struct MeshDescriptionBase_CreateVertexInstance final
{
public:
	struct FVertexID                              VertexID;                                          // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVertexInstanceID                      ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.CreateVertexInstanceWithID
// 0x0008 (0x0008 - 0x0000)
struct MeshDescriptionBase_CreateVertexInstanceWithID final
{
public:
	struct FVertexInstanceID                      VertexInstanceID;                                  // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVertexID                              VertexID;                                          // 0x0004(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.CreateVertexWithID
// 0x0004 (0x0004 - 0x0000)
struct MeshDescriptionBase_CreateVertexWithID final
{
public:
	struct FVertexID                              VertexID;                                          // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.DeleteEdge
// 0x0018 (0x0018 - 0x0000)
struct MeshDescriptionBase_DeleteEdge final
{
public:
	struct FEdgeID                                EdgeID;                                            // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-8 ])
	TArray<struct FVertexID>                      OrphanedVertices;                                  // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.DeletePolygon
// 0x0038 (0x0038 - 0x0000)
struct MeshDescriptionBase_DeletePolygon final
{
public:
	struct FPolygonID                             PolygonID;                                         // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-8 ])
	TArray<struct FEdgeID>                        OrphanedEdges;                                     // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVertexInstanceID>              OrphanedVertexInstances;                           // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPolygonGroupID>                OrphanedPolygonGroups;                             // 0x0028(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.DeletePolygonGroup
// 0x0004 (0x0004 - 0x0000)
struct MeshDescriptionBase_DeletePolygonGroup final
{
public:
	struct FPolygonGroupID                        PolygonGroupID;                                    // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.DeleteTriangle
// 0x0038 (0x0038 - 0x0000)
struct MeshDescriptionBase_DeleteTriangle final
{
public:
	struct FTriangleID                            TriangleID;                                        // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-8 ])
	TArray<struct FEdgeID>                        OrphanedEdges;                                     // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVertexInstanceID>              OrphanedVertexInstances;                           // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPolygonGroupID>                OrphanedPolygonGroupsPtr;                          // 0x0028(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.DeleteVertex
// 0x0004 (0x0004 - 0x0000)
struct MeshDescriptionBase_DeleteVertex final
{
public:
	struct FVertexID                              VertexID;                                          // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.DeleteVertexInstance
// 0x0018 (0x0018 - 0x0000)
struct MeshDescriptionBase_DeleteVertexInstance final
{
public:
	struct FVertexInstanceID                      VertexInstanceID;                                  // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-8 ])
	TArray<struct FVertexID>                      OrphanedVertices;                                  // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.ReserveNewEdges
// 0x0004 (0x0004 - 0x0000)
struct MeshDescriptionBase_ReserveNewEdges final
{
public:
	int32                                         NumberOfNewEdges;                                  // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.ReserveNewPolygonGroups
// 0x0004 (0x0004 - 0x0000)
struct MeshDescriptionBase_ReserveNewPolygonGroups final
{
public:
	int32                                         NumberOfNewPolygonGroups;                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.ReserveNewPolygons
// 0x0004 (0x0004 - 0x0000)
struct MeshDescriptionBase_ReserveNewPolygons final
{
public:
	int32                                         NumberOfNewPolygons;                               // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.ReserveNewTriangles
// 0x0004 (0x0004 - 0x0000)
struct MeshDescriptionBase_ReserveNewTriangles final
{
public:
	int32                                         NumberOfNewTriangles;                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.ReserveNewVertexInstances
// 0x0004 (0x0004 - 0x0000)
struct MeshDescriptionBase_ReserveNewVertexInstances final
{
public:
	int32                                         NumberOfNewVertexInstances;                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.ReserveNewVertices
// 0x0004 (0x0004 - 0x0000)
struct MeshDescriptionBase_ReserveNewVertices final
{
public:
	int32                                         NumberOfNewVertices;                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.ReversePolygonFacing
// 0x0004 (0x0004 - 0x0000)
struct MeshDescriptionBase_ReversePolygonFacing final
{
public:
	struct FPolygonID                             PolygonID;                                         // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.SetPolygonPolygonGroup
// 0x0008 (0x0008 - 0x0000)
struct MeshDescriptionBase_SetPolygonPolygonGroup final
{
public:
	struct FPolygonID                             PolygonID;                                         // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPolygonGroupID                        PolygonGroupID;                                    // 0x0004(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.SetPolygonVertexInstance
// 0x000C (0x000C - 0x0000)
struct MeshDescriptionBase_SetPolygonVertexInstance final
{
public:
	struct FPolygonID                             PolygonID;                                         // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PerimeterIndex;                                    // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVertexInstanceID                      VertexInstanceID;                                  // 0x0008(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.SetVertexPosition
// 0x0010 (0x0010 - 0x0000)
struct MeshDescriptionBase_SetVertexPosition final
{
public:
	struct FVertexID                              VertexID;                                          // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Position;                                          // 0x0004(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.GetEdgeConnectedPolygons
// 0x0018 (0x0018 - 0x0000)
struct MeshDescriptionBase_GetEdgeConnectedPolygons final
{
public:
	struct FEdgeID                                EdgeID;                                            // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-8 ])
	TArray<struct FPolygonID>                     OutConnectedPolygonIDs;                            // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.GetEdgeConnectedTriangles
// 0x0018 (0x0018 - 0x0000)
struct MeshDescriptionBase_GetEdgeConnectedTriangles final
{
public:
	struct FEdgeID                                EdgeID;                                            // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-8 ])
	TArray<struct FTriangleID>                    OutConnectedTriangleIDs;                           // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.GetEdgeVertex
// 0x000C (0x000C - 0x0000)
struct MeshDescriptionBase_GetEdgeVertex final
{
public:
	struct FEdgeID                                EdgeID;                                            // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         VertexNumber;                                      // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVertexID                              ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.GetEdgeVertices
// 0x0018 (0x0018 - 0x0000)
struct MeshDescriptionBase_GetEdgeVertices final
{
public:
	struct FEdgeID                                EdgeID;                                            // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-8 ])
	TArray<struct FVertexID>                      OutVertexIDs;                                      // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.GetNumEdgeConnectedPolygons
// 0x0008 (0x0008 - 0x0000)
struct MeshDescriptionBase_GetNumEdgeConnectedPolygons final
{
public:
	struct FEdgeID                                EdgeID;                                            // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.GetNumEdgeConnectedTriangles
// 0x0008 (0x0008 - 0x0000)
struct MeshDescriptionBase_GetNumEdgeConnectedTriangles final
{
public:
	struct FEdgeID                                EdgeID;                                            // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.GetNumPolygonGroupPolygons
// 0x0008 (0x0008 - 0x0000)
struct MeshDescriptionBase_GetNumPolygonGroupPolygons final
{
public:
	struct FPolygonGroupID                        PolygonGroupID;                                    // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.GetNumPolygonInternalEdges
// 0x0008 (0x0008 - 0x0000)
struct MeshDescriptionBase_GetNumPolygonInternalEdges final
{
public:
	struct FPolygonID                             PolygonID;                                         // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.GetNumPolygonTriangles
// 0x0008 (0x0008 - 0x0000)
struct MeshDescriptionBase_GetNumPolygonTriangles final
{
public:
	struct FPolygonID                             PolygonID;                                         // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.GetNumPolygonVertices
// 0x0008 (0x0008 - 0x0000)
struct MeshDescriptionBase_GetNumPolygonVertices final
{
public:
	struct FPolygonID                             PolygonID;                                         // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.GetNumVertexConnectedEdges
// 0x0008 (0x0008 - 0x0000)
struct MeshDescriptionBase_GetNumVertexConnectedEdges final
{
public:
	struct FVertexID                              VertexID;                                          // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.GetNumVertexConnectedPolygons
// 0x0008 (0x0008 - 0x0000)
struct MeshDescriptionBase_GetNumVertexConnectedPolygons final
{
public:
	struct FVertexID                              VertexID;                                          // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.GetNumVertexConnectedTriangles
// 0x0008 (0x0008 - 0x0000)
struct MeshDescriptionBase_GetNumVertexConnectedTriangles final
{
public:
	struct FVertexID                              VertexID;                                          // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.GetNumVertexInstanceConnectedPolygons
// 0x0008 (0x0008 - 0x0000)
struct MeshDescriptionBase_GetNumVertexInstanceConnectedPolygons final
{
public:
	struct FVertexInstanceID                      VertexInstanceID;                                  // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.GetNumVertexInstanceConnectedTriangles
// 0x0008 (0x0008 - 0x0000)
struct MeshDescriptionBase_GetNumVertexInstanceConnectedTriangles final
{
public:
	struct FVertexInstanceID                      VertexInstanceID;                                  // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.GetNumVertexVertexInstances
// 0x0008 (0x0008 - 0x0000)
struct MeshDescriptionBase_GetNumVertexVertexInstances final
{
public:
	struct FVertexID                              VertexID;                                          // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.GetPolygonAdjacentPolygons
// 0x0018 (0x0018 - 0x0000)
struct MeshDescriptionBase_GetPolygonAdjacentPolygons final
{
public:
	struct FPolygonID                             PolygonID;                                         // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-8 ])
	TArray<struct FPolygonID>                     OutPolygonIDs;                                     // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.GetPolygonGroupPolygons
// 0x0018 (0x0018 - 0x0000)
struct MeshDescriptionBase_GetPolygonGroupPolygons final
{
public:
	struct FPolygonGroupID                        PolygonGroupID;                                    // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-8 ])
	TArray<struct FPolygonID>                     OutPolygonIDs;                                     // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.GetPolygonInternalEdges
// 0x0018 (0x0018 - 0x0000)
struct MeshDescriptionBase_GetPolygonInternalEdges final
{
public:
	struct FPolygonID                             PolygonID;                                         // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-8 ])
	TArray<struct FEdgeID>                        OutEdgeIDs;                                        // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.GetPolygonPerimeterEdges
// 0x0018 (0x0018 - 0x0000)
struct MeshDescriptionBase_GetPolygonPerimeterEdges final
{
public:
	struct FPolygonID                             PolygonID;                                         // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-8 ])
	TArray<struct FEdgeID>                        OutEdgeIDs;                                        // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.GetPolygonPolygonGroup
// 0x0008 (0x0008 - 0x0000)
struct MeshDescriptionBase_GetPolygonPolygonGroup final
{
public:
	struct FPolygonID                             PolygonID;                                         // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPolygonGroupID                        ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.GetPolygonTriangles
// 0x0018 (0x0018 - 0x0000)
struct MeshDescriptionBase_GetPolygonTriangles final
{
public:
	struct FPolygonID                             PolygonID;                                         // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-8 ])
	TArray<struct FTriangleID>                    OutTriangleIDs;                                    // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.GetPolygonVertexInstances
// 0x0018 (0x0018 - 0x0000)
struct MeshDescriptionBase_GetPolygonVertexInstances final
{
public:
	struct FPolygonID                             PolygonID;                                         // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-8 ])
	TArray<struct FVertexInstanceID>              OutVertexInstanceIDs;                              // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.GetPolygonVertices
// 0x0018 (0x0018 - 0x0000)
struct MeshDescriptionBase_GetPolygonVertices final
{
public:
	struct FPolygonID                             PolygonID;                                         // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-8 ])
	TArray<struct FVertexID>                      OutVertexIDs;                                      // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.GetTriangleAdjacentTriangles
// 0x0018 (0x0018 - 0x0000)
struct MeshDescriptionBase_GetTriangleAdjacentTriangles final
{
public:
	struct FTriangleID                            TriangleID;                                        // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-8 ])
	TArray<struct FTriangleID>                    OutTriangleIDs;                                    // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.GetTriangleEdges
// 0x0018 (0x0018 - 0x0000)
struct MeshDescriptionBase_GetTriangleEdges final
{
public:
	struct FTriangleID                            TriangleID;                                        // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-8 ])
	TArray<struct FEdgeID>                        OutEdgeIDs;                                        // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.GetTrianglePolygon
// 0x0008 (0x0008 - 0x0000)
struct MeshDescriptionBase_GetTrianglePolygon final
{
public:
	struct FTriangleID                            TriangleID;                                        // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPolygonID                             ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.GetTrianglePolygonGroup
// 0x0008 (0x0008 - 0x0000)
struct MeshDescriptionBase_GetTrianglePolygonGroup final
{
public:
	struct FTriangleID                            TriangleID;                                        // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPolygonGroupID                        ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.GetTriangleVertexInstance
// 0x000C (0x000C - 0x0000)
struct MeshDescriptionBase_GetTriangleVertexInstance final
{
public:
	struct FTriangleID                            TriangleID;                                        // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVertexInstanceID                      ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.GetTriangleVertexInstances
// 0x0018 (0x0018 - 0x0000)
struct MeshDescriptionBase_GetTriangleVertexInstances final
{
public:
	struct FTriangleID                            TriangleID;                                        // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-8 ])
	TArray<struct FVertexInstanceID>              OutVertexInstanceIDs;                              // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.GetTriangleVertices
// 0x0018 (0x0018 - 0x0000)
struct MeshDescriptionBase_GetTriangleVertices final
{
public:
	struct FTriangleID                            TriangleID;                                        // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-8 ])
	TArray<struct FVertexID>                      OutVertexIDs;                                      // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.GetVertexAdjacentVertices
// 0x0018 (0x0018 - 0x0000)
struct MeshDescriptionBase_GetVertexAdjacentVertices final
{
public:
	struct FVertexID                              VertexID;                                          // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-8 ])
	TArray<struct FVertexID>                      OutAdjacentVertexIDs;                              // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.GetVertexConnectedEdges
// 0x0018 (0x0018 - 0x0000)
struct MeshDescriptionBase_GetVertexConnectedEdges final
{
public:
	struct FVertexID                              VertexID;                                          // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-8 ])
	TArray<struct FEdgeID>                        OutEdgeIDs;                                        // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.GetVertexConnectedPolygons
// 0x0018 (0x0018 - 0x0000)
struct MeshDescriptionBase_GetVertexConnectedPolygons final
{
public:
	struct FVertexID                              VertexID;                                          // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-8 ])
	TArray<struct FPolygonID>                     OutConnectedPolygonIDs;                            // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.GetVertexConnectedTriangles
// 0x0018 (0x0018 - 0x0000)
struct MeshDescriptionBase_GetVertexConnectedTriangles final
{
public:
	struct FVertexID                              VertexID;                                          // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-8 ])
	TArray<struct FTriangleID>                    OutConnectedTriangleIDs;                           // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.GetVertexInstanceConnectedPolygons
// 0x0018 (0x0018 - 0x0000)
struct MeshDescriptionBase_GetVertexInstanceConnectedPolygons final
{
public:
	struct FVertexInstanceID                      VertexInstanceID;                                  // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-8 ])
	TArray<struct FPolygonID>                     OutConnectedPolygonIDs;                            // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.GetVertexInstanceConnectedTriangles
// 0x0018 (0x0018 - 0x0000)
struct MeshDescriptionBase_GetVertexInstanceConnectedTriangles final
{
public:
	struct FVertexInstanceID                      VertexInstanceID;                                  // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-8 ])
	TArray<struct FTriangleID>                    OutConnectedTriangleIDs;                           // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.GetVertexInstanceForPolygonVertex
// 0x000C (0x000C - 0x0000)
struct MeshDescriptionBase_GetVertexInstanceForPolygonVertex final
{
public:
	struct FPolygonID                             PolygonID;                                         // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVertexID                              VertexID;                                          // 0x0004(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVertexInstanceID                      ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.GetVertexInstanceForTriangleVertex
// 0x000C (0x000C - 0x0000)
struct MeshDescriptionBase_GetVertexInstanceForTriangleVertex final
{
public:
	struct FTriangleID                            TriangleID;                                        // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVertexID                              VertexID;                                          // 0x0004(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVertexInstanceID                      ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.GetVertexInstancePairEdge
// 0x000C (0x000C - 0x0000)
struct MeshDescriptionBase_GetVertexInstancePairEdge final
{
public:
	struct FVertexInstanceID                      VertexInstanceID0;                                 // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVertexInstanceID                      VertexInstanceID1;                                 // 0x0004(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEdgeID                                ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.GetVertexInstanceVertex
// 0x0008 (0x0008 - 0x0000)
struct MeshDescriptionBase_GetVertexInstanceVertex final
{
public:
	struct FVertexInstanceID                      VertexInstanceID;                                  // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVertexID                              ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.GetVertexPairEdge
// 0x000C (0x000C - 0x0000)
struct MeshDescriptionBase_GetVertexPairEdge final
{
public:
	struct FVertexID                              VertexID0;                                         // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVertexID                              VertexID1;                                         // 0x0004(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEdgeID                                ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.GetVertexPosition
// 0x0010 (0x0010 - 0x0000)
struct MeshDescriptionBase_GetVertexPosition final
{
public:
	struct FVertexID                              VertexID;                                          // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                ReturnValue;                                       // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.GetVertexVertexInstances
// 0x0018 (0x0018 - 0x0000)
struct MeshDescriptionBase_GetVertexVertexInstances final
{
public:
	struct FVertexID                              VertexID;                                          // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-8 ])
	TArray<struct FVertexInstanceID>              OutVertexInstanceIDs;                              // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.IsEdgeInternal
// 0x0008 (0x0008 - 0x0000)
struct MeshDescriptionBase_IsEdgeInternal final
{
public:
	struct FEdgeID                                EdgeID;                                            // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-8 ])
};

// Function MeshDescription.MeshDescriptionBase.IsEdgeInternalToPolygon
// 0x000C (0x000C - 0x0000)
struct MeshDescriptionBase_IsEdgeInternalToPolygon final
{
public:
	struct FEdgeID                                EdgeID;                                            // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPolygonID                             PolygonID;                                         // 0x0004(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-8 ])
};

// Function MeshDescription.MeshDescriptionBase.IsEdgeValid
// 0x0008 (0x0008 - 0x0000)
struct MeshDescriptionBase_IsEdgeValid final
{
public:
	struct FEdgeID                                EdgeID;                                            // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-8 ])
};

// Function MeshDescription.MeshDescriptionBase.IsEmpty
// 0x0001 (0x0001 - 0x0000)
struct MeshDescriptionBase_IsEmpty final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MeshDescription.MeshDescriptionBase.IsPolygonGroupValid
// 0x0008 (0x0008 - 0x0000)
struct MeshDescriptionBase_IsPolygonGroupValid final
{
public:
	struct FPolygonGroupID                        PolygonGroupID;                                    // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-8 ])
};

// Function MeshDescription.MeshDescriptionBase.IsPolygonValid
// 0x0008 (0x0008 - 0x0000)
struct MeshDescriptionBase_IsPolygonValid final
{
public:
	struct FPolygonID                             PolygonID;                                         // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-8 ])
};

// Function MeshDescription.MeshDescriptionBase.IsTrianglePartOfNgon
// 0x0008 (0x0008 - 0x0000)
struct MeshDescriptionBase_IsTrianglePartOfNgon final
{
public:
	struct FTriangleID                            TriangleID;                                        // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-8 ])
};

// Function MeshDescription.MeshDescriptionBase.IsTriangleValid
// 0x0008 (0x0008 - 0x0000)
struct MeshDescriptionBase_IsTriangleValid final
{
public:
	struct FTriangleID                            TriangleID;                                        // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-8 ])
};

// Function MeshDescription.MeshDescriptionBase.IsVertexInstanceValid
// 0x0008 (0x0008 - 0x0000)
struct MeshDescriptionBase_IsVertexInstanceValid final
{
public:
	struct FVertexInstanceID                      VertexInstanceID;                                  // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-8 ])
};

// Function MeshDescription.MeshDescriptionBase.IsVertexOrphaned
// 0x0008 (0x0008 - 0x0000)
struct MeshDescriptionBase_IsVertexOrphaned final
{
public:
	struct FVertexID                              VertexID;                                          // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-8 ])
};

// Function MeshDescription.MeshDescriptionBase.IsVertexValid
// 0x0008 (0x0008 - 0x0000)
struct MeshDescriptionBase_IsVertexValid final
{
public:
	struct FVertexID                              VertexID;                                          // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-8 ])
};

}

