#pragma once

/*
* SDK generated by Dumper-8
*
* https://github.com/NotTacs/Dumper-8
*/

// Package: B_BountyPuckWorldWidget

#include "Basic.hpp"

#include "B_BountyPuckWorldWidget_classes.hpp"
#include "B_BountyPuckWorldWidget_parameters.hpp"


namespace SDK
{

// Function B_BountyPuckWorldWidget.B_BountyPuckWorldWidget_C.ExecuteUbergraph_B_BountyPuckWorldWidget
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_BountyPuckWorldWidget_C::ExecuteUbergraph_B_BountyPuckWorldWidget(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_BountyPuckWorldWidget_C", "ExecuteUbergraph_B_BountyPuckWorldWidget");

	Params::B_BountyPuckWorldWidget_C_ExecuteUbergraph_B_BountyPuckWorldWidget Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_BountyPuckWorldWidget.B_BountyPuckWorldWidget_C.SetPuckValueVisibility
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AB_BountyPuckWorldWidget_C::SetPuckValueVisibility(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_BountyPuckWorldWidget_C", "SetPuckValueVisibility");

	Params::B_BountyPuckWorldWidget_C_SetPuckValueVisibility Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_BountyPuckWorldWidget.B_BountyPuckWorldWidget_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AB_BountyPuckWorldWidget_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_BountyPuckWorldWidget_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_BountyPuckWorldWidget.B_BountyPuckWorldWidget_C.DeactivateHologramTarget
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    AnimateOut                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AB_BountyPuckWorldWidget_C::DeactivateHologramTarget(bool AnimateOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_BountyPuckWorldWidget_C", "DeactivateHologramTarget");

	Params::B_BountyPuckWorldWidget_C_DeactivateHologramTarget Parms{};

	Parms.AnimateOut = AnimateOut;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_BountyPuckWorldWidget.B_BountyPuckWorldWidget_C.SetTargetInfo
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    TargetName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   TotalReward                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EFortRarity                             Rarity                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AFortPlayerStateAthena*           TargetPlayer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_BountyPuckWorldWidget_C::SetTargetInfo(const class FString& TargetName, int32 TotalReward, EFortRarity Rarity, class AFortPlayerStateAthena* TargetPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_BountyPuckWorldWidget_C", "SetTargetInfo");

	Params::B_BountyPuckWorldWidget_C_SetTargetInfo Parms{};

	Parms.TargetName = std::move(TargetName);
	Parms.TotalReward = TotalReward;
	Parms.Rarity = Rarity;
	Parms.TargetPlayer = TargetPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_BountyPuckWorldWidget.B_BountyPuckWorldWidget_C.ActivateHologramTarget
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    AnimateIn                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AB_BountyPuckWorldWidget_C::ActivateHologramTarget(bool AnimateIn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_BountyPuckWorldWidget_C", "ActivateHologramTarget");

	Params::B_BountyPuckWorldWidget_C_ActivateHologramTarget Parms{};

	Parms.AnimateIn = AnimateIn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_BountyPuckWorldWidget.B_BountyPuckWorldWidget_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_BountyPuckWorldWidget_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_BountyPuckWorldWidget_C", "ReceiveTick");

	Params::B_BountyPuckWorldWidget_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_BountyPuckWorldWidget.B_BountyPuckWorldWidget_C.BountyPuckDeactivation__UpdateFunc
// (BlueprintEvent)

void AB_BountyPuckWorldWidget_C::BountyPuckDeactivation__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_BountyPuckWorldWidget_C", "BountyPuckDeactivation__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_BountyPuckWorldWidget.B_BountyPuckWorldWidget_C.BountyPuckDeactivation__FinishedFunc
// (BlueprintEvent)

void AB_BountyPuckWorldWidget_C::BountyPuckDeactivation__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_BountyPuckWorldWidget_C", "BountyPuckDeactivation__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_BountyPuckWorldWidget.B_BountyPuckWorldWidget_C.BountyPuckActivation__UpdateFunc
// (BlueprintEvent)

void AB_BountyPuckWorldWidget_C::BountyPuckActivation__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_BountyPuckWorldWidget_C", "BountyPuckActivation__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_BountyPuckWorldWidget.B_BountyPuckWorldWidget_C.BountyPuckActivation__FinishedFunc
// (BlueprintEvent)

void AB_BountyPuckWorldWidget_C::BountyPuckActivation__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_BountyPuckWorldWidget_C", "BountyPuckActivation__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_BountyPuckWorldWidget.B_BountyPuckWorldWidget_C.Rotate to Face Camera
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidgetComponent*                 WidgetComponent                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_BountyPuckWorldWidget_C::Rotate_to_Face_Camera(class UWidgetComponent* WidgetComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_BountyPuckWorldWidget_C", "Rotate to Face Camera");

	Params::B_BountyPuckWorldWidget_C_Rotate_to_Face_Camera Parms{};

	Parms.WidgetComponent = WidgetComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_BountyPuckWorldWidget.B_BountyPuckWorldWidget_C.UpdatePuckWidget
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidgetComponent*                 PuckWidget                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FText&                      TextToDisplay                                          (BlueprintVisible, BlueprintReadOnly, Parm)
// EFortRarity                             TargetRarity                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_BountyPuckWorldWidget_C::UpdatePuckWidget(class UWidgetComponent* PuckWidget, const class FText& TextToDisplay, EFortRarity TargetRarity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_BountyPuckWorldWidget_C", "UpdatePuckWidget");

	Params::B_BountyPuckWorldWidget_C_UpdatePuckWidget Parms{};

	Parms.PuckWidget = PuckWidget;
	Parms.TextToDisplay = std::move(TextToDisplay);
	Parms.TargetRarity = TargetRarity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_BountyPuckWorldWidget.B_BountyPuckWorldWidget_C.OnBountyPuckEquipped
// (Public, BlueprintCallable, BlueprintEvent)

void AB_BountyPuckWorldWidget_C::OnBountyPuckEquipped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_BountyPuckWorldWidget_C", "OnBountyPuckEquipped");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_BountyPuckWorldWidget.B_BountyPuckWorldWidget_C.PlayPuckWidgetOnEquippedAnimation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidgetComponent*                 PuckWidget                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_BountyPuckWorldWidget_C::PlayPuckWidgetOnEquippedAnimation(class UWidgetComponent* PuckWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_BountyPuckWorldWidget_C", "PlayPuckWidgetOnEquippedAnimation");

	Params::B_BountyPuckWorldWidget_C_PlayPuckWidgetOnEquippedAnimation Parms{};

	Parms.PuckWidget = PuckWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_BountyPuckWorldWidget.B_BountyPuckWorldWidget_C.OnBountyPuckUnequipped
// (Public, BlueprintCallable, BlueprintEvent)

void AB_BountyPuckWorldWidget_C::OnBountyPuckUnequipped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_BountyPuckWorldWidget_C", "OnBountyPuckUnequipped");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_BountyPuckWorldWidget.B_BountyPuckWorldWidget_C.Update Widget Location and Rotation
// (Public, BlueprintCallable, BlueprintEvent)

void AB_BountyPuckWorldWidget_C::Update_Widget_Location_and_Rotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_BountyPuckWorldWidget_C", "Update Widget Location and Rotation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_BountyPuckWorldWidget.B_BountyPuckWorldWidget_C.Update Relative Location
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidgetComponent*                 WidgetComponent                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   TargetRelativeLocation                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_BountyPuckWorldWidget_C::Update_Relative_Location(class UWidgetComponent* WidgetComponent, const struct FVector& TargetRelativeLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_BountyPuckWorldWidget_C", "Update Relative Location");

	Params::B_BountyPuckWorldWidget_C_Update_Relative_Location Parms{};

	Parms.WidgetComponent = WidgetComponent;
	Parms.TargetRelativeLocation = std::move(TargetRelativeLocation);

	UObject::ProcessEvent(Func, &Parms);
}

}

