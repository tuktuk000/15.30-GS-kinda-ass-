#pragma once

/*
* SDK generated by Dumper-8
*
* https://github.com/NotTacs/Dumper-8
*/

// Package: EventModeRuntime

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "ModularGameplay_classes.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "EventModeRuntime_structs.hpp"


namespace SDK
{

// Class EventModeRuntime.FortGameFrameworkComponent_EventMode
// 0x0148 (0x01F8 - 0x00B0)
class UFortGameFrameworkComponent_EventMode : public UGameFrameworkComponent
{
public:
	uint8                                         Pad_B0[0x60];                                      // 0x00B0(0x0060)(Fixing Size After Last Property [ Dumper-8 ])
	TSoftObjectPtr<class UFortWeaponItemDefinition> ActivatorAsset;                                  // 0x0110(0x0028)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FUIExtension>                   UIExtensions;                                      // 0x0138(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<struct FGameplayTag, TSoftClassPtr<class UClass>> TaggedUIExtensions;                       // 0x0148(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<struct FEventModeFocusActor>           FocusActors;                                       // 0x0198(0x0010)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1A8[0x8];                                      // 0x01A8(0x0008)(Fixing Size After Last Property [ Dumper-8 ])
	class Engine::UInputComponent*                InputComponent;                                    // 0x01B0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FEventModeWidgetCachedData>     CachedWidgetData;                                  // 0x01B8(0x0010)(ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class AActor>                  CurrentlyFocusedActor;                             // 0x01C8(0x0028)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1F0[0x8];                                      // 0x01F0(0x0008)(Fixing Struct Size After Last Property [ Dumper-8 ])

public:
	void OnEnterVehicle();
	void OnExitVehicle();
	void OnPlayerPawnPossessed(class APawn* PossessedPawn);

	bool GetIsEventModeActive() const;
	bool GetIsFocusAvailable() const;
	bool GetIsFocusing() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortGameFrameworkComponent_EventMode">();
	}
	static class UFortGameFrameworkComponent_EventMode* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortGameFrameworkComponent_EventMode>();
	}
};

// Class EventModeRuntime.FortWeapon_EventMode
// 0x0000 (0x0D08 - 0x0D08)
class AFortWeapon_EventMode final : public AFortWeapon
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortWeapon_EventMode">();
	}
	static class AFortWeapon_EventMode* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFortWeapon_EventMode>();
	}
};

}

