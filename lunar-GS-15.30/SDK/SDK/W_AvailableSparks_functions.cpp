#pragma once

/*
* SDK generated by Dumper-8
*
* https://github.com/NotTacs/Dumper-8
*/

// Package: W_AvailableSparks

#include "Basic.hpp"

#include "W_AvailableSparks_classes.hpp"
#include "W_AvailableSparks_parameters.hpp"


namespace SDK
{

// Function W_AvailableSparks.W_AvailableSparks_C.PlayIncreaseVote
// (Event, Protected, BlueprintEvent)

void UW_AvailableSparks_C::PlayIncreaseVote()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_AvailableSparks_C", "PlayIncreaseVote");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_AvailableSparks.W_AvailableSparks_C.PlayDecreaseVote
// (Event, Protected, BlueprintEvent)

void UW_AvailableSparks_C::PlayDecreaseVote()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_AvailableSparks_C", "PlayDecreaseVote");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_AvailableSparks.W_AvailableSparks_C.PlayCountdown
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   StartValue                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_AvailableSparks_C::PlayCountdown(float StartValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_AvailableSparks_C", "PlayCountdown");

	Params::W_AvailableSparks_C_PlayCountdown Parms{};

	Parms.StartValue = StartValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_AvailableSparks.W_AvailableSparks_C.PlayEventOver
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   StartValue                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_AvailableSparks_C::PlayEventOver(float StartValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_AvailableSparks_C", "PlayEventOver");

	Params::W_AvailableSparks_C_PlayEventOver Parms{};

	Parms.StartValue = StartValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_AvailableSparks.W_AvailableSparks_C.PlayAvailableVotes
// (Event, Protected, BlueprintEvent)

void UW_AvailableSparks_C::PlayAvailableVotes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_AvailableSparks_C", "PlayAvailableVotes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_AvailableSparks.W_AvailableSparks_C.PlayIdle
// (Event, Protected, BlueprintEvent)

void UW_AvailableSparks_C::PlayIdle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_AvailableSparks_C", "PlayIdle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_AvailableSparks.W_AvailableSparks_C.ExecuteUbergraph_W_AvailableSparks
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_AvailableSparks_C::ExecuteUbergraph_W_AvailableSparks(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_AvailableSparks_C", "ExecuteUbergraph_W_AvailableSparks");

	Params::W_AvailableSparks_C_ExecuteUbergraph_W_AvailableSparks Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

