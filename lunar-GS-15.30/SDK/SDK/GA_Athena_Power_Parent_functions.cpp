#pragma once

/*
* SDK generated by Dumper-8
*
* https://github.com/NotTacs/Dumper-8
*/

// Package: GA_Athena_Power_Parent

#include "Basic.hpp"

#include "GA_Athena_Power_Parent_classes.hpp"
#include "GA_Athena_Power_Parent_parameters.hpp"


namespace SDK
{

// Function GA_Athena_Power_Parent.GA_Athena_Power_Parent_C.ExecuteUbergraph_GA_Athena_Power_Parent
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_Athena_Power_Parent_C::ExecuteUbergraph_GA_Athena_Power_Parent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Athena_Power_Parent_C", "ExecuteUbergraph_GA_Athena_Power_Parent");

	Params::GA_Athena_Power_Parent_C_ExecuteUbergraph_GA_Athena_Power_Parent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_Athena_Power_Parent.GA_Athena_Power_Parent_C.PowerCommitFailed
// (BlueprintCallable, BlueprintEvent)

void UGA_Athena_Power_Parent_C::PowerCommitFailed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Athena_Power_Parent_C", "PowerCommitFailed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Athena_Power_Parent.GA_Athena_Power_Parent_C.InitAbility
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UGA_Athena_Power_Parent_C::InitAbility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Athena_Power_Parent_C", "InitAbility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Athena_Power_Parent.GA_Athena_Power_Parent_C.PlayBurstGC
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              GameplayCueTag                                         (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    WithParams                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FGameplayCueParameters&    GameplayCueParameters                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void UGA_Athena_Power_Parent_C::PlayBurstGC(const struct FGameplayTag& GameplayCueTag, bool WithParams, const struct FGameplayCueParameters& GameplayCueParameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Athena_Power_Parent_C", "PlayBurstGC");

	Params::GA_Athena_Power_Parent_C_PlayBurstGC Parms{};

	Parms.GameplayCueTag = std::move(GameplayCueTag);
	Parms.WithParams = WithParams;
	Parms.GameplayCueParameters = std::move(GameplayCueParameters);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_Athena_Power_Parent.GA_Athena_Power_Parent_C.ActivationGCParams
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FGameplayCueParameters           ReturnValue                                            (Parm, OutParm, ReturnParm, ContainsInstancedReference)

struct FGameplayCueParameters UGA_Athena_Power_Parent_C::ActivationGCParams()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Athena_Power_Parent_C", "ActivationGCParams");

	Params::GA_Athena_Power_Parent_C_ActivationGCParams Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GA_Athena_Power_Parent.GA_Athena_Power_Parent_C.GetRowAtLevel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FScalableFloat&            Row                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UGA_Athena_Power_Parent_C::GetRowAtLevel(const struct FScalableFloat& Row)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Athena_Power_Parent_C", "GetRowAtLevel");

	Params::GA_Athena_Power_Parent_C_GetRowAtLevel Parms{};

	Parms.Row = std::move(Row);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GA_Athena_Power_Parent.GA_Athena_Power_Parent_C.AddGCLoop
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              GameplayCueTag                                         (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    WithParams                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FGameplayCueParameters&    GameplayCueParameters                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    bRemoveOnAbilityEnd                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UGA_Athena_Power_Parent_C::AddGCLoop(const struct FGameplayTag& GameplayCueTag, bool WithParams, const struct FGameplayCueParameters& GameplayCueParameters, bool bRemoveOnAbilityEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Athena_Power_Parent_C", "AddGCLoop");

	Params::GA_Athena_Power_Parent_C_AddGCLoop Parms{};

	Parms.GameplayCueTag = std::move(GameplayCueTag);
	Parms.WithParams = WithParams;
	Parms.GameplayCueParameters = std::move(GameplayCueParameters);
	Parms.bRemoveOnAbilityEnd = bRemoveOnAbilityEnd;

	UObject::ProcessEvent(Func, &Parms);
}

}

