#pragma once

/*
* SDK generated by Dumper-8
*
* https://github.com/NotTacs/Dumper-8
*/

// Package: Creative_Enabled_Component

#include "Basic.hpp"

#include "Creative_Enabled_Component_classes.hpp"
#include "Creative_Enabled_Component_parameters.hpp"


namespace SDK
{

// Function Creative_Enabled_Component.Creative_Enabled_Component_C.ExecuteUbergraph_Creative_Enabled_Component
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCreative_Enabled_Component_C::ExecuteUbergraph_Creative_Enabled_Component(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_Enabled_Component_C", "ExecuteUbergraph_Creative_Enabled_Component");

	Params::Creative_Enabled_Component_C_ExecuteUbergraph_Creative_Enabled_Component Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Creative_Enabled_Component.Creative_Enabled_Component_C.Minigame Play Mode Changed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortMinigame*                    Minigame                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsInPlayMode                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCreative_Enabled_Component_C::Minigame_Play_Mode_Changed(class AFortMinigame* Minigame, bool bIsInPlayMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_Enabled_Component_C", "Minigame Play Mode Changed");

	Params::Creative_Enabled_Component_C_Minigame_Play_Mode_Changed Parms{};

	Parms.Minigame = Minigame;
	Parms.bIsInPlayMode = bIsInPlayMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Creative_Enabled_Component.Creative_Enabled_Component_C.Minigame State Changed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortMinigame*                    Minigame                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EFortMinigameState                      MinigameState                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCreative_Enabled_Component_C::Minigame_State_Changed(class AFortMinigame* Minigame, EFortMinigameState MinigameState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_Enabled_Component_C", "Minigame State Changed");

	Params::Creative_Enabled_Component_C_Minigame_State_Changed Parms{};

	Parms.Minigame = Minigame;
	Parms.MinigameState = MinigameState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Creative_Enabled_Component.Creative_Enabled_Component_C.Bind to Minigame
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortMinigame*                    Minigame                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCreative_Enabled_Component_C::Bind_to_Minigame(class AFortMinigame* Minigame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_Enabled_Component_C", "Bind to Minigame");

	Params::Creative_Enabled_Component_C_Bind_to_Minigame Parms{};

	Parms.Minigame = Minigame;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Creative_Enabled_Component.Creative_Enabled_Component_C.Initialize Component
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortMinigameLogicComponent*      Logic_Component_0                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Enabled_Index_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCreative_Enabled_Component_C::Initialize_Component(class UFortMinigameLogicComponent* Logic_Component_0, int32 Enabled_Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_Enabled_Component_C", "Initialize Component");

	Params::Creative_Enabled_Component_C_Initialize_Component Parms{};

	Parms.Logic_Component_0 = Logic_Component_0;
	Parms.Enabled_Index_0 = Enabled_Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Creative_Enabled_Component.Creative_Enabled_Component_C.Set Enabled on Phase
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EFortMinigameState                      State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   EnabledIndex                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCreative_Enabled_Component_C::Set_Enabled_on_Phase(EFortMinigameState State, int32 EnabledIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_Enabled_Component_C", "Set Enabled on Phase");

	Params::Creative_Enabled_Component_C_Set_Enabled_on_Phase Parms{};

	Parms.State = State;
	Parms.EnabledIndex = EnabledIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Creative_Enabled_Component.Creative_Enabled_Component_C.IsEnabled
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   Enabled                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCreative_Enabled_Component_C::IsEnabled(bool* Enabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_Enabled_Component_C", "IsEnabled");

	Params::Creative_Enabled_Component_C_IsEnabled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Enabled != nullptr)
		*Enabled = Parms.Enabled;
}


// Function Creative_Enabled_Component.Creative_Enabled_Component_C.Set Enabled
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnabled                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCreative_Enabled_Component_C::Set_Enabled(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_Enabled_Component_C", "Set Enabled");

	Params::Creative_Enabled_Component_C_Set_Enabled Parms{};

	Parms.bEnabled = bEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Creative_Enabled_Component.Creative_Enabled_Component_C.Set Enabled on Play Mode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Play_Mode                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCreative_Enabled_Component_C::Set_Enabled_on_Play_Mode(bool Play_Mode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_Enabled_Component_C", "Set Enabled on Play Mode");

	Params::Creative_Enabled_Component_C_Set_Enabled_on_Play_Mode Parms{};

	Parms.Play_Mode = Play_Mode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Creative_Enabled_Component.Creative_Enabled_Component_C.Reset Delay Complete
// (Public, BlueprintCallable, BlueprintEvent)

void UCreative_Enabled_Component_C::Reset_Delay_Complete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_Enabled_Component_C", "Reset Delay Complete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Creative_Enabled_Component.Creative_Enabled_Component_C.Reset Delay Start
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Delay                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCreative_Enabled_Component_C::Reset_Delay_Start(float Delay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_Enabled_Component_C", "Reset Delay Start");

	Params::Creative_Enabled_Component_C_Reset_Delay_Start Parms{};

	Parms.Delay = Delay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Creative_Enabled_Component.Creative_Enabled_Component_C.IsResetting
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   TRUE_0                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float*                                  Remaining_Time                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCreative_Enabled_Component_C::IsResetting(bool* TRUE_0, float* Remaining_Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_Enabled_Component_C", "IsResetting");

	Params::Creative_Enabled_Component_C_IsResetting Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TRUE_0 != nullptr)
		*TRUE_0 = Parms.TRUE_0;

	if (Remaining_Time != nullptr)
		*Remaining_Time = Parms.Remaining_Time;
}


// Function Creative_Enabled_Component.Creative_Enabled_Component_C.OnRep_EIsEnabled
// (HasDefaults, BlueprintCallable, BlueprintEvent)

void UCreative_Enabled_Component_C::OnRep_EIsEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_Enabled_Component_C", "OnRep_EIsEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Creative_Enabled_Component.Creative_Enabled_Component_C.Can be Enabled
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   TRUE_0                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCreative_Enabled_Component_C::Can_be_Enabled(bool* TRUE_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_Enabled_Component_C", "Can be Enabled");

	Params::Creative_Enabled_Component_C_Can_be_Enabled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TRUE_0 != nullptr)
		*TRUE_0 = Parms.TRUE_0;
}

}

