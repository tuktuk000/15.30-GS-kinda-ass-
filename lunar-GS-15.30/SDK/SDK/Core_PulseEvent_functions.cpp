#pragma once

/*
* SDK generated by Dumper-8
*
* https://github.com/NotTacs/Dumper-8
*/

// Package: Core_PulseEvent

#include "Basic.hpp"

#include "Core_PulseEvent_classes.hpp"
#include "Core_PulseEvent_parameters.hpp"


namespace SDK
{

// Function Core_PulseEvent.Context_PulseEvent_wait.Update
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   RetVal                                                 (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UContext_PulseEvent_wait::Update()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Context_PulseEvent_wait", "Update");

	Params::Context_PulseEvent_wait_Update Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Core_PulseEvent.PulseEvent.Create
// (Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UPulseEvent*                      RetVal                                                 (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UPulseEvent* UPulseEvent::Create()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PulseEvent", "Create");

	Params::PulseEvent_Create Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Core_PulseEvent.PulseEvent.$InitCDO
// ()

void UPulseEvent::_InitCDO()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PulseEvent", "$InitCDO");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Core_PulseEvent.PulseEvent.$InitInstance
// ()

void UPulseEvent::_InitInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PulseEvent", "$InitInstance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Core_PulseEvent.PulseEvent.signal
// (Native, Public, BlueprintCallable)

void UPulseEvent::signal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PulseEvent", "signal");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}

