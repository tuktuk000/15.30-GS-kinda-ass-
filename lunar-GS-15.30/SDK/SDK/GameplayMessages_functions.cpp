#pragma once

/*
* SDK generated by Dumper-8
*
* https://github.com/NotTacs/Dumper-8
*/

// Package: GameplayMessages

#include "Basic.hpp"

#include "GameplayMessages_classes.hpp"
#include "GameplayMessages_parameters.hpp"


namespace SDK
{

// Function GameplayMessages.AsyncAction_RegisterGameplayMessageReceiver.RegisterGameplayMessageReceiver
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              Channel                                                (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGameplayMessageMatchType               MatchType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bTriggerForSaved                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ActorContext                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAsyncAction_RegisterGameplayMessageReceiver*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAsyncAction_RegisterGameplayMessageReceiver* UAsyncAction_RegisterGameplayMessageReceiver::RegisterGameplayMessageReceiver(class UObject* WorldContextObject, const struct FGameplayTag& Channel, EGameplayMessageMatchType MatchType, bool bTriggerForSaved, class AActor* ActorContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AsyncAction_RegisterGameplayMessageReceiver", "RegisterGameplayMessageReceiver");

	Params::AsyncAction_RegisterGameplayMessageReceiver_RegisterGameplayMessageReceiver Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Channel = std::move(Channel);
	Parms.MatchType = MatchType;
	Parms.bTriggerForSaved = bTriggerForSaved;
	Parms.ActorContext = ActorContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameplayMessages.AsyncAction_RegisterGameplayMessageReceiver.GetPayload
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32&                                  OutPayload                                             (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAsyncAction_RegisterGameplayMessageReceiver::GetPayload(int32& OutPayload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AsyncAction_RegisterGameplayMessageReceiver", "GetPayload");

	Params::AsyncAction_RegisterGameplayMessageReceiver_GetPayload Parms{};

	Parms.OutPayload = OutPayload;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	OutPayload = Parms.OutPayload;

	return Parms.ReturnValue;
}


// Function GameplayMessages.AsyncAction_RegisterGameplayMessageReceiver.Unregister
// (Final, Native, Public, BlueprintCallable)

void UAsyncAction_RegisterGameplayMessageReceiver::Unregister()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AsyncAction_RegisterGameplayMessageReceiver", "Unregister");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameplayMessages.GameplayMessageReplicator.Multicast_ServerMessageTriggered
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// const struct FGameplayTag&              Channel                                                (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FReplicatedMessage&        MessageData                                            (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void AGameplayMessageReplicator::Multicast_ServerMessageTriggered(const struct FGameplayTag& Channel, const struct FReplicatedMessage& MessageData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameplayMessageReplicator", "Multicast_ServerMessageTriggered");

	Params::GameplayMessageReplicator_Multicast_ServerMessageTriggered Parms{};

	Parms.Channel = std::move(Channel);
	Parms.MessageData = std::move(MessageData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameplayMessages.GameplayMessageRouter.ClearSavedMessage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              Channel                                                (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameplayMessageRouter::ClearSavedMessage(const struct FGameplayTag& Channel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameplayMessageRouter", "ClearSavedMessage");

	Params::GameplayMessageRouter_ClearSavedMessage Parms{};

	Parms.Channel = std::move(Channel);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameplayMessages.GameplayMessageRouter.K2_BroadcastMessage
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              Channel                                                (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32&                            Message                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bReplicate                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSaveToChannel                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ActorContext                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameplayMessageRouter::K2_BroadcastMessage(const struct FGameplayTag& Channel, const int32& Message, bool bReplicate, bool bSaveToChannel, class AActor* ActorContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameplayMessageRouter", "K2_BroadcastMessage");

	Params::GameplayMessageRouter_K2_BroadcastMessage Parms{};

	Parms.Channel = std::move(Channel);
	Parms.Message = Message;
	Parms.bReplicate = bReplicate;
	Parms.bSaveToChannel = bSaveToChannel;
	Parms.ActorContext = ActorContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

