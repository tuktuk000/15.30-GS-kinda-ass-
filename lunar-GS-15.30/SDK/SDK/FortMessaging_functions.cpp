#pragma once

/*
* SDK generated by Dumper-8
*
* https://github.com/NotTacs/Dumper-8
*/

// Package: FortMessaging

#include "Basic.hpp"

#include "FortMessaging_classes.hpp"
#include "FortMessaging_parameters.hpp"


namespace SDK
{

// Function FortMessaging.FortMessageBusComponent.Multicast_ServerMessageTriggered
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// const class FName&                      MessageType                                            (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    MessagePayload                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMessageBusComponent::Multicast_ServerMessageTriggered(const class FName& MessageType, const class FString& MessagePayload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMessageBusComponent", "Multicast_ServerMessageTriggered");

	Params::FortMessageBusComponent_Multicast_ServerMessageTriggered Parms{};

	Parms.MessageType = MessageType;
	Parms.MessagePayload = std::move(MessagePayload);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

