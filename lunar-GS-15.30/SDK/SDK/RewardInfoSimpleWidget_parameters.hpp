#pragma once

/*
* SDK generated by Dumper-8
*
* https://github.com/NotTacs/Dumper-8
*/

// Package: RewardInfoSimpleWidget

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function RewardInfoSimpleWidget.RewardInfoSimpleWidget_C.ExecuteUbergraph_RewardInfoSimpleWidget
// 0x0068 (0x0068 - 0x0000)
struct RewardInfoSimpleWidget_C_ExecuteUbergraph_RewardInfoSimpleWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetQuantity_ReturnValue;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortItem*                              CallFunc_GetItemInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0010(0x0018)()
	class UFortItemDefinition*                    CallFunc_GetItemDefinitionBP_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_1;      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-8 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_GetSmallPreviewImage_ReturnValue;         // 0x0038(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function RewardInfoSimpleWidget.RewardInfoSimpleWidget_C.GetDisplayName
// 0x1048 (0x1048 - 0x0000)
struct RewardInfoSimpleWidget_C_GetDisplayName final
{
public:
	class FText                                   DisplayName;                                       // 0x0000(0x0018)(Parm, OutParm)
	class FText                                   OutName;                                           // 0x0018(0x0018)(Edit, BlueprintVisible)
	EFortItemType                                 Temp_byte_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-8 ])
	class FText                                   Temp_text_Variable;                                // 0x0038(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0050(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0068(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0080(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0098(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x00B0(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x00C8(0x0018)()
	class FText                                   Temp_text_Variable_7;                              // 0x00E0(0x0018)()
	class FText                                   Temp_text_Variable_8;                              // 0x00F8(0x0018)()
	class FText                                   Temp_text_Variable_9;                              // 0x0110(0x0018)()
	class FText                                   Temp_text_Variable_10;                             // 0x0128(0x0018)()
	class FText                                   Temp_text_Variable_11;                             // 0x0140(0x0018)()
	class FText                                   Temp_text_Variable_12;                             // 0x0158(0x0018)()
	class FText                                   Temp_text_Variable_13;                             // 0x0170(0x0018)()
	class FText                                   Temp_text_Variable_14;                             // 0x0188(0x0018)()
	class FText                                   Temp_text_Variable_15;                             // 0x01A0(0x0018)()
	class FText                                   Temp_text_Variable_16;                             // 0x01B8(0x0018)()
	class FText                                   Temp_text_Variable_17;                             // 0x01D0(0x0018)()
	class FText                                   Temp_text_Variable_18;                             // 0x01E8(0x0018)()
	class FText                                   Temp_text_Variable_19;                             // 0x0200(0x0018)()
	class FText                                   Temp_text_Variable_20;                             // 0x0218(0x0018)()
	class FText                                   Temp_text_Variable_21;                             // 0x0230(0x0018)()
	class FText                                   Temp_text_Variable_22;                             // 0x0248(0x0018)()
	class FText                                   Temp_text_Variable_23;                             // 0x0260(0x0018)()
	class FText                                   Temp_text_Variable_24;                             // 0x0278(0x0018)()
	class FText                                   Temp_text_Variable_25;                             // 0x0290(0x0018)()
	class FText                                   Temp_text_Variable_26;                             // 0x02A8(0x0018)()
	class FText                                   Temp_text_Variable_27;                             // 0x02C0(0x0018)()
	class FText                                   Temp_text_Variable_28;                             // 0x02D8(0x0018)()
	class FText                                   Temp_text_Variable_29;                             // 0x02F0(0x0018)()
	class FText                                   Temp_text_Variable_30;                             // 0x0308(0x0018)()
	class FText                                   Temp_text_Variable_31;                             // 0x0320(0x0018)()
	class FText                                   Temp_text_Variable_32;                             // 0x0338(0x0018)()
	class FText                                   Temp_text_Variable_33;                             // 0x0350(0x0018)()
	class FText                                   Temp_text_Variable_34;                             // 0x0368(0x0018)()
	class FText                                   Temp_text_Variable_35;                             // 0x0380(0x0018)()
	class FText                                   Temp_text_Variable_36;                             // 0x0398(0x0018)()
	class FText                                   Temp_text_Variable_37;                             // 0x03B0(0x0018)()
	class FText                                   Temp_text_Variable_38;                             // 0x03C8(0x0018)()
	class FText                                   Temp_text_Variable_39;                             // 0x03E0(0x0018)()
	class FText                                   Temp_text_Variable_40;                             // 0x03F8(0x0018)()
	class FText                                   Temp_text_Variable_41;                             // 0x0410(0x0018)()
	class FText                                   Temp_text_Variable_42;                             // 0x0428(0x0018)()
	class FText                                   Temp_text_Variable_43;                             // 0x0440(0x0018)()
	class FText                                   Temp_text_Variable_44;                             // 0x0458(0x0018)()
	class FText                                   Temp_text_Variable_45;                             // 0x0470(0x0018)()
	class FText                                   Temp_text_Variable_46;                             // 0x0488(0x0018)()
	class FText                                   Temp_text_Variable_47;                             // 0x04A0(0x0018)()
	class FText                                   Temp_text_Variable_48;                             // 0x04B8(0x0018)()
	class FText                                   Temp_text_Variable_49;                             // 0x04D0(0x0018)()
	class FText                                   Temp_text_Variable_50;                             // 0x04E8(0x0018)()
	class FText                                   Temp_text_Variable_51;                             // 0x0500(0x0018)()
	class FText                                   Temp_text_Variable_52;                             // 0x0518(0x0018)()
	class FText                                   Temp_text_Variable_53;                             // 0x0530(0x0018)()
	class FText                                   Temp_text_Variable_54;                             // 0x0548(0x0018)()
	class FText                                   Temp_text_Variable_55;                             // 0x0560(0x0018)()
	class FText                                   Temp_text_Variable_56;                             // 0x0578(0x0018)()
	class FText                                   Temp_text_Variable_57;                             // 0x0590(0x0018)()
	class FText                                   Temp_text_Variable_58;                             // 0x05A8(0x0018)()
	class FText                                   Temp_text_Variable_59;                             // 0x05C0(0x0018)()
	class FText                                   Temp_text_Variable_60;                             // 0x05D8(0x0018)()
	class FText                                   Temp_text_Variable_61;                             // 0x05F0(0x0018)()
	class FText                                   Temp_text_Variable_62;                             // 0x0608(0x0018)()
	class FText                                   Temp_text_Variable_63;                             // 0x0620(0x0018)()
	class FText                                   Temp_text_Variable_64;                             // 0x0638(0x0018)()
	class FText                                   Temp_text_Variable_65;                             // 0x0650(0x0018)()
	class FText                                   Temp_text_Variable_66;                             // 0x0668(0x0018)()
	class FText                                   Temp_text_Variable_67;                             // 0x0680(0x0018)()
	class FText                                   Temp_text_Variable_68;                             // 0x0698(0x0018)()
	class FText                                   Temp_text_Variable_69;                             // 0x06B0(0x0018)()
	class FText                                   Temp_text_Variable_70;                             // 0x06C8(0x0018)()
	class FText                                   Temp_text_Variable_71;                             // 0x06E0(0x0018)()
	class FText                                   Temp_text_Variable_72;                             // 0x06F8(0x0018)()
	class FText                                   Temp_text_Variable_73;                             // 0x0710(0x0018)()
	class FText                                   Temp_text_Variable_74;                             // 0x0728(0x0018)()
	class FText                                   Temp_text_Variable_75;                             // 0x0740(0x0018)()
	class FText                                   Temp_text_Variable_76;                             // 0x0758(0x0018)()
	class FText                                   Temp_text_Variable_77;                             // 0x0770(0x0018)()
	class FText                                   Temp_text_Variable_78;                             // 0x0788(0x0018)()
	class FText                                   Temp_text_Variable_79;                             // 0x07A0(0x0018)()
	class FText                                   Temp_text_Variable_80;                             // 0x07B8(0x0018)()
	class FText                                   Temp_text_Variable_81;                             // 0x07D0(0x0018)()
	class FText                                   Temp_text_Variable_82;                             // 0x07E8(0x0018)()
	class FText                                   Temp_text_Variable_83;                             // 0x0800(0x0018)()
	class FText                                   Temp_text_Variable_84;                             // 0x0818(0x0018)()
	class FText                                   Temp_text_Variable_85;                             // 0x0830(0x0018)()
	class FText                                   Temp_text_Variable_86;                             // 0x0848(0x0018)()
	class FText                                   Temp_text_Variable_87;                             // 0x0860(0x0018)()
	class FText                                   Temp_text_Variable_88;                             // 0x0878(0x0018)()
	class FText                                   Temp_text_Variable_89;                             // 0x0890(0x0018)()
	class FText                                   Temp_text_Variable_90;                             // 0x08A8(0x0018)()
	class FText                                   Temp_text_Variable_91;                             // 0x08C0(0x0018)()
	class FText                                   Temp_text_Variable_92;                             // 0x08D8(0x0018)()
	class FText                                   Temp_text_Variable_93;                             // 0x08F0(0x0018)()
	class FText                                   Temp_text_Variable_94;                             // 0x0908(0x0018)()
	class FText                                   Temp_text_Variable_95;                             // 0x0920(0x0018)()
	class FText                                   Temp_text_Variable_96;                             // 0x0938(0x0018)()
	class FText                                   Temp_text_Variable_97;                             // 0x0950(0x0018)()
	class FText                                   Temp_text_Variable_98;                             // 0x0968(0x0018)()
	class FText                                   Temp_text_Variable_99;                             // 0x0980(0x0018)()
	class FText                                   Temp_text_Variable_100;                            // 0x0998(0x0018)()
	class FText                                   Temp_text_Variable_101;                            // 0x09B0(0x0018)()
	class FText                                   Temp_text_Variable_102;                            // 0x09C8(0x0018)()
	class FText                                   Temp_text_Variable_103;                            // 0x09E0(0x0018)()
	class FText                                   Temp_text_Variable_104;                            // 0x09F8(0x0018)()
	class FText                                   Temp_text_Variable_105;                            // 0x0A10(0x0018)()
	class FText                                   Temp_text_Variable_106;                            // 0x0A28(0x0018)()
	class FText                                   Temp_text_Variable_107;                            // 0x0A40(0x0018)()
	class FText                                   Temp_text_Variable_108;                            // 0x0A58(0x0018)()
	class FText                                   Temp_text_Variable_109;                            // 0x0A70(0x0018)()
	class FText                                   Temp_text_Variable_110;                            // 0x0A88(0x0018)()
	class FText                                   Temp_text_Variable_111;                            // 0x0AA0(0x0018)()
	class FText                                   Temp_text_Variable_112;                            // 0x0AB8(0x0018)()
	class FText                                   Temp_text_Variable_113;                            // 0x0AD0(0x0018)()
	class FText                                   Temp_text_Variable_114;                            // 0x0AE8(0x0018)()
	class FText                                   Temp_text_Variable_115;                            // 0x0B00(0x0018)()
	class FText                                   Temp_text_Variable_116;                            // 0x0B18(0x0018)()
	class FText                                   Temp_text_Variable_117;                            // 0x0B30(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0B48(0x0018)()
	class UFortItem*                              CallFunc_GetItemInstance_ReturnValue;              // 0x0B60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0B68(0x0040)(HasGetValueTypeHash)
	EFortRarity                                   CallFunc_GetRarity_ReturnValue;                    // 0x0BA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA9[0x7];                                      // 0x0BA9(0x0007)(Fixing Size After Last Property [ Dumper-8 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0BB0(0x0018)()
	struct FFortRarityItemData                    CallFunc_BPGetRarityData_ReturnValue;              // 0x0BC8(0x0080)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0C48(0x0040)(HasGetValueTypeHash)
	struct FFortRarityItemData                    CallFunc_BPGetRarityData_ReturnValue_1;            // 0x0C88(0x0080)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0D08(0x0040)(HasGetValueTypeHash)
	struct FFortRarityItemData                    CallFunc_BPGetRarityData_ReturnValue_2;            // 0x0D48(0x0080)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0DC8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0E08(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0E18(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0E58(0x0018)()
	class UFortItem*                              CallFunc_GetItemInstance_ReturnValue_1;            // 0x0E70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortWorker*                            K2Node_DynamicCast_AsFort_Worker;                  // 0x0E78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0E80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortInventoryFilter                          CallFunc_GetFilterCategory_ReturnValue;            // 0x0E81(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0E82(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E83[0x5];                                      // 0x0E83(0x0005)(Fixing Size After Last Property [ Dumper-8 ])
	class UFortItem*                              CallFunc_GetItemInstance_ReturnValue_2;            // 0x0E88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetTertiaryCategory_ItemCategoryText;     // 0x0E90(0x0018)()
	struct FSlateBrush                            CallFunc_GetTertiaryCategory_ItemCategoryBrush;    // 0x0EA8(0x0088)()
	bool                                          CallFunc_GetTertiaryCategory_ReturnValue;          // 0x0F30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F31[0x7];                                      // 0x0F31(0x0007)(Fixing Size After Last Property [ Dumper-8 ])
	class UFortItem*                              CallFunc_GetItemInstance_ReturnValue_3;            // 0x0F38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0F40(0x0040)(HasGetValueTypeHash)
	EFortItemType                                 CallFunc_GetType_ReturnValue;                      // 0x0F80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F81[0x7];                                      // 0x0F81(0x0007)(Fixing Size After Last Property [ Dumper-8 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0F88(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0F98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F99[0x7];                                      // 0x0F99(0x0007)(Fixing Size After Last Property [ Dumper-8 ])
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0FA0(0x0018)()
	class UFortItem*                              CallFunc_GetItemInstance_ReturnValue_4;            // 0x0FB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortItemType                                 CallFunc_GetType_ReturnValue_1;                    // 0x0FC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC1[0x7];                                      // 0x0FC1(0x0007)(Fixing Size After Last Property [ Dumper-8 ])
	class FText                                   K2Node_Select_Default;                             // 0x0FC8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0FE0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x1020(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x1030(0x0018)()
};

}

