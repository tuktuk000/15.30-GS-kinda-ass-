#pragma once

/*
* SDK generated by Dumper-8
*
* https://github.com/NotTacs/Dumper-8
*/

// Package: SubscriptionDetailsWidget

#include "Basic.hpp"

#include "SubscriptionDetailsWidget_classes.hpp"
#include "SubscriptionDetailsWidget_parameters.hpp"


namespace SDK
{

// Function SubscriptionDetailsWidget.SubscriptionDetailsWidget_C.ExecuteUbergraph_SubscriptionDetailsWidget
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USubscriptionDetailsWidget_C::ExecuteUbergraph_SubscriptionDetailsWidget(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SubscriptionDetailsWidget_C", "ExecuteUbergraph_SubscriptionDetailsWidget");

	Params::SubscriptionDetailsWidget_C_ExecuteUbergraph_SubscriptionDetailsWidget Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SubscriptionDetailsWidget.SubscriptionDetailsWidget_C.OnBattlepassImageLoaded
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UTexture2D*                       SkinImage                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USubscriptionDetailsWidget_C::OnBattlepassImageLoaded(class UTexture2D* SkinImage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SubscriptionDetailsWidget_C", "OnBattlepassImageLoaded");

	Params::SubscriptionDetailsWidget_C_OnBattlepassImageLoaded Parms{};

	Parms.SkinImage = SkinImage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SubscriptionDetailsWidget.SubscriptionDetailsWidget_C.OnSkinImageLoaded
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UTexture2D*                       SkinImage                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USubscriptionDetailsWidget_C::OnSkinImageLoaded(class UTexture2D* SkinImage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SubscriptionDetailsWidget_C", "OnSkinImageLoaded");

	Params::SubscriptionDetailsWidget_C_OnSkinImageLoaded Parms{};

	Parms.SkinImage = SkinImage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SubscriptionDetailsWidget.SubscriptionDetailsWidget_C.OnScreenStateSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// EMcpSubscriptionState                   NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USubscriptionDetailsWidget_C::OnScreenStateSet(EMcpSubscriptionState NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SubscriptionDetailsWidget_C", "OnScreenStateSet");

	Params::SubscriptionDetailsWidget_C_OnScreenStateSet Parms{};

	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SubscriptionDetailsWidget.SubscriptionDetailsWidget_C.HandleTransitionToSubsScreenAnim
// (Public, BlueprintCallable, BlueprintEvent)

void USubscriptionDetailsWidget_C::HandleTransitionToSubsScreenAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SubscriptionDetailsWidget_C", "HandleTransitionToSubsScreenAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SubscriptionDetailsWidget.SubscriptionDetailsWidget_C.SetScreenForTransitionAnim
// (Public, BlueprintCallable, BlueprintEvent)

void USubscriptionDetailsWidget_C::SetScreenForTransitionAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SubscriptionDetailsWidget_C", "SetScreenForTransitionAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SubscriptionDetailsWidget.SubscriptionDetailsWidget_C.SetMaterialColors
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void USubscriptionDetailsWidget_C::SetMaterialColors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SubscriptionDetailsWidget_C", "SetMaterialColors");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SubscriptionDetailsWidget.SubscriptionDetailsWidget_C.SetRandomFlareTime
// (Public, BlueprintCallable, BlueprintEvent)

void USubscriptionDetailsWidget_C::SetRandomFlareTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SubscriptionDetailsWidget_C", "SetRandomFlareTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SubscriptionDetailsWidget.SubscriptionDetailsWidget_C.HandleStopTransitionToSubsAnim
// (Public, BlueprintCallable, BlueprintEvent)

void USubscriptionDetailsWidget_C::HandleStopTransitionToSubsAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SubscriptionDetailsWidget_C", "HandleStopTransitionToSubsAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SubscriptionDetailsWidget.SubscriptionDetailsWidget_C.SetScreenForResetState
// (Public, BlueprintCallable, BlueprintEvent)

void USubscriptionDetailsWidget_C::SetScreenForResetState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SubscriptionDetailsWidget_C", "SetScreenForResetState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SubscriptionDetailsWidget.SubscriptionDetailsWidget_C.OnBattlepassDisclaimerStateUpdated
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// ESubscriptionDisclaimerState            DisclaimerState                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USubscriptionDetailsWidget_C::OnBattlepassDisclaimerStateUpdated(ESubscriptionDisclaimerState DisclaimerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SubscriptionDetailsWidget_C", "OnBattlepassDisclaimerStateUpdated");

	Params::SubscriptionDetailsWidget_C_OnBattlepassDisclaimerStateUpdated Parms{};

	Parms.DisclaimerState = DisclaimerState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SubscriptionDetailsWidget.SubscriptionDetailsWidget_C.OnSkinDisclaimerStateUpdated
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// ESubscriptionDisclaimerState            DisclaimerState                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USubscriptionDetailsWidget_C::OnSkinDisclaimerStateUpdated(ESubscriptionDisclaimerState DisclaimerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SubscriptionDetailsWidget_C", "OnSkinDisclaimerStateUpdated");

	Params::SubscriptionDetailsWidget_C_OnSkinDisclaimerStateUpdated Parms{};

	Parms.DisclaimerState = DisclaimerState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SubscriptionDetailsWidget.SubscriptionDetailsWidget_C.OnVbucksDisclaimerStateUpdated
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// ESubscriptionDisclaimerState            DisclaimerState                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USubscriptionDetailsWidget_C::OnVbucksDisclaimerStateUpdated(ESubscriptionDisclaimerState DisclaimerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SubscriptionDetailsWidget_C", "OnVbucksDisclaimerStateUpdated");

	Params::SubscriptionDetailsWidget_C_OnVbucksDisclaimerStateUpdated Parms{};

	Parms.DisclaimerState = DisclaimerState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SubscriptionDetailsWidget.SubscriptionDetailsWidget_C.SetScreenCompletedAnimState
// (Public, BlueprintCallable, BlueprintEvent)

void USubscriptionDetailsWidget_C::SetScreenCompletedAnimState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SubscriptionDetailsWidget_C", "SetScreenCompletedAnimState");

	UObject::ProcessEvent(Func, nullptr);
}

}

