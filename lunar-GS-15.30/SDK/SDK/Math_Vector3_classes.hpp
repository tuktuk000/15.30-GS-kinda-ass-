#pragma once

/*
* SDK generated by Dumper-8
*
* https://github.com/NotTacs/Dumper-8
*/

// Package: Math_Vector3

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"


namespace SDK
{

// SolarisGeneratedClass Math_Vector3.Vector3
// 0x0010 (0x0038 - 0x0028)
class UVector3 final : public UObject
{
public:
	float                                         __verse_0x6F57CF8F_x;                              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         __verse_0x0A307337_y;                              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         __verse_0xE49FC625_z;                              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-8 ])

public:
	static class UVector3* Create(float __verse_0x3205F605_inX, float __verse_0x57624ABD_inY, float __verse_0xB9CDFFAF_inZ);
	static class UVector3* createOneVector();
	static class UVector3* createZero();
	static class UVector3* crossProduct(class UVector3* __verse_0xBAD88A47_v1, class UVector3* __verse_0x54773F55_v2);
	static float Distance(class UVector3* __verse_0xBAD88A47_v1, class UVector3* __verse_0x54773F55_v2);
	static float Distance2D(class UVector3* __verse_0xBAD88A47_v1, class UVector3* __verse_0x54773F55_v2);
	static float DistanceSquared(class UVector3* __verse_0xBAD88A47_v1, class UVector3* __verse_0x54773F55_v2);
	static float DistanceSquared2D(class UVector3* __verse_0xBAD88A47_v1, class UVector3* __verse_0x54773F55_v2);
	static float dotProduct(class UVector3* __verse_0xBAD88A47_v1, class UVector3* __verse_0x54773F55_v2);
	static class UVector3* reflectVector(class UVector3* __verse_0x8BEC05BA_direction, class UVector3* __verse_0xADA21017_surfaceNormal);

	void _InitCDO();
	void _InitInstance();
	class URotation3* ToRotation3();
	class UVector3* Add(class UVector3* __verse_0x5C20106F_v);
	class UVector3* addScalar(float __verse_0x805015BB_scalar);
	class UVector3* Divide(class UVector3* __verse_0x5C20106F_v);
	uint8 Equals(class UVector3* __verse_0x5C20106F_v, float __verse_0xB4A6AEEC_tolerance);
	class UVector3* Multiply(class UVector3* __verse_0x5C20106F_v);
	class UVector3* multiplyByScalar(float __verse_0x805015BB_scalar);
	class UVector3* Normal();
	float Size();
	float size2D();
	float sizeSquared();
	float sizeSquared2D();
	class UVector3* Subtract(class UVector3* __verse_0x5C20106F_v);
	class FString ToString();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Vector3">();
	}
	static class UVector3* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVector3>();
	}
};

}

