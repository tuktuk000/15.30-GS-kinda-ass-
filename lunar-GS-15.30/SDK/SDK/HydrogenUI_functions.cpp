#pragma once

/*
* SDK generated by Dumper-8
*
* https://github.com/NotTacs/Dumper-8
*/

// Package: HydrogenUI

#include "Basic.hpp"

#include "HydrogenUI_classes.hpp"
#include "HydrogenUI_parameters.hpp"


namespace SDK
{

// Function HydrogenUI.HydrogenWidgetBase.MutatorReady
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class AFortAthenaMutator_Hydrogen*MutatorActor                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHydrogenWidgetBase::MutatorReady(const class AFortAthenaMutator_Hydrogen* MutatorActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HydrogenWidgetBase", "MutatorReady");

	Params::HydrogenWidgetBase_MutatorReady Parms{};

	Parms.MutatorActor = MutatorActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HydrogenUI.HydrogenWidgetBase.OnMutatorAvailable
// (Native, Protected, BlueprintCallable)
// Parameters:
// class AFortGameplayMutator*             MutatorActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHydrogenWidgetBase::OnMutatorAvailable(class AFortGameplayMutator* MutatorActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HydrogenWidgetBase", "OnMutatorAvailable");

	Params::HydrogenWidgetBase_OnMutatorAvailable Parms{};

	Parms.MutatorActor = MutatorActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function HydrogenUI.HydrogenWidgetBase.GetCaptureProgressPercent
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class AHydrogenObjectiveActor*    InObjective                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHydrogenWidgetBase::GetCaptureProgressPercent(const class AHydrogenObjectiveActor* InObjective) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HydrogenWidgetBase", "GetCaptureProgressPercent");

	Params::HydrogenWidgetBase_GetCaptureProgressPercent Parms{};

	Parms.InObjective = InObjective;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function HydrogenUI.HydrogenWidgetBase.GetHydrogenMutator
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortAthenaMutator_Hydrogen*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortAthenaMutator_Hydrogen* UHydrogenWidgetBase::GetHydrogenMutator() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HydrogenWidgetBase", "GetHydrogenMutator");

	Params::HydrogenWidgetBase_GetHydrogenMutator Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

