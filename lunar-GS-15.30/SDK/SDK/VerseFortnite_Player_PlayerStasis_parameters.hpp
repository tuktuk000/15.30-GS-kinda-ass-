#pragma once

/*
* SDK generated by Dumper-8
*
* https://github.com/NotTacs/Dumper-8
*/

// Package: VerseFortnite_Player_PlayerStasis

#include "Basic.hpp"


namespace SDK::Params
{

// Function VerseFortnite_Player_PlayerStasis.PlayerStasis.putInStasis
// 0x0008 (0x0008 - 0x0000)
struct PlayerStasis_putInStasis final
{
public:
	class UPlayerComponent*                       __verse_0x9F1D658F_player;                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};

// Function VerseFortnite_Player_PlayerStasis.PlayerStasis.putInStasisAdvanced
// 0x0010 (0x0010 - 0x0000)
struct PlayerStasis_putInStasisAdvanced final
{
public:
	class UPlayerComponent*                       __verse_0x9F1D658F_player;                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         __verse_0x294A1F71_allowTurning : 1;               // 0x0008(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Parm, NoDestructor))
	uint8                                         BitPad_8_1 : 7;                                    // 0x0008(0x0001)(Fixing Bit-Field Size For New Byte [ Dumper-8 ])
	uint8                                         __verse_0x8045D801_allowFalling : 1;               // 0x0009(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Parm, NoDestructor))
	uint8                                         BitPad_9_1 : 7;                                    // 0x0009(0x0001)(Fixing Bit-Field Size For New Byte [ Dumper-8 ])
	uint8                                         __verse_0x9090278F_allowEmotes : 1;                // 0x000A(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Parm, NoDestructor))
};

// Function VerseFortnite_Player_PlayerStasis.PlayerStasis.releaseFromStasis
// 0x0008 (0x0008 - 0x0000)
struct PlayerStasis_releaseFromStasis final
{
public:
	class UPlayerComponent*                       __verse_0x9F1D658F_player;                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};

}

