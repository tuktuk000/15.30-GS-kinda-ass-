#pragma once

/*
* SDK generated by Dumper-8
*
* https://github.com/NotTacs/Dumper-8
*/

// Package: ScoreRuntime

#include "Basic.hpp"

#include "ScoreRuntime_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK
{

// Class ScoreRuntime.FortAthenaMutator_Score
// 0x0580 (0x0840 - 0x02C0)
class AFortAthenaMutator_Score final : public AFortAthenaMutator
{
public:
	uint8                                         Pad_2C0[0x18];                                     // 0x02C0(0x0018)(Fixing Size After Last Property [ Dumper-8 ])
	struct FScoreLTMBonusWindow                   CurrentBonusWindow;                                // 0x02D8(0x000C)(Net, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_2E4[0x64];                                     // 0x02E4(0x0064)(Fixing Size After Last Property [ Dumper-8 ])
	bool                                          bSupportsRespawnConfig;                            // 0x0348(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bRespawnsAllowed;                                  // 0x0349(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_34A[0x6];                                      // 0x034A(0x0006)(Fixing Size After Last Property [ Dumper-8 ])
	struct FScalableFloat                         StopRespawnPhase;                                  // 0x0350(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FFortRespawnLogicData                  RespawnLogicData;                                  // 0x0378(0x0140)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                   GameMsgText_Intro;                                 // 0x04B8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FScoreLTMCoinSpawnMessageData>  CoinMessageData;                                   // 0x04D0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAthenaGameMessageData                 GameMsg_NoMoreRespawnsWarning;                     // 0x04E0(0x0040)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FAthenaGameMessageData                 GameMsg_NoMoreRespawns;                            // 0x0520(0x0040)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FAthenaGameMessageData                 GameMsg_TopScoringTeamDied;                        // 0x0560(0x0040)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FScoreLTMScoreEventData>        ScoreEventDataArray;                               // 0x05A0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScoreLTMTeamDataArray                 TeamDataArray;                                     // 0x05B0(0x0120)(Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         MinBonusWindowTime;                                // 0x06D0(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         MaxBonusWindowTime;                                // 0x06F8(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         MinTimeBetweenBonusWindows;                        // 0x0720(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         MaxTimeBetweenBonusWindows;                        // 0x0748(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         BonusWindowPreviewTime;                            // 0x0770(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         BonusWindowStartingSafeZoneIndex;                  // 0x0798(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         BonusWindowStartingDelay;                          // 0x07C0(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         bAllowBackToBackBonusWindowRepeats;                // 0x07E8(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FScoreLTMBonusWindowCategoryData> BonusWindowCategoryDataArray;                    // 0x0810(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_820[0x10];                                     // 0x0820(0x0010)(Fixing Size After Last Property [ Dumper-8 ])
	class AFortAthenaMutator_TeamPlacement*       TeamPlacementMutator;                              // 0x0830(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_838[0x8];                                      // 0x0838(0x0008)(Fixing Struct Size After Last Property [ Dumper-8 ])

public:
	void ActivateBonusWindow();
	void OnActiveBonusWindowEnded();
	void OnAIPawnKilled(class AController* Killer, class AFortAIPawn* KilledAIPawn, const struct FGameplayTagContainer& InTags);
	void OnGamePhaseStepChanged(const TScriptInterface<class IFortSafeZoneInterface>& SafeZoneInterface, const EAthenaGamePhaseStep GamePhaseStep);
	void OnMutatorGameplayEvent(int32 EventId, int32 EventParam1, int32 EventParam2, int32 EventParam3);
	void OnRep_CurrentBonusWindow(const struct FScoreLTMBonusWindow& LastBonusWindow);
	void OnRep_TeamDataArray();
	void OnSafeZoneUpdated();
	void StartBonusWindowPreview();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortAthenaMutator_Score">();
	}
	static class AFortAthenaMutator_Score* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFortAthenaMutator_Score>();
	}
};

// Class ScoreRuntime.FortCheatManager_Score
// 0x0000 (0x0038 - 0x0038)
class UFortCheatManager_Score final : public UFortCheatManager_Coupled
{
public:
	void ScoreLTMCheatScoreEvent(int32 ScoreEvent);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortCheatManager_Score">();
	}
	static class UFortCheatManager_Score* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortCheatManager_Score>();
	}
};

}

