#pragma once

/*
* SDK generated by Dumper-8
*
* https://github.com/NotTacs/Dumper-8
*/

// Package: GA_Break_Dragon_Shotgun_Fire

#include "Basic.hpp"

#include "GA_Break_Dragon_Shotgun_Fire_classes.hpp"
#include "GA_Break_Dragon_Shotgun_Fire_parameters.hpp"


namespace SDK
{

// Function GA_Break_Dragon_Shotgun_Fire.GA_Break_Dragon_Shotgun_Fire_C.ExecuteUbergraph_GA_Break_Dragon_Shotgun_Fire
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_Break_Dragon_Shotgun_Fire_C::ExecuteUbergraph_GA_Break_Dragon_Shotgun_Fire(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Break_Dragon_Shotgun_Fire_C", "ExecuteUbergraph_GA_Break_Dragon_Shotgun_Fire");

	Params::GA_Break_Dragon_Shotgun_Fire_C_ExecuteUbergraph_GA_Break_Dragon_Shotgun_Fire Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_Break_Dragon_Shotgun_Fire.GA_Break_Dragon_Shotgun_Fire_C.K2_ActivateAbilityFromEvent
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FGameplayEventData&        EventData                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UGA_Break_Dragon_Shotgun_Fire_C::K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Break_Dragon_Shotgun_Fire_C", "K2_ActivateAbilityFromEvent");

	Params::GA_Break_Dragon_Shotgun_Fire_C_K2_ActivateAbilityFromEvent Parms{};

	Parms.EventData = std::move(EventData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_Break_Dragon_Shotgun_Fire.GA_Break_Dragon_Shotgun_Fire_C.GetStartTraceLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ACharacter*                       Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector UGA_Break_Dragon_Shotgun_Fire_C::GetStartTraceLocation(class ACharacter* Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Break_Dragon_Shotgun_Fire_C", "GetStartTraceLocation");

	Params::GA_Break_Dragon_Shotgun_Fire_C_GetStartTraceLocation Parms{};

	Parms.Pawn = Pawn;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GA_Break_Dragon_Shotgun_Fire.GA_Break_Dragon_Shotgun_Fire_C.GetTraceAngleOffset
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AFortPawn*                        Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   AngleIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector UGA_Break_Dragon_Shotgun_Fire_C::GetTraceAngleOffset(class AFortPawn* Pawn, int32 AngleIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Break_Dragon_Shotgun_Fire_C", "GetTraceAngleOffset");

	Params::GA_Break_Dragon_Shotgun_Fire_C_GetTraceAngleOffset Parms{};

	Parms.Pawn = Pawn;
	Parms.AngleIndex = AngleIndex;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

