#pragma once

/*
* SDK generated by Dumper-8
*
* https://github.com/NotTacs/Dumper-8
*/

// Package: B_HeldObjectSocketManager

#include "Basic.hpp"

#include "B_HeldObjectSocketManager_classes.hpp"
#include "B_HeldObjectSocketManager_parameters.hpp"


namespace SDK
{

// Function B_HeldObjectSocketManager.B_HeldObjectSocketManager_C.ExecuteUbergraph_B_HeldObjectSocketManager
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_HeldObjectSocketManager_C::ExecuteUbergraph_B_HeldObjectSocketManager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_HeldObjectSocketManager_C", "ExecuteUbergraph_B_HeldObjectSocketManager");

	Params::B_HeldObjectSocketManager_C_ExecuteUbergraph_B_HeldObjectSocketManager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_HeldObjectSocketManager.B_HeldObjectSocketManager_C.OnCombinationCorrect
// (BlueprintCallable, BlueprintEvent)

void AB_HeldObjectSocketManager_C::OnCombinationCorrect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_HeldObjectSocketManager_C", "OnCombinationCorrect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_HeldObjectSocketManager.B_HeldObjectSocketManager_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AB_HeldObjectSocketManager_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_HeldObjectSocketManager_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_HeldObjectSocketManager.B_HeldObjectSocketManager_C.UpdateHeldObjectTags
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AB_HeldObjectSocket_C*            ChangedSocket                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_HeldObjectSocketManager_C::UpdateHeldObjectTags(class AB_HeldObjectSocket_C* ChangedSocket)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_HeldObjectSocketManager_C", "UpdateHeldObjectTags");

	Params::B_HeldObjectSocketManager_C_UpdateHeldObjectTags Parms{};

	Parms.ChangedSocket = ChangedSocket;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_HeldObjectSocketManager.B_HeldObjectSocketManager_C.VerifyHeldObjectTags
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FGameplayTagContainer>&   CorrectTags                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// TArray<struct FGameplayTagContainer>&   CurrentTags_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// bool                                    OrderMatters                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool*                                   IsValidMatch                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AB_HeldObjectSocketManager_C::VerifyHeldObjectTags(TArray<struct FGameplayTagContainer>& CorrectTags, TArray<struct FGameplayTagContainer>& CurrentTags_0, bool OrderMatters, bool* IsValidMatch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_HeldObjectSocketManager_C", "VerifyHeldObjectTags");

	Params::B_HeldObjectSocketManager_C_VerifyHeldObjectTags Parms{};

	Parms.CorrectTags = std::move(CorrectTags);
	Parms.CurrentTags_0 = std::move(CurrentTags_0);
	Parms.OrderMatters = OrderMatters;

	UObject::ProcessEvent(Func, &Parms);

	CorrectTags = std::move(Parms.CorrectTags);
	CurrentTags_0 = std::move(Parms.CurrentTags_0);

	if (IsValidMatch != nullptr)
		*IsValidMatch = Parms.IsValidMatch;
}


// Function B_HeldObjectSocketManager.B_HeldObjectSocketManager_C.CheckTagMatches
// (Public, BlueprintCallable, BlueprintEvent)

void AB_HeldObjectSocketManager_C::CheckTagMatches()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_HeldObjectSocketManager_C", "CheckTagMatches");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_HeldObjectSocketManager.B_HeldObjectSocketManager_C.OnRep_CombinationCorrect
// (BlueprintCallable, BlueprintEvent)

void AB_HeldObjectSocketManager_C::OnRep_CombinationCorrect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_HeldObjectSocketManager_C", "OnRep_CombinationCorrect");

	UObject::ProcessEvent(Func, nullptr);
}

}

