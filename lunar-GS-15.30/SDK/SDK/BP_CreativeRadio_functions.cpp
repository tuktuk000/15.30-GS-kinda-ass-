#pragma once

/*
* SDK generated by Dumper-8
*
* https://github.com/NotTacs/Dumper-8
*/

// Package: BP_CreativeRadio

#include "Basic.hpp"

#include "BP_CreativeRadio_classes.hpp"
#include "BP_CreativeRadio_parameters.hpp"


namespace SDK
{

// Function BP_CreativeRadio.BP_CreativeRadio_C.ExecuteUbergraph_BP_CreativeRadio
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CreativeRadio_C::ExecuteUbergraph_BP_CreativeRadio(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CreativeRadio_C", "ExecuteUbergraph_BP_CreativeRadio");

	Params::BP_CreativeRadio_C_ExecuteUbergraph_BP_CreativeRadio Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CreativeRadio.BP_CreativeRadio_C.OnWorldReady
// (Event, Public, BlueprintEvent)

void ABP_CreativeRadio_C::OnWorldReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CreativeRadio_C", "OnWorldReady");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CreativeRadio.BP_CreativeRadio_C.BndEvt__ToyOptionsComponent_K2Node_ComponentBoundEvent_1_AnyPropertyChangedDelegate__DelegateSignature
// (BlueprintEvent)

void ABP_CreativeRadio_C::BndEvt__ToyOptionsComponent_K2Node_ComponentBoundEvent_1_AnyPropertyChangedDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CreativeRadio_C", "BndEvt__ToyOptionsComponent_K2Node_ComponentBoundEvent_1_AnyPropertyChangedDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CreativeRadio.BP_CreativeRadio_C.BndEvt__ToyOptionsComponent_K2Node_ComponentBoundEvent_0_AnyPropertyChangedDelegate__DelegateSignature
// (BlueprintEvent)

void ABP_CreativeRadio_C::BndEvt__ToyOptionsComponent_K2Node_ComponentBoundEvent_0_AnyPropertyChangedDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CreativeRadio_C", "BndEvt__ToyOptionsComponent_K2Node_ComponentBoundEvent_0_AnyPropertyChangedDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CreativeRadio.BP_CreativeRadio_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_CreativeRadio_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CreativeRadio_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CreativeRadio.BP_CreativeRadio_C.OnPropertyChanged
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CreativeRadio_C::OnPropertyChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CreativeRadio_C", "OnPropertyChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CreativeRadio.BP_CreativeRadio_C.OnRep_CachedVolumeMultiplier
// (BlueprintCallable, BlueprintEvent)

void ABP_CreativeRadio_C::OnRep_CachedVolumeMultiplier()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CreativeRadio_C", "OnRep_CachedVolumeMultiplier");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CreativeRadio.BP_CreativeRadio_C.OnRep_CachedAttenuationSetting
// (BlueprintCallable, BlueprintEvent)

void ABP_CreativeRadio_C::OnRep_CachedAttenuationSetting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CreativeRadio_C", "OnRep_CachedAttenuationSetting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CreativeRadio.BP_CreativeRadio_C.OnRep_CachedShouldDriveVisualization
// (BlueprintCallable, BlueprintEvent)

void ABP_CreativeRadio_C::OnRep_CachedShouldDriveVisualization()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CreativeRadio_C", "OnRep_CachedShouldDriveVisualization");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CreativeRadio.BP_CreativeRadio_C.SetAttenuationDistance
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CreativeRadio_C::SetAttenuationDistance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CreativeRadio_C", "SetAttenuationDistance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CreativeRadio.BP_CreativeRadio_C.UpdateCachedAttenuationSettings
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CreativeRadio_C::UpdateCachedAttenuationSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CreativeRadio_C", "UpdateCachedAttenuationSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CreativeRadio.BP_CreativeRadio_C.PlaybackTypeUpgradePath
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_CreativeRadio_C::PlaybackTypeUpgradePath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CreativeRadio_C", "PlaybackTypeUpgradePath");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CreativeRadio.BP_CreativeRadio_C.CheckMinigameStateOnPropertyChanged
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CreativeRadio_C::CheckMinigameStateOnPropertyChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CreativeRadio_C", "CheckMinigameStateOnPropertyChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CreativeRadio.BP_CreativeRadio_C.BlueprintGetInteractionString
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// const class AFortPawn*                  InteractingPawn                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const EInteractionBeingAttempted        InteractionBeingAttempted                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText ABP_CreativeRadio_C::BlueprintGetInteractionString(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CreativeRadio_C", "BlueprintGetInteractionString");

	Params::BP_CreativeRadio_C_BlueprintGetInteractionString Parms{};

	Parms.InteractingPawn = InteractingPawn;
	Parms.InteractionBeingAttempted = InteractionBeingAttempted;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_CreativeRadio.BP_CreativeRadio_C.BlueprintCanInteract
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const class AFortPawn*                  InteractingPawn                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const EInteractionBeingAttempted        InteractionBeingAttempted                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const ETInteractionType                 InteractionType                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_CreativeRadio_C::BlueprintCanInteract(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted, const ETInteractionType InteractionType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CreativeRadio_C", "BlueprintCanInteract");

	Params::BP_CreativeRadio_C_BlueprintCanInteract Parms{};

	Parms.InteractingPawn = InteractingPawn;
	Parms.InteractionBeingAttempted = InteractionBeingAttempted;
	Parms.InteractionType = InteractionType;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

