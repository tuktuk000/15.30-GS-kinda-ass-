#pragma once

/*
* SDK generated by Dumper-8
*
* https://github.com/NotTacs/Dumper-8
*/

// Package: Math_Quat4

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"


namespace SDK
{

// SolarisGeneratedClass Math_Quat4.Quat4
// 0x0010 (0x0038 - 0x0028)
class UQuat4 final : public UObject
{
public:
	float                                         __verse_0x6F57CF8F_x;                              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         __verse_0x0A307337_y;                              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         __verse_0xE49FC625_z;                              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         __verse_0x3947ACD7_w;                              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UQuat4* calcTangents(class UQuat4* __verse_0x07BDAE31_prevQ, class UQuat4* __verse_0xE518C7F2_q, class UQuat4* __verse_0xC170DC03_nextQ, float __verse_0x35918A51_tension);
	static class UQuat4* Create(class UVector3* __verse_0xAB14FAEF_axis, float __verse_0x8ADC6410_radians);
	static class UQuat4* createFromRotation(class URotation3* __verse_0xAA1ABDC9_rotation);
	static class UQuat4* createIdentity();
	static class UQuat4* createZero();
	static float Error(class UQuat4* __verse_0xA3D14F4D_q1, class UQuat4* __verse_0x4D7EFA5F_q2);
	static class UQuat4* fastBilerp(class UQuat4* __verse_0x47EC792A_p00, class UQuat4* __verse_0xD9ECD3E6_p10, class UQuat4* __verse_0x228BC592_p01, class UQuat4* __verse_0xBC8B6F5E_p11, float __verse_0x4DC01E1F_fracX, float __verse_0x28A7A2A7_fracY);
	static class UQuat4* fastLerp(class UQuat4* __verse_0xA3D14F4D_q1, class UQuat4* __verse_0x4D7EFA5F_q2, float __verse_0x05A40B7F_alpha);
	static class UQuat4* findBetween(class UVector3* __verse_0xBAD88A47_v1, class UVector3* __verse_0x54773F55_v2);
	static class UQuat4* findBetweenNormals(class UVector3* __verse_0x24F2D4E8_n1, class UVector3* __verse_0xCA5D61FA_n2);
	static class UQuat4* findBetweenVectors(class UVector3* __verse_0xBAD88A47_v1, class UVector3* __verse_0x54773F55_v2);
	static float safeError(class UQuat4* __verse_0xA3D14F4D_q1, class UQuat4* __verse_0x4D7EFA5F_q2);
	static class UQuat4* slerp(class UQuat4* __verse_0xA3D14F4D_q1, class UQuat4* __verse_0x4D7EFA5F_q2, float __verse_0x05A40B7F_alpha);
	static class UQuat4* slerpFullPath(class UQuat4* __verse_0xA3D14F4D_q1, class UQuat4* __verse_0x4D7EFA5F_q2, float __verse_0x05A40B7F_alpha);
	static class UQuat4* slerpFullPathNotNormalized(class UQuat4* __verse_0xA3D14F4D_q1, class UQuat4* __verse_0x4D7EFA5F_q2, float __verse_0x05A40B7F_alpha);
	static class UQuat4* slerpNotNormalized(class UQuat4* __verse_0xA3D14F4D_q1, class UQuat4* __verse_0x4D7EFA5F_q2, float __verse_0x05A40B7F_alpha);
	static class UQuat4* Squad(class UQuat4* __verse_0xA3D14F4D_q1, class UQuat4* __verse_0xC7DFAF05_t1, class UQuat4* __verse_0x4D7EFA5F_q2, class UQuat4* __verse_0x29701A17_t2, float __verse_0x05A40B7F_alpha);
	static class UQuat4* squadFullPath(class UQuat4* __verse_0xA3D14F4D_q1, class UQuat4* __verse_0xC7DFAF05_t1, class UQuat4* __verse_0x4D7EFA5F_q2, class UQuat4* __verse_0x29701A17_t2, float __verse_0x05A40B7F_alpha);

	void _InitCDO();
	void _InitInstance();
	class UQuat4* Add(class UQuat4* __verse_0xE518C7F2_q);
	float angularRadianDistance(class UQuat4* __verse_0xE518C7F2_q);
	class UQuat4* divideByScalar(float __verse_0x6ED0CE58_s);
	float DoT(class UQuat4* __verse_0xE518C7F2_q);
	void enforceShortestArcWith(class UQuat4* __verse_0xE518C7F2_q);
	uint8 Equals(class UQuat4* __verse_0xE518C7F2_q, float __verse_0xB4A6AEEC_tolerance);
	class UQuat4* Exp();
	float getAngle();
	class UVector3* getAxisX();
	class UVector3* getAxisY();
	class UVector3* getAxisZ();
	class UQuat4* getNormalized(float __verse_0xB4A6AEEC_tolerance);
	class UVector3* GetRotationAxis();
	class UQuat4* getSwing(class UVector3* __verse_0x32625C4E_twistAxis);
	class UQuat4* getTwist(class UVector3* __verse_0x32625C4E_twistAxis);
	float getTwistRadianAngle(class UVector3* __verse_0x32625C4E_twistAxis);
	class UQuat4* inverse();
	uint8 isIdentity(float __verse_0xB4A6AEEC_tolerance);
	uint8 isNormalized();
	uint8 IsValid();
	class UQuat4* Log();
	class UQuat4* multiplyByScalar(float __verse_0x6ED0CE58_s);
	void normalize(float __verse_0xB4A6AEEC_tolerance);
	class UVector3* RotateVector(class UVector3* __verse_0x5C20106F_v);
	float Size();
	float sizeSquared();
	class UQuat4* Subtract(class UQuat4* __verse_0xE518C7F2_q);
	class URotation3* toEulerRotation3();
	class URotation3* ToRotation3();
	class FString ToString();
	class UVector3* unrotateVector(class UVector3* __verse_0x5C20106F_v);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Quat4">();
	}
	static class UQuat4* GetDefaultObj()
	{
		return GetDefaultObjImpl<UQuat4>();
	}
};

}

