#pragma once

/*
* SDK generated by Dumper-8
*
* https://github.com/NotTacs/Dumper-8
*/

// Package: Math_Vector3

#include "Basic.hpp"

#include "Math_Vector3_classes.hpp"
#include "Math_Vector3_parameters.hpp"


namespace SDK
{

// Function Math_Vector3.Vector3.Create
// (Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   __verse_0x3205F605_inX                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   __verse_0x57624ABD_inY                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   __verse_0xB9CDFFAF_inZ                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UVector3*                         RetVal                                                 (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UVector3* UVector3::Create(float __verse_0x3205F605_inX, float __verse_0x57624ABD_inY, float __verse_0xB9CDFFAF_inZ)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Vector3", "Create");

	Params::Vector3_Create Parms{};

	Parms.__verse_0x3205F605_inX = __verse_0x3205F605_inX;
	Parms.__verse_0x57624ABD_inY = __verse_0x57624ABD_inY;
	Parms.__verse_0xB9CDFFAF_inZ = __verse_0xB9CDFFAF_inZ;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Math_Vector3.Vector3.createOneVector
// (Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UVector3*                         RetVal                                                 (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UVector3* UVector3::createOneVector()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Vector3", "createOneVector");

	Params::Vector3_createOneVector Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Math_Vector3.Vector3.createZero
// (Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UVector3*                         RetVal                                                 (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UVector3* UVector3::createZero()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Vector3", "createZero");

	Params::Vector3_createZero Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Math_Vector3.Vector3.crossProduct
// (Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UVector3*                         __verse_0xBAD88A47_v1                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UVector3*                         __verse_0x54773F55_v2                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UVector3*                         RetVal                                                 (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UVector3* UVector3::crossProduct(class UVector3* __verse_0xBAD88A47_v1, class UVector3* __verse_0x54773F55_v2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Vector3", "crossProduct");

	Params::Vector3_crossProduct Parms{};

	Parms.__verse_0xBAD88A47_v1 = __verse_0xBAD88A47_v1;
	Parms.__verse_0x54773F55_v2 = __verse_0x54773F55_v2;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Math_Vector3.Vector3.Distance
// (Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UVector3*                         __verse_0xBAD88A47_v1                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UVector3*                         __verse_0x54773F55_v2                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RetVal                                                 (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UVector3::Distance(class UVector3* __verse_0xBAD88A47_v1, class UVector3* __verse_0x54773F55_v2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Vector3", "Distance");

	Params::Vector3_Distance Parms{};

	Parms.__verse_0xBAD88A47_v1 = __verse_0xBAD88A47_v1;
	Parms.__verse_0x54773F55_v2 = __verse_0x54773F55_v2;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Math_Vector3.Vector3.Distance2D
// (Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UVector3*                         __verse_0xBAD88A47_v1                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UVector3*                         __verse_0x54773F55_v2                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RetVal                                                 (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UVector3::Distance2D(class UVector3* __verse_0xBAD88A47_v1, class UVector3* __verse_0x54773F55_v2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Vector3", "Distance2D");

	Params::Vector3_Distance2D Parms{};

	Parms.__verse_0xBAD88A47_v1 = __verse_0xBAD88A47_v1;
	Parms.__verse_0x54773F55_v2 = __verse_0x54773F55_v2;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Math_Vector3.Vector3.DistanceSquared
// (Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UVector3*                         __verse_0xBAD88A47_v1                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UVector3*                         __verse_0x54773F55_v2                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RetVal                                                 (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UVector3::DistanceSquared(class UVector3* __verse_0xBAD88A47_v1, class UVector3* __verse_0x54773F55_v2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Vector3", "DistanceSquared");

	Params::Vector3_DistanceSquared Parms{};

	Parms.__verse_0xBAD88A47_v1 = __verse_0xBAD88A47_v1;
	Parms.__verse_0x54773F55_v2 = __verse_0x54773F55_v2;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Math_Vector3.Vector3.DistanceSquared2D
// (Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UVector3*                         __verse_0xBAD88A47_v1                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UVector3*                         __verse_0x54773F55_v2                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RetVal                                                 (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UVector3::DistanceSquared2D(class UVector3* __verse_0xBAD88A47_v1, class UVector3* __verse_0x54773F55_v2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Vector3", "DistanceSquared2D");

	Params::Vector3_DistanceSquared2D Parms{};

	Parms.__verse_0xBAD88A47_v1 = __verse_0xBAD88A47_v1;
	Parms.__verse_0x54773F55_v2 = __verse_0x54773F55_v2;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Math_Vector3.Vector3.dotProduct
// (Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UVector3*                         __verse_0xBAD88A47_v1                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UVector3*                         __verse_0x54773F55_v2                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RetVal                                                 (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UVector3::dotProduct(class UVector3* __verse_0xBAD88A47_v1, class UVector3* __verse_0x54773F55_v2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Vector3", "dotProduct");

	Params::Vector3_dotProduct Parms{};

	Parms.__verse_0xBAD88A47_v1 = __verse_0xBAD88A47_v1;
	Parms.__verse_0x54773F55_v2 = __verse_0x54773F55_v2;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Math_Vector3.Vector3.reflectVector
// (Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UVector3*                         __verse_0x8BEC05BA_direction                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UVector3*                         __verse_0xADA21017_surfaceNormal                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UVector3*                         RetVal                                                 (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UVector3* UVector3::reflectVector(class UVector3* __verse_0x8BEC05BA_direction, class UVector3* __verse_0xADA21017_surfaceNormal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Vector3", "reflectVector");

	Params::Vector3_reflectVector Parms{};

	Parms.__verse_0x8BEC05BA_direction = __verse_0x8BEC05BA_direction;
	Parms.__verse_0xADA21017_surfaceNormal = __verse_0xADA21017_surfaceNormal;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Math_Vector3.Vector3.$InitCDO
// ()

void UVector3::_InitCDO()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vector3", "$InitCDO");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Math_Vector3.Vector3.$InitInstance
// ()

void UVector3::_InitInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vector3", "$InitInstance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Math_Vector3.Vector3.ToRotation3
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class URotation3*                       RetVal                                                 (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class URotation3* UVector3::ToRotation3()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vector3", "ToRotation3");

	Params::Vector3_ToRotation3 Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Math_Vector3.Vector3.Add
// (Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UVector3*                         __verse_0x5C20106F_v                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UVector3*                         RetVal                                                 (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UVector3* UVector3::Add(class UVector3* __verse_0x5C20106F_v)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vector3", "Add");

	Params::Vector3_Add Parms{};

	Parms.__verse_0x5C20106F_v = __verse_0x5C20106F_v;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Math_Vector3.Vector3.addScalar
// (Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   __verse_0x805015BB_scalar                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UVector3*                         RetVal                                                 (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UVector3* UVector3::addScalar(float __verse_0x805015BB_scalar)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vector3", "addScalar");

	Params::Vector3_addScalar Parms{};

	Parms.__verse_0x805015BB_scalar = __verse_0x805015BB_scalar;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Math_Vector3.Vector3.Divide
// (Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UVector3*                         __verse_0x5C20106F_v                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UVector3*                         RetVal                                                 (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UVector3* UVector3::Divide(class UVector3* __verse_0x5C20106F_v)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vector3", "Divide");

	Params::Vector3_Divide Parms{};

	Parms.__verse_0x5C20106F_v = __verse_0x5C20106F_v;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Math_Vector3.Vector3.Equals
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UVector3*                         __verse_0x5C20106F_v                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   __verse_0xB4A6AEEC_tolerance                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   RetVal                                                 (Parm, OutParm, ReturnParm, NoDestructor)

uint8 UVector3::Equals(class UVector3* __verse_0x5C20106F_v, float __verse_0xB4A6AEEC_tolerance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vector3", "Equals");

	Params::Vector3_Equals Parms{};

	Parms.__verse_0x5C20106F_v = __verse_0x5C20106F_v;
	Parms.__verse_0xB4A6AEEC_tolerance = __verse_0xB4A6AEEC_tolerance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Math_Vector3.Vector3.Multiply
// (Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UVector3*                         __verse_0x5C20106F_v                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UVector3*                         RetVal                                                 (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UVector3* UVector3::Multiply(class UVector3* __verse_0x5C20106F_v)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vector3", "Multiply");

	Params::Vector3_Multiply Parms{};

	Parms.__verse_0x5C20106F_v = __verse_0x5C20106F_v;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Math_Vector3.Vector3.multiplyByScalar
// (Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   __verse_0x805015BB_scalar                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UVector3*                         RetVal                                                 (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UVector3* UVector3::multiplyByScalar(float __verse_0x805015BB_scalar)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vector3", "multiplyByScalar");

	Params::Vector3_multiplyByScalar Parms{};

	Parms.__verse_0x805015BB_scalar = __verse_0x805015BB_scalar;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Math_Vector3.Vector3.Normal
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UVector3*                         RetVal                                                 (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UVector3* UVector3::Normal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vector3", "Normal");

	Params::Vector3_Normal Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Math_Vector3.Vector3.Size
// (Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   RetVal                                                 (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UVector3::Size()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vector3", "Size");

	Params::Vector3_Size Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Math_Vector3.Vector3.size2D
// (Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   RetVal                                                 (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UVector3::size2D()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vector3", "size2D");

	Params::Vector3_size2D Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Math_Vector3.Vector3.sizeSquared
// (Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   RetVal                                                 (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UVector3::sizeSquared()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vector3", "sizeSquared");

	Params::Vector3_sizeSquared Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Math_Vector3.Vector3.sizeSquared2D
// (Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   RetVal                                                 (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UVector3::sizeSquared2D()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vector3", "sizeSquared2D");

	Params::Vector3_sizeSquared2D Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Math_Vector3.Vector3.Subtract
// (Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UVector3*                         __verse_0x5C20106F_v                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UVector3*                         RetVal                                                 (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UVector3* UVector3::Subtract(class UVector3* __verse_0x5C20106F_v)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vector3", "Subtract");

	Params::Vector3_Subtract Parms{};

	Parms.__verse_0x5C20106F_v = __verse_0x5C20106F_v;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Math_Vector3.Vector3.ToString
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           RetVal                                                 (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UVector3::ToString()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vector3", "ToString");

	Params::Vector3_ToString Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

