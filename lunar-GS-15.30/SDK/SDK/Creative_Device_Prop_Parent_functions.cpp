#pragma once

/*
* SDK generated by Dumper-8
*
* https://github.com/NotTacs/Dumper-8
*/

// Package: Creative_Device_Prop_Parent

#include "Basic.hpp"

#include "Creative_Device_Prop_Parent_classes.hpp"
#include "Creative_Device_Prop_Parent_parameters.hpp"


namespace SDK
{

// Function Creative_Device_Prop_Parent.Creative_Device_Prop_Parent_C.ExecuteUbergraph_Creative_Device_Prop_Parent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACreative_Device_Prop_Parent_C::ExecuteUbergraph_Creative_Device_Prop_Parent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_Device_Prop_Parent_C", "ExecuteUbergraph_Creative_Device_Prop_Parent");

	Params::Creative_Device_Prop_Parent_C_ExecuteUbergraph_Creative_Device_Prop_Parent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Creative_Device_Prop_Parent.Creative_Device_Prop_Parent_C.OnMinigameEnded
// (BlueprintCallable, BlueprintEvent)

void ACreative_Device_Prop_Parent_C::OnMinigameEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_Device_Prop_Parent_C", "OnMinigameEnded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Creative_Device_Prop_Parent.Creative_Device_Prop_Parent_C.OnMinigameStarted
// (BlueprintCallable, BlueprintEvent)

void ACreative_Device_Prop_Parent_C::OnMinigameStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_Device_Prop_Parent_C", "OnMinigameStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Creative_Device_Prop_Parent.Creative_Device_Prop_Parent_C.BndEvt__FortMinigameProgress_K2Node_ComponentBoundEvent_5_SimpleDynamicMulticastDelegate__DelegateSignature
// (BlueprintEvent)

void ACreative_Device_Prop_Parent_C::BndEvt__FortMinigameProgress_K2Node_ComponentBoundEvent_5_SimpleDynamicMulticastDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_Device_Prop_Parent_C", "BndEvt__FortMinigameProgress_K2Node_ComponentBoundEvent_5_SimpleDynamicMulticastDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Creative_Device_Prop_Parent.Creative_Device_Prop_Parent_C.BndEvt__FortMinigameProgress_K2Node_ComponentBoundEvent_0_SimpleDynamicMulticastDelegate__DelegateSignature
// (BlueprintEvent)

void ACreative_Device_Prop_Parent_C::BndEvt__FortMinigameProgress_K2Node_ComponentBoundEvent_0_SimpleDynamicMulticastDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_Device_Prop_Parent_C", "BndEvt__FortMinigameProgress_K2Node_ComponentBoundEvent_0_SimpleDynamicMulticastDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Creative_Device_Prop_Parent.Creative_Device_Prop_Parent_C.OnWorldReady
// (Event, Public, BlueprintEvent)

void ACreative_Device_Prop_Parent_C::OnWorldReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_Device_Prop_Parent_C", "OnWorldReady");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Creative_Device_Prop_Parent.Creative_Device_Prop_Parent_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ACreative_Device_Prop_Parent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_Device_Prop_Parent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Creative_Device_Prop_Parent.Creative_Device_Prop_Parent_C.On Mingame State Changed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortMinigame*                    Minigame                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EFortMinigameState                      MinigameState                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACreative_Device_Prop_Parent_C::On_Mingame_State_Changed(class AFortMinigame* Minigame, EFortMinigameState MinigameState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_Device_Prop_Parent_C", "On Mingame State Changed");

	Params::Creative_Device_Prop_Parent_C_On_Mingame_State_Changed Parms{};

	Parms.Minigame = Minigame;
	Parms.MinigameState = MinigameState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Creative_Device_Prop_Parent.Creative_Device_Prop_Parent_C.BndEvt__FortMinigameProgress_K2Node_ComponentBoundEvent_4_OnMinigameAssignmentChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class AFortMinigame*                    Minigame                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACreative_Device_Prop_Parent_C::BndEvt__FortMinigameProgress_K2Node_ComponentBoundEvent_4_OnMinigameAssignmentChanged__DelegateSignature(class AFortMinigame* Minigame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_Device_Prop_Parent_C", "BndEvt__FortMinigameProgress_K2Node_ComponentBoundEvent_4_OnMinigameAssignmentChanged__DelegateSignature");

	Params::Creative_Device_Prop_Parent_C_BndEvt__FortMinigameProgress_K2Node_ComponentBoundEvent_4_OnMinigameAssignmentChanged__DelegateSignature Parms{};

	Parms.Minigame = Minigame;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Creative_Device_Prop_Parent.Creative_Device_Prop_Parent_C.BndEvt__FortMinigameProgress_K2Node_ComponentBoundEvent_1_OnMinigameAssignmentChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class AFortMinigame*                    Minigame                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACreative_Device_Prop_Parent_C::BndEvt__FortMinigameProgress_K2Node_ComponentBoundEvent_1_OnMinigameAssignmentChanged__DelegateSignature(class AFortMinigame* Minigame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_Device_Prop_Parent_C", "BndEvt__FortMinigameProgress_K2Node_ComponentBoundEvent_1_OnMinigameAssignmentChanged__DelegateSignature");

	Params::Creative_Device_Prop_Parent_C_BndEvt__FortMinigameProgress_K2Node_ComponentBoundEvent_1_OnMinigameAssignmentChanged__DelegateSignature Parms{};

	Parms.Minigame = Minigame;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Creative_Device_Prop_Parent.Creative_Device_Prop_Parent_C.BndEvt__ToyOptionsComponent_K2Node_ComponentBoundEvent_3_AnyPropertyChangedDelegate__DelegateSignature
// (BlueprintEvent)

void ACreative_Device_Prop_Parent_C::BndEvt__ToyOptionsComponent_K2Node_ComponentBoundEvent_3_AnyPropertyChangedDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_Device_Prop_Parent_C", "BndEvt__ToyOptionsComponent_K2Node_ComponentBoundEvent_3_AnyPropertyChangedDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Creative_Device_Prop_Parent.Creative_Device_Prop_Parent_C.BndEvt__ToyOptionsComponent_K2Node_ComponentBoundEvent_2_AnyPropertyChangedDelegate__DelegateSignature
// (BlueprintEvent)

void ACreative_Device_Prop_Parent_C::BndEvt__ToyOptionsComponent_K2Node_ComponentBoundEvent_2_AnyPropertyChangedDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_Device_Prop_Parent_C", "BndEvt__ToyOptionsComponent_K2Node_ComponentBoundEvent_2_AnyPropertyChangedDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Creative_Device_Prop_Parent.Creative_Device_Prop_Parent_C.PlayModeChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortMinigame*                    Minigame                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsInPlayMode                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ACreative_Device_Prop_Parent_C::PlayModeChanged(class AFortMinigame* Minigame, bool bIsInPlayMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_Device_Prop_Parent_C", "PlayModeChanged");

	Params::Creative_Device_Prop_Parent_C_PlayModeChanged Parms{};

	Parms.Minigame = Minigame;
	Parms.bIsInPlayMode = bIsInPlayMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Creative_Device_Prop_Parent.Creative_Device_Prop_Parent_C.Activate on Phase
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EFortMinigameState                      State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACreative_Device_Prop_Parent_C::Activate_on_Phase(EFortMinigameState State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_Device_Prop_Parent_C", "Activate on Phase");

	Params::Creative_Device_Prop_Parent_C_Activate_on_Phase Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Creative_Device_Prop_Parent.Creative_Device_Prop_Parent_C.Activate Device
// (Public, BlueprintCallable, BlueprintEvent)

void ACreative_Device_Prop_Parent_C::Activate_Device()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_Device_Prop_Parent_C", "Activate Device");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Creative_Device_Prop_Parent.Creative_Device_Prop_Parent_C.BlueprintOnLocalInteract
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  InteractingPawn                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ACreative_Device_Prop_Parent_C::BlueprintOnLocalInteract(class AFortPlayerPawn* InteractingPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_Device_Prop_Parent_C", "BlueprintOnLocalInteract");

	Params::Creative_Device_Prop_Parent_C_BlueprintOnLocalInteract Parms{};

	Parms.InteractingPawn = InteractingPawn;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Creative_Device_Prop_Parent.Creative_Device_Prop_Parent_C.Initialize Device
// (Public, BlueprintCallable, BlueprintEvent)

void ACreative_Device_Prop_Parent_C::Initialize_Device()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_Device_Prop_Parent_C", "Initialize Device");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Creative_Device_Prop_Parent.Creative_Device_Prop_Parent_C.Attempt Activate Device
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      Instigating_Controller_0                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Additional_Requirements                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ACreative_Device_Prop_Parent_C::Attempt_Activate_Device(class AController* Instigating_Controller_0, bool Additional_Requirements)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_Device_Prop_Parent_C", "Attempt Activate Device");

	Params::Creative_Device_Prop_Parent_C_Attempt_Activate_Device Parms{};

	Parms.Instigating_Controller_0 = Instigating_Controller_0;
	Parms.Additional_Requirements = Additional_Requirements;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Creative_Device_Prop_Parent.Creative_Device_Prop_Parent_C.Activate Device Failed
// (Public, BlueprintCallable, BlueprintEvent)

void ACreative_Device_Prop_Parent_C::Activate_Device_Failed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_Device_Prop_Parent_C", "Activate Device Failed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Creative_Device_Prop_Parent.Creative_Device_Prop_Parent_C.BlueprintModifyIncomingDamage
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTagContainer&     InTags                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FGameplayEffectContextHandle&EffectContext                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class AController*                      EventInstigator                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ACreative_Device_Prop_Parent_C::BlueprintModifyIncomingDamage(float Damage, const struct FGameplayTagContainer& InTags, const struct FGameplayEffectContextHandle& EffectContext, class AController* EventInstigator, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_Device_Prop_Parent_C", "BlueprintModifyIncomingDamage");

	Params::Creative_Device_Prop_Parent_C_BlueprintModifyIncomingDamage Parms{};

	Parms.Damage = Damage;
	Parms.InTags = std::move(InTags);
	Parms.EffectContext = std::move(EffectContext);
	Parms.EventInstigator = EventInstigator;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Creative_Device_Prop_Parent.Creative_Device_Prop_Parent_C.Is Visible In Game
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   Visible                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ACreative_Device_Prop_Parent_C::Is_Visible_In_Game(bool* Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_Device_Prop_Parent_C", "Is Visible In Game");

	Params::Creative_Device_Prop_Parent_C_Is_Visible_In_Game Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Visible != nullptr)
		*Visible = Parms.Visible;
}


// Function Creative_Device_Prop_Parent.Creative_Device_Prop_Parent_C.Update Visibility In Game
// (Protected, BlueprintCallable, BlueprintEvent)

void ACreative_Device_Prop_Parent_C::Update_Visibility_In_Game()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_Device_Prop_Parent_C", "Update Visibility In Game");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Creative_Device_Prop_Parent.Creative_Device_Prop_Parent_C.GetVisibilityComponents
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class USceneComponent*>*         VisibilityComponents                                   (Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)

void ACreative_Device_Prop_Parent_C::GetVisibilityComponents(TArray<class USceneComponent*>* VisibilityComponents)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_Device_Prop_Parent_C", "GetVisibilityComponents");

	Params::Creative_Device_Prop_Parent_C_GetVisibilityComponents Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (VisibilityComponents != nullptr)
		*VisibilityComponents = std::move(Parms.VisibilityComponents);
}


// Function Creative_Device_Prop_Parent.Creative_Device_Prop_Parent_C.GetVisibilityComponentsWithCollisionOverrides
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<class USceneComponent*, ECollisionEnabled>*VisibilityComponents                                   (Parm, OutParm, ContainsInstancedReference)

void ACreative_Device_Prop_Parent_C::GetVisibilityComponentsWithCollisionOverrides(TMap<class USceneComponent*, ECollisionEnabled>* VisibilityComponents)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_Device_Prop_Parent_C", "GetVisibilityComponentsWithCollisionOverrides");

	Params::Creative_Device_Prop_Parent_C_GetVisibilityComponentsWithCollisionOverrides Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (VisibilityComponents != nullptr)
		*VisibilityComponents = std::move(Parms.VisibilityComponents);
}


// Function Creative_Device_Prop_Parent.Creative_Device_Prop_Parent_C.BlueprintCanInteract
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const class AFortPawn*                  InteractingPawn                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const EInteractionBeingAttempted        InteractionBeingAttempted                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const ETInteractionType                 InteractionType                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ACreative_Device_Prop_Parent_C::BlueprintCanInteract(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted, const ETInteractionType InteractionType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_Device_Prop_Parent_C", "BlueprintCanInteract");

	Params::Creative_Device_Prop_Parent_C_BlueprintCanInteract Parms{};

	Parms.InteractingPawn = InteractingPawn;
	Parms.InteractionBeingAttempted = InteractionBeingAttempted;
	Parms.InteractionType = InteractionType;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Creative_Device_Prop_Parent.Creative_Device_Prop_Parent_C.IsInPlayMode
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool*                                   bIsInPlayMode                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ACreative_Device_Prop_Parent_C::IsInPlayMode(bool* bIsInPlayMode) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Creative_Device_Prop_Parent_C", "IsInPlayMode");

	Params::Creative_Device_Prop_Parent_C_IsInPlayMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bIsInPlayMode != nullptr)
		*bIsInPlayMode = Parms.bIsInPlayMode;
}

}

