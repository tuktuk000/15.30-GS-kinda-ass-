#pragma once

/*
* SDK generated by Dumper-8
*
* https://github.com/NotTacs/Dumper-8
*/

// Package: Synthesis

#include "Basic.hpp"

#include "Synthesis_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Synthesis.SourceEffectBitCrusherPreset.SetBitModulator
// 0x0010 (0x0010 - 0x0000)
struct SourceEffectBitCrusherPreset_SetBitModulator final
{
public:
	struct FSoundModulationDestinationSettings    InModulatorSettings;                               // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function Synthesis.SourceEffectBitCrusherPreset.SetSampleRateModulator
// 0x0010 (0x0010 - 0x0000)
struct SourceEffectBitCrusherPreset_SetSampleRateModulator final
{
public:
	struct FSoundModulationDestinationSettings    InModulatorSettings;                               // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function Synthesis.SourceEffectBitCrusherPreset.SetSettings
// 0x0020 (0x0020 - 0x0000)
struct SourceEffectBitCrusherPreset_SetSettings final
{
public:
	struct FSourceEffectBitCrusherSettings        InSettings;                                        // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function Synthesis.ModularSynthLibrary.AddModularSynthPresetToBankAsset
// 0x00F8 (0x00F8 - 0x0000)
struct ModularSynthLibrary_AddModularSynthPresetToBankAsset final
{
public:
	class UModularSynthPresetBank*                InBank;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FModularSynthPreset                    Preset;                                            // 0x0008(0x00E0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 PresetName;                                        // 0x00E8(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.ModularSynthComponent.CreatePatch
// 0x0020 (0x0020 - 0x0000)
struct ModularSynthComponent_CreatePatch final
{
public:
	ESynth1PatchSource                            PatchSource;                                       // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-8 ])
	TArray<struct FSynth1PatchCable>              PatchCables;                                       // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableByDefault;                                  // 0x0018(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-8 ])
	struct FPatchId                               ReturnValue;                                       // 0x001C(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function Synthesis.ModularSynthComponent.NoteOff
// 0x0008 (0x0008 - 0x0000)
struct ModularSynthComponent_NoteOff final
{
public:
	float                                         Note;                                              // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllNotesOff;                                      // 0x0004(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bKillAllNotes;                                     // 0x0005(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Struct Size After Last Property [ Dumper-8 ])
};

// Function Synthesis.ModularSynthComponent.NoteOn
// 0x000C (0x000C - 0x0000)
struct ModularSynthComponent_NoteOn final
{
public:
	float                                         Note;                                              // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Velocity;                                          // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Duration;                                          // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.ModularSynthComponent.SetAttackTime
// 0x0004 (0x0004 - 0x0000)
struct ModularSynthComponent_SetAttackTime final
{
public:
	float                                         AttackTimeMsec;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.ModularSynthComponent.SetChorusDepth
// 0x0004 (0x0004 - 0x0000)
struct ModularSynthComponent_SetChorusDepth final
{
public:
	float                                         Depth;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.ModularSynthComponent.SetChorusEnabled
// 0x0001 (0x0001 - 0x0000)
struct ModularSynthComponent_SetChorusEnabled final
{
public:
	bool                                          EnableChorus;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.ModularSynthComponent.SetChorusFeedback
// 0x0004 (0x0004 - 0x0000)
struct ModularSynthComponent_SetChorusFeedback final
{
public:
	float                                         Feedback;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.ModularSynthComponent.SetChorusFrequency
// 0x0004 (0x0004 - 0x0000)
struct ModularSynthComponent_SetChorusFrequency final
{
public:
	float                                         Frequency;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.ModularSynthComponent.SetDecayTime
// 0x0004 (0x0004 - 0x0000)
struct ModularSynthComponent_SetDecayTime final
{
public:
	float                                         DecayTimeMsec;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.ModularSynthComponent.SetEnableLegato
// 0x0001 (0x0001 - 0x0000)
struct ModularSynthComponent_SetEnableLegato final
{
public:
	bool                                          LegatoEnabled;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.ModularSynthComponent.SetEnablePatch
// 0x0008 (0x0008 - 0x0000)
struct ModularSynthComponent_SetEnablePatch final
{
public:
	struct FPatchId                               PatchId;                                           // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bIsEnabled;                                        // 0x0004(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0005(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Struct Size After Last Property [ Dumper-8 ])
};

// Function Synthesis.ModularSynthComponent.SetEnablePolyphony
// 0x0001 (0x0001 - 0x0000)
struct ModularSynthComponent_SetEnablePolyphony final
{
public:
	bool                                          bEnablePolyphony;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.ModularSynthComponent.SetEnableRetrigger
// 0x0001 (0x0001 - 0x0000)
struct ModularSynthComponent_SetEnableRetrigger final
{
public:
	bool                                          RetriggerEnabled;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.ModularSynthComponent.SetEnableUnison
// 0x0001 (0x0001 - 0x0000)
struct ModularSynthComponent_SetEnableUnison final
{
public:
	bool                                          EnableUnison;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.ModularSynthComponent.SetFilterAlgorithm
// 0x0001 (0x0001 - 0x0000)
struct ModularSynthComponent_SetFilterAlgorithm final
{
public:
	ESynthFilterAlgorithm                         FilterAlgorithm;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.ModularSynthComponent.SetFilterFrequency
// 0x0004 (0x0004 - 0x0000)
struct ModularSynthComponent_SetFilterFrequency final
{
public:
	float                                         FilterFrequencyHz;                                 // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.ModularSynthComponent.SetFilterFrequencyMod
// 0x0004 (0x0004 - 0x0000)
struct ModularSynthComponent_SetFilterFrequencyMod final
{
public:
	float                                         FilterFrequencyHz;                                 // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.ModularSynthComponent.SetFilterQ
// 0x0004 (0x0004 - 0x0000)
struct ModularSynthComponent_SetFilterQ final
{
public:
	float                                         FilterQ;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.ModularSynthComponent.SetFilterQMod
// 0x0004 (0x0004 - 0x0000)
struct ModularSynthComponent_SetFilterQMod final
{
public:
	float                                         FilterQ;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.ModularSynthComponent.SetFilterType
// 0x0001 (0x0001 - 0x0000)
struct ModularSynthComponent_SetFilterType final
{
public:
	ESynthFilterType                              FilterType;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.ModularSynthComponent.SetGainDb
// 0x0004 (0x0004 - 0x0000)
struct ModularSynthComponent_SetGainDb final
{
public:
	float                                         GainDb;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.ModularSynthComponent.SetLFOFrequency
// 0x0008 (0x0008 - 0x0000)
struct ModularSynthComponent_SetLFOFrequency final
{
public:
	int32                                         LFOIndex;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FrequencyHz;                                       // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.ModularSynthComponent.SetLFOFrequencyMod
// 0x0008 (0x0008 - 0x0000)
struct ModularSynthComponent_SetLFOFrequencyMod final
{
public:
	int32                                         LFOIndex;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FrequencyModHz;                                    // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.ModularSynthComponent.SetLFOGain
// 0x0008 (0x0008 - 0x0000)
struct ModularSynthComponent_SetLFOGain final
{
public:
	int32                                         LFOIndex;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Gain;                                              // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.ModularSynthComponent.SetLFOGainMod
// 0x0008 (0x0008 - 0x0000)
struct ModularSynthComponent_SetLFOGainMod final
{
public:
	int32                                         LFOIndex;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GainMod;                                           // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.ModularSynthComponent.SetLFOMode
// 0x0008 (0x0008 - 0x0000)
struct ModularSynthComponent_SetLFOMode final
{
public:
	int32                                         LFOIndex;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESynthLFOMode                                 LFOMode;                                           // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-8 ])
};

// Function Synthesis.ModularSynthComponent.SetLFOPatch
// 0x0008 (0x0008 - 0x0000)
struct ModularSynthComponent_SetLFOPatch final
{
public:
	int32                                         LFOIndex;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESynthLFOPatchType                            LFOPatchType;                                      // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-8 ])
};

// Function Synthesis.ModularSynthComponent.SetLFOType
// 0x0008 (0x0008 - 0x0000)
struct ModularSynthComponent_SetLFOType final
{
public:
	int32                                         LFOIndex;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESynthLFOType                                 LFOType;                                           // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-8 ])
};

// Function Synthesis.ModularSynthComponent.SetModEnvAttackTime
// 0x0004 (0x0004 - 0x0000)
struct ModularSynthComponent_SetModEnvAttackTime final
{
public:
	float                                         AttackTimeMsec;                                    // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.ModularSynthComponent.SetModEnvBiasInvert
// 0x0001 (0x0001 - 0x0000)
struct ModularSynthComponent_SetModEnvBiasInvert final
{
public:
	bool                                          bInvert;                                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.ModularSynthComponent.SetModEnvBiasPatch
// 0x0001 (0x0001 - 0x0000)
struct ModularSynthComponent_SetModEnvBiasPatch final
{
public:
	ESynthModEnvBiasPatch                         InPatchType;                                       // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.ModularSynthComponent.SetModEnvDecayTime
// 0x0004 (0x0004 - 0x0000)
struct ModularSynthComponent_SetModEnvDecayTime final
{
public:
	float                                         DecayTimeMsec;                                     // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.ModularSynthComponent.SetModEnvDepth
// 0x0004 (0x0004 - 0x0000)
struct ModularSynthComponent_SetModEnvDepth final
{
public:
	float                                         Depth;                                             // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.ModularSynthComponent.SetModEnvInvert
// 0x0001 (0x0001 - 0x0000)
struct ModularSynthComponent_SetModEnvInvert final
{
public:
	bool                                          bInvert;                                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.ModularSynthComponent.SetModEnvPatch
// 0x0001 (0x0001 - 0x0000)
struct ModularSynthComponent_SetModEnvPatch final
{
public:
	ESynthModEnvPatch                             InPatchType;                                       // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.ModularSynthComponent.SetModEnvReleaseTime
// 0x0004 (0x0004 - 0x0000)
struct ModularSynthComponent_SetModEnvReleaseTime final
{
public:
	float                                         Release;                                           // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.ModularSynthComponent.SetModEnvSustainGain
// 0x0004 (0x0004 - 0x0000)
struct ModularSynthComponent_SetModEnvSustainGain final
{
public:
	float                                         SustainGain;                                       // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.ModularSynthComponent.SetOscCents
// 0x0008 (0x0008 - 0x0000)
struct ModularSynthComponent_SetOscCents final
{
public:
	int32                                         OscIndex;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Cents;                                             // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.ModularSynthComponent.SetOscFrequencyMod
// 0x0008 (0x0008 - 0x0000)
struct ModularSynthComponent_SetOscFrequencyMod final
{
public:
	int32                                         OscIndex;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OscFreqMod;                                        // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.ModularSynthComponent.SetOscGain
// 0x0008 (0x0008 - 0x0000)
struct ModularSynthComponent_SetOscGain final
{
public:
	int32                                         OscIndex;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OscGain;                                           // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.ModularSynthComponent.SetOscGainMod
// 0x0008 (0x0008 - 0x0000)
struct ModularSynthComponent_SetOscGainMod final
{
public:
	int32                                         OscIndex;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OscGainMod;                                        // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.ModularSynthComponent.SetOscOctave
// 0x0008 (0x0008 - 0x0000)
struct ModularSynthComponent_SetOscOctave final
{
public:
	int32                                         OscIndex;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Octave;                                            // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.ModularSynthComponent.SetOscPulsewidth
// 0x0008 (0x0008 - 0x0000)
struct ModularSynthComponent_SetOscPulsewidth final
{
public:
	int32                                         OscIndex;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Pulsewidth;                                        // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.ModularSynthComponent.SetOscSemitones
// 0x0008 (0x0008 - 0x0000)
struct ModularSynthComponent_SetOscSemitones final
{
public:
	int32                                         OscIndex;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Semitones;                                         // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.ModularSynthComponent.SetOscSync
// 0x0001 (0x0001 - 0x0000)
struct ModularSynthComponent_SetOscSync final
{
public:
	bool                                          bIsSynced;                                         // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.ModularSynthComponent.SetOscType
// 0x0008 (0x0008 - 0x0000)
struct ModularSynthComponent_SetOscType final
{
public:
	int32                                         OscIndex;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESynth1OscType                                OscType;                                           // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-8 ])
};

// Function Synthesis.ModularSynthComponent.SetPan
// 0x0004 (0x0004 - 0x0000)
struct ModularSynthComponent_SetPan final
{
public:
	float                                         Pan;                                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.ModularSynthComponent.SetPitchBend
// 0x0004 (0x0004 - 0x0000)
struct ModularSynthComponent_SetPitchBend final
{
public:
	float                                         PitchBend;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.ModularSynthComponent.SetPortamento
// 0x0004 (0x0004 - 0x0000)
struct ModularSynthComponent_SetPortamento final
{
public:
	float                                         Portamento;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.ModularSynthComponent.SetReleaseTime
// 0x0004 (0x0004 - 0x0000)
struct ModularSynthComponent_SetReleaseTime final
{
public:
	float                                         ReleaseTimeMsec;                                   // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.ModularSynthComponent.SetSpread
// 0x0004 (0x0004 - 0x0000)
struct ModularSynthComponent_SetSpread final
{
public:
	float                                         Spread;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.ModularSynthComponent.SetStereoDelayFeedback
// 0x0004 (0x0004 - 0x0000)
struct ModularSynthComponent_SetStereoDelayFeedback final
{
public:
	float                                         DelayFeedback;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.ModularSynthComponent.SetStereoDelayIsEnabled
// 0x0001 (0x0001 - 0x0000)
struct ModularSynthComponent_SetStereoDelayIsEnabled final
{
public:
	bool                                          StereoDelayEnabled;                                // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.ModularSynthComponent.SetStereoDelayMode
// 0x0001 (0x0001 - 0x0000)
struct ModularSynthComponent_SetStereoDelayMode final
{
public:
	ESynthStereoDelayMode                         StereoDelayMode;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.ModularSynthComponent.SetStereoDelayRatio
// 0x0004 (0x0004 - 0x0000)
struct ModularSynthComponent_SetStereoDelayRatio final
{
public:
	float                                         DelayRatio;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.ModularSynthComponent.SetStereoDelayTime
// 0x0004 (0x0004 - 0x0000)
struct ModularSynthComponent_SetStereoDelayTime final
{
public:
	float                                         DelayTimeMsec;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.ModularSynthComponent.SetStereoDelayWetlevel
// 0x0004 (0x0004 - 0x0000)
struct ModularSynthComponent_SetStereoDelayWetlevel final
{
public:
	float                                         DelayWetlevel;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.ModularSynthComponent.SetSustainGain
// 0x0004 (0x0004 - 0x0000)
struct ModularSynthComponent_SetSustainGain final
{
public:
	float                                         SustainGain;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.ModularSynthComponent.SetSynthPreset
// 0x00E0 (0x00E0 - 0x0000)
struct ModularSynthComponent_SetSynthPreset final
{
public:
	struct FModularSynthPreset                    SynthPreset;                                       // 0x0000(0x00E0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function Synthesis.SourceEffectChorusPreset.SetDepthModulator
// 0x0010 (0x0010 - 0x0000)
struct SourceEffectChorusPreset_SetDepthModulator final
{
public:
	struct FSoundModulationDestinationSettings    InModulatorSettings;                               // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function Synthesis.SourceEffectChorusPreset.SetDryModulator
// 0x0010 (0x0010 - 0x0000)
struct SourceEffectChorusPreset_SetDryModulator final
{
public:
	struct FSoundModulationDestinationSettings    InModulatorSettings;                               // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function Synthesis.SourceEffectChorusPreset.SetFeedbackModulator
// 0x0010 (0x0010 - 0x0000)
struct SourceEffectChorusPreset_SetFeedbackModulator final
{
public:
	struct FSoundModulationDestinationSettings    InModulatorSettings;                               // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function Synthesis.SourceEffectChorusPreset.SetFrequencyModulator
// 0x0010 (0x0010 - 0x0000)
struct SourceEffectChorusPreset_SetFrequencyModulator final
{
public:
	struct FSoundModulationDestinationSettings    InModulatorSettings;                               // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function Synthesis.SourceEffectChorusPreset.SetSettings
// 0x0090 (0x0090 - 0x0000)
struct SourceEffectChorusPreset_SetSettings final
{
public:
	struct FSourceEffectChorusSettings            InSettings;                                        // 0x0000(0x0090)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function Synthesis.SourceEffectChorusPreset.SetSpreadModulator
// 0x0010 (0x0010 - 0x0000)
struct SourceEffectChorusPreset_SetSpreadModulator final
{
public:
	struct FSoundModulationDestinationSettings    InModulatorSettings;                               // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function Synthesis.SourceEffectChorusPreset.SetWetModulator
// 0x0010 (0x0010 - 0x0000)
struct SourceEffectChorusPreset_SetWetModulator final
{
public:
	struct FSoundModulationDestinationSettings    InModulatorSettings;                               // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function Synthesis.SourceEffectDynamicsProcessorPreset.SetSettings
// 0x0028 (0x0028 - 0x0000)
struct SourceEffectDynamicsProcessorPreset_SetSettings final
{
public:
	struct FSourceEffectDynamicsProcessorSettings InSettings;                                        // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function Synthesis.SourceEffectEnvelopeFollowerPreset.RegisterEnvelopeFollowerListener
// 0x0008 (0x0008 - 0x0000)
struct SourceEffectEnvelopeFollowerPreset_RegisterEnvelopeFollowerListener final
{
public:
	class UEnvelopeFollowerListener*              EnvelopeFollowerListener;                          // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SourceEffectEnvelopeFollowerPreset.SetSettings
// 0x000C (0x000C - 0x0000)
struct SourceEffectEnvelopeFollowerPreset_SetSettings final
{
public:
	struct FSourceEffectEnvelopeFollowerSettings  InSettings;                                        // 0x0000(0x000C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function Synthesis.SourceEffectEnvelopeFollowerPreset.UnregisterEnvelopeFollowerListener
// 0x0008 (0x0008 - 0x0000)
struct SourceEffectEnvelopeFollowerPreset_UnregisterEnvelopeFollowerListener final
{
public:
	class UEnvelopeFollowerListener*              EnvelopeFollowerListener;                          // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SourceEffectEQPreset.SetSettings
// 0x0010 (0x0010 - 0x0000)
struct SourceEffectEQPreset_SetSettings final
{
public:
	struct FSourceEffectEQSettings                InSettings;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function Synthesis.SourceEffectFilterPreset.SetSettings
// 0x0020 (0x0020 - 0x0000)
struct SourceEffectFilterPreset_SetSettings final
{
public:
	struct FSourceEffectFilterSettings            InSettings;                                        // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function Synthesis.SourceEffectFoldbackDistortionPreset.SetSettings
// 0x000C (0x000C - 0x0000)
struct SourceEffectFoldbackDistortionPreset_SetSettings final
{
public:
	struct FSourceEffectFoldbackDistortionSettings InSettings;                                       // 0x0000(0x000C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function Synthesis.SourceEffectMidSideSpreaderPreset.SetSettings
// 0x0008 (0x0008 - 0x0000)
struct SourceEffectMidSideSpreaderPreset_SetSettings final
{
public:
	struct FSourceEffectMidSideSpreaderSettings   InSettings;                                        // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function Synthesis.SourceEffectPannerPreset.SetSettings
// 0x0008 (0x0008 - 0x0000)
struct SourceEffectPannerPreset_SetSettings final
{
public:
	struct FSourceEffectPannerSettings            InSettings;                                        // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function Synthesis.SourceEffectPhaserPreset.SetSettings
// 0x0010 (0x0010 - 0x0000)
struct SourceEffectPhaserPreset_SetSettings final
{
public:
	struct FSourceEffectPhaserSettings            InSettings;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function Synthesis.SourceEffectRingModulationPreset.SetSettings
// 0x0020 (0x0020 - 0x0000)
struct SourceEffectRingModulationPreset_SetSettings final
{
public:
	struct FSourceEffectRingModulationSettings    InSettings;                                        // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function Synthesis.SourceEffectSimpleDelayPreset.SetSettings
// 0x0018 (0x0018 - 0x0000)
struct SourceEffectSimpleDelayPreset_SetSettings final
{
public:
	struct FSourceEffectSimpleDelaySettings       InSettings;                                        // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function Synthesis.SourceEffectStereoDelayPreset.SetSettings
// 0x0024 (0x0024 - 0x0000)
struct SourceEffectStereoDelayPreset_SetSettings final
{
public:
	struct FSourceEffectStereoDelaySettings       InSettings;                                        // 0x0000(0x0024)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function Synthesis.SourceEffectWaveShaperPreset.SetSettings
// 0x0008 (0x0008 - 0x0000)
struct SourceEffectWaveShaperPreset_SetSettings final
{
public:
	struct FSourceEffectWaveShaperSettings        InSettings;                                        // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function Synthesis.SubmixEffectConvolutionReverbPreset.SetImpulseResponse
// 0x0008 (0x0008 - 0x0000)
struct SubmixEffectConvolutionReverbPreset_SetImpulseResponse final
{
public:
	class UAudioImpulseResponse*                  InImpulseResponse;                                 // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SubmixEffectConvolutionReverbPreset.SetSettings
// 0x0020 (0x0020 - 0x0000)
struct SubmixEffectConvolutionReverbPreset_SetSettings final
{
public:
	struct FSubmixEffectConvolutionReverbSettings InSettings;                                        // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function Synthesis.SubmixEffectDelayPreset.GetMaxDelayInMilliseconds
// 0x0004 (0x0004 - 0x0000)
struct SubmixEffectDelayPreset_GetMaxDelayInMilliseconds final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SubmixEffectDelayPreset.SetDelay
// 0x0004 (0x0004 - 0x0000)
struct SubmixEffectDelayPreset_SetDelay final
{
public:
	float                                         Length;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SubmixEffectDelayPreset.SetInterpolationTime
// 0x0004 (0x0004 - 0x0000)
struct SubmixEffectDelayPreset_SetInterpolationTime final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SubmixEffectDelayPreset.SetSettings
// 0x000C (0x000C - 0x0000)
struct SubmixEffectDelayPreset_SetSettings final
{
public:
	struct FSubmixEffectDelaySettings             InSettings;                                        // 0x0000(0x000C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function Synthesis.SubmixEffectFilterPreset.SetFilterAlgorithm
// 0x0001 (0x0001 - 0x0000)
struct SubmixEffectFilterPreset_SetFilterAlgorithm final
{
public:
	ESubmixFilterAlgorithm                        InAlgorithm;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SubmixEffectFilterPreset.SetFilterCutoffFrequency
// 0x0004 (0x0004 - 0x0000)
struct SubmixEffectFilterPreset_SetFilterCutoffFrequency final
{
public:
	float                                         InFrequency;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SubmixEffectFilterPreset.SetFilterCutoffFrequencyMod
// 0x0004 (0x0004 - 0x0000)
struct SubmixEffectFilterPreset_SetFilterCutoffFrequencyMod final
{
public:
	float                                         InFrequency;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SubmixEffectFilterPreset.SetFilterQ
// 0x0004 (0x0004 - 0x0000)
struct SubmixEffectFilterPreset_SetFilterQ final
{
public:
	float                                         InQ;                                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SubmixEffectFilterPreset.SetFilterQMod
// 0x0004 (0x0004 - 0x0000)
struct SubmixEffectFilterPreset_SetFilterQMod final
{
public:
	float                                         InQ;                                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SubmixEffectFilterPreset.SetFilterType
// 0x0001 (0x0001 - 0x0000)
struct SubmixEffectFilterPreset_SetFilterType final
{
public:
	ESubmixFilterType                             InType;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SubmixEffectFilterPreset.SetSettings
// 0x000C (0x000C - 0x0000)
struct SubmixEffectFilterPreset_SetSettings final
{
public:
	struct FSubmixEffectFilterSettings            InSettings;                                        // 0x0000(0x000C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function Synthesis.SubmixEffectFlexiverbPreset.SetSettings
// 0x0010 (0x0010 - 0x0000)
struct SubmixEffectFlexiverbPreset_SetSettings final
{
public:
	struct FSubmixEffectFlexiverbSettings         InSettings;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function Synthesis.SubmixEffectMultibandCompressorPreset.SetSettings
// 0x0020 (0x0020 - 0x0000)
struct SubmixEffectMultibandCompressorPreset_SetSettings final
{
public:
	struct FSubmixEffectMultibandCompressorSettings InSettings;                                      // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function Synthesis.SubmixEffectStereoDelayPreset.SetSettings
// 0x0024 (0x0024 - 0x0000)
struct SubmixEffectStereoDelayPreset_SetSettings final
{
public:
	struct FSubmixEffectStereoDelaySettings       InSettings;                                        // 0x0000(0x0024)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function Synthesis.SubmixEffectTapDelayPreset.AddTap
// 0x0004 (0x0004 - 0x0000)
struct SubmixEffectTapDelayPreset_AddTap final
{
public:
	int32                                         TapId;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SubmixEffectTapDelayPreset.GetMaxDelayInMilliseconds
// 0x0004 (0x0004 - 0x0000)
struct SubmixEffectTapDelayPreset_GetMaxDelayInMilliseconds final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SubmixEffectTapDelayPreset.GetTap
// 0x001C (0x001C - 0x0000)
struct SubmixEffectTapDelayPreset_GetTap final
{
public:
	int32                                         TapId;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTapDelayInfo                          TapInfo;                                           // 0x0004(0x0018)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function Synthesis.SubmixEffectTapDelayPreset.GetTapIds
// 0x0010 (0x0010 - 0x0000)
struct SubmixEffectTapDelayPreset_GetTapIds final
{
public:
	TArray<int32>                                 TapIds;                                            // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SubmixEffectTapDelayPreset.RemoveTap
// 0x0004 (0x0004 - 0x0000)
struct SubmixEffectTapDelayPreset_RemoveTap final
{
public:
	int32                                         TapId;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SubmixEffectTapDelayPreset.SetInterpolationTime
// 0x0004 (0x0004 - 0x0000)
struct SubmixEffectTapDelayPreset_SetInterpolationTime final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SubmixEffectTapDelayPreset.SetSettings
// 0x0018 (0x0018 - 0x0000)
struct SubmixEffectTapDelayPreset_SetSettings final
{
public:
	struct FSubmixEffectTapDelaySettings          InSettings;                                        // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function Synthesis.SubmixEffectTapDelayPreset.SetTap
// 0x001C (0x001C - 0x0000)
struct SubmixEffectTapDelayPreset_SetTap final
{
public:
	int32                                         TapId;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTapDelayInfo                          TapInfo;                                           // 0x0004(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function Synthesis.Synth2DSlider.SetIndentHandle
// 0x0001 (0x0001 - 0x0000)
struct Synth2DSlider_SetIndentHandle final
{
public:
	bool                                          InValue;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.Synth2DSlider.SetLocked
// 0x0001 (0x0001 - 0x0000)
struct Synth2DSlider_SetLocked final
{
public:
	bool                                          InValue;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.Synth2DSlider.SetSliderHandleColor
// 0x0010 (0x0010 - 0x0000)
struct Synth2DSlider_SetSliderHandleColor final
{
public:
	struct FLinearColor                           InValue;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.Synth2DSlider.SetStepSize
// 0x0004 (0x0004 - 0x0000)
struct Synth2DSlider_SetStepSize final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.Synth2DSlider.SetValue
// 0x0008 (0x0008 - 0x0000)
struct Synth2DSlider_SetValue final
{
public:
	struct FVector2D                              InValue;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.Synth2DSlider.GetValue
// 0x0008 (0x0008 - 0x0000)
struct Synth2DSlider_GetValue final
{
public:
	struct FVector2D                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.GranularSynth.NoteOff
// 0x0008 (0x0008 - 0x0000)
struct GranularSynth_NoteOff final
{
public:
	float                                         Note;                                              // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bKill;                                             // 0x0004(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-8 ])
};

// Function Synthesis.GranularSynth.NoteOn
// 0x000C (0x000C - 0x0000)
struct GranularSynth_NoteOn final
{
public:
	float                                         Note;                                              // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Velocity;                                          // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Duration;                                          // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.GranularSynth.SetAttackTime
// 0x0004 (0x0004 - 0x0000)
struct GranularSynth_SetAttackTime final
{
public:
	float                                         AttackTimeMsec;                                    // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.GranularSynth.SetDecayTime
// 0x0004 (0x0004 - 0x0000)
struct GranularSynth_SetDecayTime final
{
public:
	float                                         DecayTimeMsec;                                     // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.GranularSynth.SetGrainDuration
// 0x000C (0x000C - 0x0000)
struct GranularSynth_SetGrainDuration final
{
public:
	float                                         BaseDurationMsec;                                  // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              DurationRange;                                     // 0x0004(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.GranularSynth.SetGrainEnvelopeType
// 0x0001 (0x0001 - 0x0000)
struct GranularSynth_SetGrainEnvelopeType final
{
public:
	EGranularSynthEnvelopeType                    EnvelopeType;                                      // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.GranularSynth.SetGrainPan
// 0x000C (0x000C - 0x0000)
struct GranularSynth_SetGrainPan final
{
public:
	float                                         BasePan;                                           // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              PanRange;                                          // 0x0004(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.GranularSynth.SetGrainPitch
// 0x000C (0x000C - 0x0000)
struct GranularSynth_SetGrainPitch final
{
public:
	float                                         BasePitch;                                         // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              PitchRange;                                        // 0x0004(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.GranularSynth.SetGrainProbability
// 0x0004 (0x0004 - 0x0000)
struct GranularSynth_SetGrainProbability final
{
public:
	float                                         InGrainProbability;                                // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.GranularSynth.SetGrainsPerSecond
// 0x0004 (0x0004 - 0x0000)
struct GranularSynth_SetGrainsPerSecond final
{
public:
	float                                         InGrainsPerSecond;                                 // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.GranularSynth.SetGrainVolume
// 0x000C (0x000C - 0x0000)
struct GranularSynth_SetGrainVolume final
{
public:
	float                                         BaseVolume;                                        // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              VolumeRange;                                       // 0x0004(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.GranularSynth.SetPlaybackSpeed
// 0x0004 (0x0004 - 0x0000)
struct GranularSynth_SetPlaybackSpeed final
{
public:
	float                                         InPlayheadRate;                                    // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.GranularSynth.SetPlayheadTime
// 0x000C (0x000C - 0x0000)
struct GranularSynth_SetPlayheadTime final
{
public:
	float                                         InPositionSec;                                     // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LerpTimeSec;                                       // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGranularSynthSeekType                        SeekType;                                          // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-8 ])
};

// Function Synthesis.GranularSynth.SetReleaseTimeMsec
// 0x0004 (0x0004 - 0x0000)
struct GranularSynth_SetReleaseTimeMsec final
{
public:
	float                                         ReleaseTimeMsec;                                   // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.GranularSynth.SetScrubMode
// 0x0001 (0x0001 - 0x0000)
struct GranularSynth_SetScrubMode final
{
public:
	bool                                          bScrubMode;                                        // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.GranularSynth.SetSoundWave
// 0x0008 (0x0008 - 0x0000)
struct GranularSynth_SetSoundWave final
{
public:
	class USoundWave*                             InSoundWave;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.GranularSynth.SetSustainGain
// 0x0004 (0x0004 - 0x0000)
struct GranularSynth_SetSustainGain final
{
public:
	float                                         SustainGain;                                       // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.GranularSynth.GetCurrentPlayheadTime
// 0x0004 (0x0004 - 0x0000)
struct GranularSynth_GetCurrentPlayheadTime final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.GranularSynth.GetSampleDuration
// 0x0004 (0x0004 - 0x0000)
struct GranularSynth_GetSampleDuration final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.GranularSynth.IsLoaded
// 0x0001 (0x0001 - 0x0000)
struct GranularSynth_IsLoaded final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthComponentMonoWaveTable.GetCurveTangent
// 0x0008 (0x0008 - 0x0000)
struct SynthComponentMonoWaveTable_GetCurveTangent final
{
public:
	int32                                         TableIndex;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthComponentMonoWaveTable.GetNumTableEntries
// 0x0004 (0x0004 - 0x0000)
struct SynthComponentMonoWaveTable_GetNumTableEntries final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthComponentMonoWaveTable.NoteOff
// 0x0004 (0x0004 - 0x0000)
struct SynthComponentMonoWaveTable_NoteOff final
{
public:
	float                                         InMidiNote;                                        // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthComponentMonoWaveTable.NoteOn
// 0x0008 (0x0008 - 0x0000)
struct SynthComponentMonoWaveTable_NoteOn final
{
public:
	float                                         InMidiNote;                                        // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InVelocity;                                        // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthComponentMonoWaveTable.RefreshWaveTable
// 0x0004 (0x0004 - 0x0000)
struct SynthComponentMonoWaveTable_RefreshWaveTable final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthComponentMonoWaveTable.SetAmpEnvelopeAttackTime
// 0x0004 (0x0004 - 0x0000)
struct SynthComponentMonoWaveTable_SetAmpEnvelopeAttackTime final
{
public:
	float                                         InAttackTimeMsec;                                  // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthComponentMonoWaveTable.SetAmpEnvelopeBiasDepth
// 0x0004 (0x0004 - 0x0000)
struct SynthComponentMonoWaveTable_SetAmpEnvelopeBiasDepth final
{
public:
	float                                         InDepth;                                           // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthComponentMonoWaveTable.SetAmpEnvelopeBiasInvert
// 0x0001 (0x0001 - 0x0000)
struct SynthComponentMonoWaveTable_SetAmpEnvelopeBiasInvert final
{
public:
	bool                                          bInBiasInvert;                                     // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthComponentMonoWaveTable.SetAmpEnvelopeDecayTime
// 0x0004 (0x0004 - 0x0000)
struct SynthComponentMonoWaveTable_SetAmpEnvelopeDecayTime final
{
public:
	float                                         InDecayTimeMsec;                                   // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthComponentMonoWaveTable.SetAmpEnvelopeDepth
// 0x0004 (0x0004 - 0x0000)
struct SynthComponentMonoWaveTable_SetAmpEnvelopeDepth final
{
public:
	float                                         InDepth;                                           // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthComponentMonoWaveTable.SetAmpEnvelopeInvert
// 0x0001 (0x0001 - 0x0000)
struct SynthComponentMonoWaveTable_SetAmpEnvelopeInvert final
{
public:
	bool                                          bInInvert;                                         // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthComponentMonoWaveTable.SetAmpEnvelopeReleaseTime
// 0x0004 (0x0004 - 0x0000)
struct SynthComponentMonoWaveTable_SetAmpEnvelopeReleaseTime final
{
public:
	float                                         InReleaseTimeMsec;                                 // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthComponentMonoWaveTable.SetAmpEnvelopeSustainGain
// 0x0004 (0x0004 - 0x0000)
struct SynthComponentMonoWaveTable_SetAmpEnvelopeSustainGain final
{
public:
	float                                         InSustainGain;                                     // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthComponentMonoWaveTable.SetCurveInterpolationType
// 0x000C (0x000C - 0x0000)
struct SynthComponentMonoWaveTable_SetCurveInterpolationType final
{
public:
	ECurveInterpolationType                       InterpolationType;                                 // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-8 ])
	int32                                         TableIndex;                                        // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-8 ])
};

// Function Synthesis.SynthComponentMonoWaveTable.SetCurveTangent
// 0x000C (0x000C - 0x0000)
struct SynthComponentMonoWaveTable_SetCurveTangent final
{
public:
	int32                                         TableIndex;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InNewTangent;                                      // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-8 ])
};

// Function Synthesis.SynthComponentMonoWaveTable.SetCurveValue
// 0x0010 (0x0010 - 0x0000)
struct SynthComponentMonoWaveTable_SetCurveValue final
{
public:
	int32                                         TableIndex;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         KeyframeIndex;                                     // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NewValue;                                          // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-8 ])
};

// Function Synthesis.SynthComponentMonoWaveTable.SetFilterEnvelopeAttackTime
// 0x0004 (0x0004 - 0x0000)
struct SynthComponentMonoWaveTable_SetFilterEnvelopeAttackTime final
{
public:
	float                                         InAttackTimeMsec;                                  // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthComponentMonoWaveTable.SetFilterEnvelopeBiasDepth
// 0x0004 (0x0004 - 0x0000)
struct SynthComponentMonoWaveTable_SetFilterEnvelopeBiasDepth final
{
public:
	float                                         InDepth;                                           // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthComponentMonoWaveTable.SetFilterEnvelopeBiasInvert
// 0x0001 (0x0001 - 0x0000)
struct SynthComponentMonoWaveTable_SetFilterEnvelopeBiasInvert final
{
public:
	bool                                          bInBiasInvert;                                     // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthComponentMonoWaveTable.SetFilterEnvelopeDepth
// 0x0004 (0x0004 - 0x0000)
struct SynthComponentMonoWaveTable_SetFilterEnvelopeDepth final
{
public:
	float                                         InDepth;                                           // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthComponentMonoWaveTable.SetFilterEnvelopeInvert
// 0x0001 (0x0001 - 0x0000)
struct SynthComponentMonoWaveTable_SetFilterEnvelopeInvert final
{
public:
	bool                                          bInInvert;                                         // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthComponentMonoWaveTable.SetFilterEnvelopenDecayTime
// 0x0004 (0x0004 - 0x0000)
struct SynthComponentMonoWaveTable_SetFilterEnvelopenDecayTime final
{
public:
	float                                         InDecayTimeMsec;                                   // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthComponentMonoWaveTable.SetFilterEnvelopeReleaseTime
// 0x0004 (0x0004 - 0x0000)
struct SynthComponentMonoWaveTable_SetFilterEnvelopeReleaseTime final
{
public:
	float                                         InReleaseTimeMsec;                                 // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthComponentMonoWaveTable.SetFilterEnvelopeSustainGain
// 0x0004 (0x0004 - 0x0000)
struct SynthComponentMonoWaveTable_SetFilterEnvelopeSustainGain final
{
public:
	float                                         InSustainGain;                                     // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthComponentMonoWaveTable.SetFrequency
// 0x0004 (0x0004 - 0x0000)
struct SynthComponentMonoWaveTable_SetFrequency final
{
public:
	float                                         FrequencyHz;                                       // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthComponentMonoWaveTable.SetFrequencyPitchBend
// 0x0004 (0x0004 - 0x0000)
struct SynthComponentMonoWaveTable_SetFrequencyPitchBend final
{
public:
	float                                         FrequencyOffsetCents;                              // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthComponentMonoWaveTable.SetFrequencyWithMidiNote
// 0x0004 (0x0004 - 0x0000)
struct SynthComponentMonoWaveTable_SetFrequencyWithMidiNote final
{
public:
	float                                         InMidiNote;                                        // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthComponentMonoWaveTable.SetLowPassFilterResonance
// 0x0004 (0x0004 - 0x0000)
struct SynthComponentMonoWaveTable_SetLowPassFilterResonance final
{
public:
	float                                         InNewQ;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthComponentMonoWaveTable.SetPositionEnvelopeAttackTime
// 0x0004 (0x0004 - 0x0000)
struct SynthComponentMonoWaveTable_SetPositionEnvelopeAttackTime final
{
public:
	float                                         InAttackTimeMsec;                                  // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthComponentMonoWaveTable.SetPositionEnvelopeBiasDepth
// 0x0004 (0x0004 - 0x0000)
struct SynthComponentMonoWaveTable_SetPositionEnvelopeBiasDepth final
{
public:
	float                                         InDepth;                                           // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthComponentMonoWaveTable.SetPositionEnvelopeBiasInvert
// 0x0001 (0x0001 - 0x0000)
struct SynthComponentMonoWaveTable_SetPositionEnvelopeBiasInvert final
{
public:
	bool                                          bInBiasInvert;                                     // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthComponentMonoWaveTable.SetPositionEnvelopeDecayTime
// 0x0004 (0x0004 - 0x0000)
struct SynthComponentMonoWaveTable_SetPositionEnvelopeDecayTime final
{
public:
	float                                         InDecayTimeMsec;                                   // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthComponentMonoWaveTable.SetPositionEnvelopeDepth
// 0x0004 (0x0004 - 0x0000)
struct SynthComponentMonoWaveTable_SetPositionEnvelopeDepth final
{
public:
	float                                         InDepth;                                           // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthComponentMonoWaveTable.SetPositionEnvelopeInvert
// 0x0001 (0x0001 - 0x0000)
struct SynthComponentMonoWaveTable_SetPositionEnvelopeInvert final
{
public:
	bool                                          bInInvert;                                         // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthComponentMonoWaveTable.SetPositionEnvelopeReleaseTime
// 0x0004 (0x0004 - 0x0000)
struct SynthComponentMonoWaveTable_SetPositionEnvelopeReleaseTime final
{
public:
	float                                         InReleaseTimeMsec;                                 // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthComponentMonoWaveTable.SetPositionEnvelopeSustainGain
// 0x0004 (0x0004 - 0x0000)
struct SynthComponentMonoWaveTable_SetPositionEnvelopeSustainGain final
{
public:
	float                                         InSustainGain;                                     // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthComponentMonoWaveTable.SetPosLfoDepth
// 0x0004 (0x0004 - 0x0000)
struct SynthComponentMonoWaveTable_SetPosLfoDepth final
{
public:
	float                                         InLfoDepth;                                        // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthComponentMonoWaveTable.SetPosLfoFrequency
// 0x0004 (0x0004 - 0x0000)
struct SynthComponentMonoWaveTable_SetPosLfoFrequency final
{
public:
	float                                         InLfoFrequency;                                    // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthComponentMonoWaveTable.SetPosLfoType
// 0x0001 (0x0001 - 0x0000)
struct SynthComponentMonoWaveTable_SetPosLfoType final
{
public:
	ESynthLFOType                                 InLfoType;                                         // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthComponentMonoWaveTable.SetSustainPedalState
// 0x0001 (0x0001 - 0x0000)
struct SynthComponentMonoWaveTable_SetSustainPedalState final
{
public:
	bool                                          InSustainPedalState;                               // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthComponentMonoWaveTable.SetWaveTablePosition
// 0x0004 (0x0004 - 0x0000)
struct SynthComponentMonoWaveTable_SetWaveTablePosition final
{
public:
	float                                         InPosition;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthComponentMonoWaveTable.GetKeyFrameValuesForTable
// 0x0018 (0x0018 - 0x0000)
struct SynthComponentMonoWaveTable_GetKeyFrameValuesForTable final
{
public:
	float                                         TableIndex;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-8 ])
	TArray<float>                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthComponentMonoWaveTable.GetMaxTableIndex
// 0x0004 (0x0004 - 0x0000)
struct SynthComponentMonoWaveTable_GetMaxTableIndex final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthComponentMoto.GetRPMRange
// 0x0008 (0x0008 - 0x0000)
struct SynthComponentMoto_GetRPMRange final
{
public:
	float                                         OutMinRPM;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OutMaxRPM;                                         // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthComponentMoto.SetRPM
// 0x0008 (0x0008 - 0x0000)
struct SynthComponentMoto_SetRPM final
{
public:
	float                                         InRPM;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InTimeSec;                                         // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthComponentMoto.SetSettings
// 0x0068 (0x0068 - 0x0000)
struct SynthComponentMoto_SetSettings final
{
public:
	struct FMotoSynthRuntimeSettings              InSettings;                                        // 0x0000(0x0068)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthComponentMoto.IsEnabled
// 0x0001 (0x0001 - 0x0000)
struct SynthComponentMoto_IsEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthComponentToneGenerator.SetFrequency
// 0x0004 (0x0004 - 0x0000)
struct SynthComponentToneGenerator_SetFrequency final
{
public:
	float                                         InFrequency;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthComponentToneGenerator.SetVolume
// 0x0004 (0x0004 - 0x0000)
struct SynthComponentToneGenerator_SetVolume final
{
public:
	float                                         InVolume;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthSamplePlayer.SeekToTime
// 0x0008 (0x0008 - 0x0000)
struct SynthSamplePlayer_SeekToTime final
{
public:
	float                                         TimeSec;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESamplePlayerSeekType                         SeekType;                                          // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWrap;                                             // 0x0005(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Struct Size After Last Property [ Dumper-8 ])
};

// Function Synthesis.SynthSamplePlayer.SetPitch
// 0x0008 (0x0008 - 0x0000)
struct SynthSamplePlayer_SetPitch final
{
public:
	float                                         InPitch;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeSec;                                           // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthSamplePlayer.SetScrubMode
// 0x0001 (0x0001 - 0x0000)
struct SynthSamplePlayer_SetScrubMode final
{
public:
	bool                                          bScrubMode;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthSamplePlayer.SetScrubTimeWidth
// 0x0004 (0x0004 - 0x0000)
struct SynthSamplePlayer_SetScrubTimeWidth final
{
public:
	float                                         InScrubTimeWidthSec;                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthSamplePlayer.SetSoundWave
// 0x0008 (0x0008 - 0x0000)
struct SynthSamplePlayer_SetSoundWave final
{
public:
	class USoundWave*                             InSoundWave;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthSamplePlayer.GetCurrentPlaybackProgressPercent
// 0x0004 (0x0004 - 0x0000)
struct SynthSamplePlayer_GetCurrentPlaybackProgressPercent final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthSamplePlayer.GetCurrentPlaybackProgressTime
// 0x0004 (0x0004 - 0x0000)
struct SynthSamplePlayer_GetCurrentPlaybackProgressTime final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthSamplePlayer.GetSampleDuration
// 0x0004 (0x0004 - 0x0000)
struct SynthSamplePlayer_GetSampleDuration final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthSamplePlayer.IsLoaded
// 0x0001 (0x0001 - 0x0000)
struct SynthSamplePlayer_IsLoaded final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthesisUtilitiesBlueprintFunctionLibrary.GetLinearFrequency
// 0x0018 (0x0018 - 0x0000)
struct SynthesisUtilitiesBlueprintFunctionLibrary_GetLinearFrequency final
{
public:
	float                                         InLogFrequencyValue;                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InDomainMin;                                       // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InDomainMax;                                       // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InRangeMin;                                        // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InRangeMax;                                        // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthesisUtilitiesBlueprintFunctionLibrary.GetLogFrequency
// 0x0018 (0x0018 - 0x0000)
struct SynthesisUtilitiesBlueprintFunctionLibrary_GetLogFrequency final
{
public:
	float                                         InLinearValue;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InDomainMin;                                       // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InDomainMax;                                       // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InRangeMin;                                        // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InRangeMax;                                        // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthKnob.SetLocked
// 0x0001 (0x0001 - 0x0000)
struct SynthKnob_SetLocked final
{
public:
	bool                                          InValue;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthKnob.SetStepSize
// 0x0004 (0x0004 - 0x0000)
struct SynthKnob_SetStepSize final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthKnob.SetValue
// 0x0004 (0x0004 - 0x0000)
struct SynthKnob_SetValue final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function Synthesis.SynthKnob.GetValue
// 0x0004 (0x0004 - 0x0000)
struct SynthKnob_GetValue final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

}

