#pragma once

/*
* SDK generated by Dumper-8
*
* https://github.com/NotTacs/Dumper-8
*/

// Package: EditableMesh

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "MeshDescription_structs.hpp"
#include "EditableMesh_structs.hpp"


namespace SDK::Params
{

// Function EditableMesh.EditableMesh.InvalidEdgeID
// 0x0004 (0x0004 - 0x0000)
struct EditableMesh_InvalidEdgeID final
{
public:
	struct FEdgeID                                ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.InvalidPolygonGroupID
// 0x0004 (0x0004 - 0x0000)
struct EditableMesh_InvalidPolygonGroupID final
{
public:
	struct FPolygonGroupID                        ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.InvalidPolygonID
// 0x0004 (0x0004 - 0x0000)
struct EditableMesh_InvalidPolygonID final
{
public:
	struct FPolygonID                             ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.InvalidVertexID
// 0x0004 (0x0004 - 0x0000)
struct EditableMesh_InvalidVertexID final
{
public:
	struct FVertexID                              ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.MakeEdgeID
// 0x0008 (0x0008 - 0x0000)
struct EditableMesh_MakeEdgeID final
{
public:
	int32                                         EdgeIndex;                                         // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEdgeID                                ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.MakePolygonGroupID
// 0x0008 (0x0008 - 0x0000)
struct EditableMesh_MakePolygonGroupID final
{
public:
	int32                                         PolygonGroupIndex;                                 // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPolygonGroupID                        ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.MakePolygonID
// 0x0008 (0x0008 - 0x0000)
struct EditableMesh_MakePolygonID final
{
public:
	int32                                         PolygonIndex;                                      // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPolygonID                             ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.MakeVertexID
// 0x0008 (0x0008 - 0x0000)
struct EditableMesh_MakeVertexID final
{
public:
	int32                                         VertexIndex;                                       // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVertexID                              ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.AssignPolygonsToPolygonGroups
// 0x0018 (0x0018 - 0x0000)
struct EditableMesh_AssignPolygonsToPolygonGroups final
{
public:
	TArray<struct FPolygonGroupForPolygon>        PolygonGroupForPolygons;                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDeleteOrphanedPolygonGroups;                      // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-8 ])
};

// Function EditableMesh.EditableMesh.BevelPolygons
// 0x0038 (0x0038 - 0x0000)
struct EditableMesh_BevelPolygons final
{
public:
	TArray<struct FPolygonID>                     PolygonIDs;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BevelFixedDistance;                                // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BevelProgressTowardCenter;                         // 0x0014(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPolygonID>                     OutNewCenterPolygonIDs;                            // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPolygonID>                     OutNewSidePolygonIDs;                              // 0x0028(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.ChangePolygonsVertexInstances
// 0x0010 (0x0010 - 0x0000)
struct EditableMesh_ChangePolygonsVertexInstances final
{
public:
	TArray<struct FChangeVertexInstancesForPolygon> VertexInstancesForPolygons;                      // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.CommitInstance
// 0x0010 (0x0010 - 0x0000)
struct EditableMesh_CommitInstance final
{
public:
	class UPrimitiveComponent*                    ComponentToInstanceTo;                             // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UEditableMesh*                          ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.CreateEdges
// 0x0020 (0x0020 - 0x0000)
struct EditableMesh_CreateEdges final
{
public:
	TArray<struct FEdgeToCreate>                  EdgesToCreate;                                     // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FEdgeID>                        OutNewEdgeIDs;                                     // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.CreateEmptyVertexRange
// 0x0018 (0x0018 - 0x0000)
struct EditableMesh_CreateEmptyVertexRange final
{
public:
	int32                                         NumVerticesToCreate;                               // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-8 ])
	TArray<struct FVertexID>                      OutNewVertexIDs;                                   // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.CreateMissingPolygonPerimeterEdges
// 0x0018 (0x0018 - 0x0000)
struct EditableMesh_CreateMissingPolygonPerimeterEdges final
{
public:
	struct FPolygonID                             PolygonID;                                         // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-8 ])
	TArray<struct FEdgeID>                        OutNewEdgeIDs;                                     // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.CreatePolygonGroups
// 0x0020 (0x0020 - 0x0000)
struct EditableMesh_CreatePolygonGroups final
{
public:
	TArray<struct FPolygonGroupToCreate>          PolygonGroupsToCreate;                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPolygonGroupID>                OutNewPolygonGroupIDs;                             // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.CreatePolygons
// 0x0030 (0x0030 - 0x0000)
struct EditableMesh_CreatePolygons final
{
public:
	TArray<struct FPolygonToCreate>               PolygonsToCreate;                                  // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPolygonID>                     OutNewPolygonIDs;                                  // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FEdgeID>                        OutNewEdgeIDs;                                     // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.CreateVertexInstances
// 0x0020 (0x0020 - 0x0000)
struct EditableMesh_CreateVertexInstances final
{
public:
	TArray<struct FVertexInstanceToCreate>        VertexInstancesToCreate;                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVertexInstanceID>              OutNewVertexInstanceIDs;                           // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.CreateVertices
// 0x0020 (0x0020 - 0x0000)
struct EditableMesh_CreateVertices final
{
public:
	TArray<struct FVertexToCreate>                VerticesToCreate;                                  // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVertexID>                      OutNewVertexIDs;                                   // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.DeleteEdgeAndConnectedPolygons
// 0x0008 (0x0008 - 0x0000)
struct EditableMesh_DeleteEdgeAndConnectedPolygons final
{
public:
	struct FEdgeID                                EdgeID;                                            // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDeleteOrphanedEdges;                              // 0x0004(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDeleteOrphanedVertices;                           // 0x0005(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDeleteOrphanedVertexInstances;                    // 0x0006(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDeleteEmptyPolygonGroups;                         // 0x0007(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.DeleteEdges
// 0x0018 (0x0018 - 0x0000)
struct EditableMesh_DeleteEdges final
{
public:
	TArray<struct FEdgeID>                        EdgeIDsToDelete;                                   // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDeleteOrphanedVertices;                           // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-8 ])
};

// Function EditableMesh.EditableMesh.DeleteOrphanVertices
// 0x0010 (0x0010 - 0x0000)
struct EditableMesh_DeleteOrphanVertices final
{
public:
	TArray<struct FVertexID>                      VertexIDsToDelete;                                 // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.DeletePolygonGroups
// 0x0010 (0x0010 - 0x0000)
struct EditableMesh_DeletePolygonGroups final
{
public:
	TArray<struct FPolygonGroupID>                PolygonGroupIDs;                                   // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.DeletePolygons
// 0x0018 (0x0018 - 0x0000)
struct EditableMesh_DeletePolygons final
{
public:
	TArray<struct FPolygonID>                     PolygonIDsToDelete;                                // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDeleteOrphanedEdges;                              // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDeleteOrphanedVertices;                           // 0x0011(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDeleteOrphanedVertexInstances;                    // 0x0012(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDeleteEmptyPolygonGroups;                         // 0x0013(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-8 ])
};

// Function EditableMesh.EditableMesh.DeleteVertexAndConnectedEdgesAndPolygons
// 0x0008 (0x0008 - 0x0000)
struct EditableMesh_DeleteVertexAndConnectedEdgesAndPolygons final
{
public:
	struct FVertexID                              VertexID;                                          // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDeleteOrphanedEdges;                              // 0x0004(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDeleteOrphanedVertices;                           // 0x0005(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDeleteOrphanedVertexInstances;                    // 0x0006(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDeleteEmptyPolygonGroups;                         // 0x0007(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.DeleteVertexInstances
// 0x0018 (0x0018 - 0x0000)
struct EditableMesh_DeleteVertexInstances final
{
public:
	TArray<struct FVertexInstanceID>              VertexInstanceIDsToDelete;                         // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDeleteOrphanedVertices;                           // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-8 ])
};

// Function EditableMesh.EditableMesh.EndModification
// 0x0001 (0x0001 - 0x0000)
struct EditableMesh_EndModification final
{
public:
	bool                                          bFromUndo;                                         // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.ExtendEdges
// 0x0028 (0x0028 - 0x0000)
struct EditableMesh_ExtendEdges final
{
public:
	TArray<struct FEdgeID>                        EdgeIDs;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWeldNeighbors;                                    // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-8 ])
	TArray<struct FEdgeID>                        OutNewExtendedEdgeIDs;                             // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.ExtendVertices
// 0x0030 (0x0030 - 0x0000)
struct EditableMesh_ExtendVertices final
{
public:
	TArray<struct FVertexID>                      VertexIDs;                                         // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOnlyExtendClosestEdge;                            // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-8 ])
	struct FVector                                ReferencePosition;                                 // 0x0014(0x000C)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVertexID>                      OutNewExtendedVertexIDs;                           // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.ExtrudePolygons
// 0x0028 (0x0028 - 0x0000)
struct EditableMesh_ExtrudePolygons final
{
public:
	TArray<struct FPolygonID>                     Polygons;                                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ExtrudeDistance;                                   // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bKeepNeighborsTogether;                            // 0x0014(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-8 ])
	TArray<struct FPolygonID>                     OutNewExtrudedFrontPolygons;                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.FlipPolygons
// 0x0010 (0x0010 - 0x0000)
struct EditableMesh_FlipPolygons final
{
public:
	TArray<struct FPolygonID>                     PolygonIDs;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.GeneratePolygonTangentsAndNormals
// 0x0010 (0x0010 - 0x0000)
struct EditableMesh_GeneratePolygonTangentsAndNormals final
{
public:
	TArray<struct FPolygonID>                     PolygonIDs;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.InsertEdgeLoop
// 0x0028 (0x0028 - 0x0000)
struct EditableMesh_InsertEdgeLoop final
{
public:
	struct FEdgeID                                EdgeID;                                            // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-8 ])
	TArray<float>                                 Splits;                                            // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FEdgeID>                        OutNewEdgeIDs;                                     // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.InsetPolygons
// 0x0040 (0x0040 - 0x0000)
struct EditableMesh_InsetPolygons final
{
public:
	TArray<struct FPolygonID>                     PolygonIDs;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InsetFixedDistance;                                // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InsetProgressTowardCenter;                         // 0x0014(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EInsetPolygonsMode                            Mode;                                              // 0x0018(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-8 ])
	TArray<struct FPolygonID>                     OutNewCenterPolygonIDs;                            // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPolygonID>                     OutNewSidePolygonIDs;                              // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.MoveVertices
// 0x0010 (0x0010 - 0x0000)
struct EditableMesh_MoveVertices final
{
public:
	TArray<struct FVertexToMove>                  VerticesToMove;                                    // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.QuadrangulateMesh
// 0x0010 (0x0010 - 0x0000)
struct EditableMesh_QuadrangulateMesh final
{
public:
	TArray<struct FPolygonID>                     OutNewPolygonIDs;                                  // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.RevertInstance
// 0x0008 (0x0008 - 0x0000)
struct EditableMesh_RevertInstance final
{
public:
	class UEditableMesh*                          ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.SetAllowCompact
// 0x0001 (0x0001 - 0x0000)
struct EditableMesh_SetAllowCompact final
{
public:
	bool                                          bInAllowCompact;                                   // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.SetAllowSpatialDatabase
// 0x0001 (0x0001 - 0x0000)
struct EditableMesh_SetAllowSpatialDatabase final
{
public:
	bool                                          bInAllowSpatialDatabase;                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.SetAllowUndo
// 0x0001 (0x0001 - 0x0000)
struct EditableMesh_SetAllowUndo final
{
public:
	bool                                          bInAllowUndo;                                      // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.SetEdgesAttributes
// 0x0010 (0x0010 - 0x0000)
struct EditableMesh_SetEdgesAttributes final
{
public:
	TArray<struct FAttributesForEdge>             AttributesForEdges;                                // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.SetEdgesCreaseSharpness
// 0x0020 (0x0020 - 0x0000)
struct EditableMesh_SetEdgesCreaseSharpness final
{
public:
	TArray<struct FEdgeID>                        EdgeIDs;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                 EdgesNewCreaseSharpness;                           // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.SetEdgesHardness
// 0x0020 (0x0020 - 0x0000)
struct EditableMesh_SetEdgesHardness final
{
public:
	TArray<struct FEdgeID>                        EdgeIDs;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<bool>                                  EdgesNewIsHard;                                    // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.SetEdgesHardnessAutomatically
// 0x0018 (0x0018 - 0x0000)
struct EditableMesh_SetEdgesHardnessAutomatically final
{
public:
	TArray<struct FEdgeID>                        EdgeIDs;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxDotProductForSoftEdge;                          // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-8 ])
};

// Function EditableMesh.EditableMesh.SetPolygonsVertexAttributes
// 0x0010 (0x0010 - 0x0000)
struct EditableMesh_SetPolygonsVertexAttributes final
{
public:
	TArray<struct FVertexAttributesForPolygon>    VertexAttributesForPolygons;                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.SetSubdivisionCount
// 0x0004 (0x0004 - 0x0000)
struct EditableMesh_SetSubdivisionCount final
{
public:
	int32                                         NewSubdivisionCount;                               // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.SetTextureCoordinateCount
// 0x0004 (0x0004 - 0x0000)
struct EditableMesh_SetTextureCoordinateCount final
{
public:
	int32                                         NumTexCoords;                                      // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.SetVertexInstancesAttributes
// 0x0010 (0x0010 - 0x0000)
struct EditableMesh_SetVertexInstancesAttributes final
{
public:
	TArray<struct FAttributesForVertexInstance>   AttributesForVertexInstances;                      // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.SetVerticesAttributes
// 0x0010 (0x0010 - 0x0000)
struct EditableMesh_SetVerticesAttributes final
{
public:
	TArray<struct FAttributesForVertex>           AttributesForVertices;                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.SetVerticesCornerSharpness
// 0x0020 (0x0020 - 0x0000)
struct EditableMesh_SetVerticesCornerSharpness final
{
public:
	TArray<struct FVertexID>                      VertexIDs;                                         // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                 VerticesNewCornerSharpness;                        // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.SplitEdge
// 0x0028 (0x0028 - 0x0000)
struct EditableMesh_SplitEdge final
{
public:
	struct FEdgeID                                EdgeID;                                            // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-8 ])
	TArray<float>                                 Splits;                                            // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVertexID>                      OutNewVertexIDs;                                   // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.SplitPolygonalMesh
// 0x0040 (0x0040 - 0x0000)
struct EditableMesh_SplitPolygonalMesh final
{
public:
	struct FPlane                                 InPlane;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPolygonID>                     PolygonIDs1;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPolygonID>                     PolygonIDs2;                                       // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FEdgeID>                        BoundaryIDs;                                       // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.SplitPolygons
// 0x0020 (0x0020 - 0x0000)
struct EditableMesh_SplitPolygons final
{
public:
	TArray<struct FPolygonToSplit>                PolygonsToSplit;                                   // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FEdgeID>                        OutNewEdgeIDs;                                     // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.StartModification
// 0x0002 (0x0002 - 0x0000)
struct EditableMesh_StartModification final
{
public:
	EMeshModificationType                         MeshModificationType;                              // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMeshTopologyChange                           MeshTopologyChange;                                // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.TessellatePolygons
// 0x0028 (0x0028 - 0x0000)
struct EditableMesh_TessellatePolygons final
{
public:
	TArray<struct FPolygonID>                     PolygonIDs;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETriangleTessellationMode                     TriangleTessellationMode;                          // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-8 ])
	TArray<struct FPolygonID>                     OutNewPolygonIDs;                                  // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.TriangulatePolygons
// 0x0020 (0x0020 - 0x0000)
struct EditableMesh_TriangulatePolygons final
{
public:
	TArray<struct FPolygonID>                     PolygonIDs;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPolygonID>                     OutNewTrianglePolygons;                            // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.TryToRemovePolygonEdge
// 0x000C (0x000C - 0x0000)
struct EditableMesh_TryToRemovePolygonEdge final
{
public:
	struct FEdgeID                                EdgeID;                                            // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOutWasEdgeRemoved;                                // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-8 ])
	struct FPolygonID                             OutNewPolygonID;                                   // 0x0008(0x0004)(Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.TryToRemoveVertex
// 0x000C (0x000C - 0x0000)
struct EditableMesh_TryToRemoveVertex final
{
public:
	struct FVertexID                              VertexID;                                          // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOutWasVertexRemoved;                              // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-8 ])
	struct FEdgeID                                OutNewEdgeID;                                      // 0x0008(0x0004)(Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.WeldVertices
// 0x0018 (0x0018 - 0x0000)
struct EditableMesh_WeldVertices final
{
public:
	TArray<struct FVertexID>                      VertexIDs;                                         // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVertexID                              OutNewVertexID;                                    // 0x0010(0x0004)(Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-8 ])
};

// Function EditableMesh.EditableMesh.AnyChangesToUndo
// 0x0001 (0x0001 - 0x0000)
struct EditableMesh_AnyChangesToUndo final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.ComputeBoundingBox
// 0x001C (0x001C - 0x0000)
struct EditableMesh_ComputeBoundingBox final
{
public:
	struct FBox                                   ReturnValue;                                       // 0x0000(0x001C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.ComputeBoundingBoxAndSphere
// 0x001C (0x001C - 0x0000)
struct EditableMesh_ComputeBoundingBoxAndSphere final
{
public:
	struct FBoxSphereBounds                       ReturnValue;                                       // 0x0000(0x001C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.ComputePolygonCenter
// 0x0010 (0x0010 - 0x0000)
struct EditableMesh_ComputePolygonCenter final
{
public:
	struct FPolygonID                             PolygonID;                                         // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                ReturnValue;                                       // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.ComputePolygonNormal
// 0x0010 (0x0010 - 0x0000)
struct EditableMesh_ComputePolygonNormal final
{
public:
	struct FPolygonID                             PolygonID;                                         // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                ReturnValue;                                       // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.ComputePolygonPlane
// 0x0020 (0x0020 - 0x0000)
struct EditableMesh_ComputePolygonPlane final
{
public:
	struct FPolygonID                             PolygonID;                                         // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0xC];                                        // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-8 ])
	struct FPlane                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.ComputePolygonsSharedEdges
// 0x0020 (0x0020 - 0x0000)
struct EditableMesh_ComputePolygonsSharedEdges final
{
public:
	TArray<struct FPolygonID>                     PolygonIDs;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FEdgeID>                        OutSharedEdgeIDs;                                  // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.FindPolygonLoop
// 0x0048 (0x0048 - 0x0000)
struct EditableMesh_FindPolygonLoop final
{
public:
	struct FEdgeID                                EdgeID;                                            // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-8 ])
	TArray<struct FEdgeID>                        OutEdgeLoopEdgeIDs;                                // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FEdgeID>                        OutFlippedEdgeIDs;                                 // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FEdgeID>                        OutReversedEdgeIDPathToTake;                       // 0x0028(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPolygonID>                     OutPolygonIDsToSplit;                              // 0x0038(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.FindPolygonPerimeterEdgeNumberForVertices
// 0x0010 (0x0010 - 0x0000)
struct EditableMesh_FindPolygonPerimeterEdgeNumberForVertices final
{
public:
	struct FPolygonID                             PolygonID;                                         // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVertexID                              EdgeVertexID0;                                     // 0x0004(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVertexID                              EdgeVertexID1;                                     // 0x0008(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.FindPolygonPerimeterVertexNumberForVertex
// 0x000C (0x000C - 0x0000)
struct EditableMesh_FindPolygonPerimeterVertexNumberForVertex final
{
public:
	struct FPolygonID                             PolygonID;                                         // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVertexID                              VertexID;                                          // 0x0004(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.GetEdgeConnectedPolygon
// 0x000C (0x000C - 0x0000)
struct EditableMesh_GetEdgeConnectedPolygon final
{
public:
	struct FEdgeID                                EdgeID;                                            // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ConnectedPolygonNumber;                            // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPolygonID                             ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.GetEdgeConnectedPolygonCount
// 0x0008 (0x0008 - 0x0000)
struct EditableMesh_GetEdgeConnectedPolygonCount final
{
public:
	struct FEdgeID                                EdgeID;                                            // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.GetEdgeConnectedPolygons
// 0x0018 (0x0018 - 0x0000)
struct EditableMesh_GetEdgeConnectedPolygons final
{
public:
	struct FEdgeID                                EdgeID;                                            // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-8 ])
	TArray<struct FPolygonID>                     OutConnectedPolygonIDs;                            // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.GetEdgeCount
// 0x0004 (0x0004 - 0x0000)
struct EditableMesh_GetEdgeCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.GetEdgeLoopElements
// 0x0018 (0x0018 - 0x0000)
struct EditableMesh_GetEdgeLoopElements final
{
public:
	struct FEdgeID                                EdgeID;                                            // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-8 ])
	TArray<struct FEdgeID>                        EdgeLoopIDs;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.GetEdgeThatConnectsVertices
// 0x000C (0x000C - 0x0000)
struct EditableMesh_GetEdgeThatConnectsVertices final
{
public:
	struct FVertexID                              VertexID0;                                         // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVertexID                              VertexID1;                                         // 0x0004(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEdgeID                                ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.GetEdgeVertex
// 0x000C (0x000C - 0x0000)
struct EditableMesh_GetEdgeVertex final
{
public:
	struct FEdgeID                                EdgeID;                                            // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         EdgeVertexNumber;                                  // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVertexID                              ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.GetEdgeVertices
// 0x000C (0x000C - 0x0000)
struct EditableMesh_GetEdgeVertices final
{
public:
	struct FEdgeID                                EdgeID;                                            // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVertexID                              OutEdgeVertexID0;                                  // 0x0004(0x0004)(Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVertexID                              OutEdgeVertexID1;                                  // 0x0008(0x0004)(Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.GetFirstValidPolygonGroup
// 0x0004 (0x0004 - 0x0000)
struct EditableMesh_GetFirstValidPolygonGroup final
{
public:
	struct FPolygonGroupID                        ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.GetGroupForPolygon
// 0x0008 (0x0008 - 0x0000)
struct EditableMesh_GetGroupForPolygon final
{
public:
	struct FPolygonID                             PolygonID;                                         // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPolygonGroupID                        ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.GetPolygonAdjacentPolygons
// 0x0018 (0x0018 - 0x0000)
struct EditableMesh_GetPolygonAdjacentPolygons final
{
public:
	struct FPolygonID                             PolygonID;                                         // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-8 ])
	TArray<struct FPolygonID>                     OutAdjacentPolygons;                               // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.GetPolygonCount
// 0x0004 (0x0004 - 0x0000)
struct EditableMesh_GetPolygonCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.GetPolygonCountInGroup
// 0x0008 (0x0008 - 0x0000)
struct EditableMesh_GetPolygonCountInGroup final
{
public:
	struct FPolygonGroupID                        PolygonGroupID;                                    // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.GetPolygonGroupCount
// 0x0004 (0x0004 - 0x0000)
struct EditableMesh_GetPolygonGroupCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.GetPolygonInGroup
// 0x000C (0x000C - 0x0000)
struct EditableMesh_GetPolygonInGroup final
{
public:
	struct FPolygonGroupID                        PolygonGroupID;                                    // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PolygonNumber;                                     // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPolygonID                             ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.GetPolygonPerimeterEdge
// 0x0010 (0x0010 - 0x0000)
struct EditableMesh_GetPolygonPerimeterEdge final
{
public:
	struct FPolygonID                             PolygonID;                                         // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PerimeterEdgeNumber;                               // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOutEdgeWindingIsReversedForPolygon;               // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-8 ])
	struct FEdgeID                                ReturnValue;                                       // 0x000C(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.GetPolygonPerimeterEdgeCount
// 0x0008 (0x0008 - 0x0000)
struct EditableMesh_GetPolygonPerimeterEdgeCount final
{
public:
	struct FPolygonID                             PolygonID;                                         // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.GetPolygonPerimeterEdges
// 0x0018 (0x0018 - 0x0000)
struct EditableMesh_GetPolygonPerimeterEdges final
{
public:
	struct FPolygonID                             PolygonID;                                         // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-8 ])
	TArray<struct FEdgeID>                        OutPolygonPerimeterEdgeIDs;                        // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.GetPolygonPerimeterVertex
// 0x000C (0x000C - 0x0000)
struct EditableMesh_GetPolygonPerimeterVertex final
{
public:
	struct FPolygonID                             PolygonID;                                         // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PolygonVertexNumber;                               // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVertexID                              ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.GetPolygonPerimeterVertexCount
// 0x0008 (0x0008 - 0x0000)
struct EditableMesh_GetPolygonPerimeterVertexCount final
{
public:
	struct FPolygonID                             PolygonID;                                         // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.GetPolygonPerimeterVertexInstance
// 0x000C (0x000C - 0x0000)
struct EditableMesh_GetPolygonPerimeterVertexInstance final
{
public:
	struct FPolygonID                             PolygonID;                                         // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PolygonVertexNumber;                               // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVertexInstanceID                      ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.GetPolygonPerimeterVertexInstances
// 0x0018 (0x0018 - 0x0000)
struct EditableMesh_GetPolygonPerimeterVertexInstances final
{
public:
	struct FPolygonID                             PolygonID;                                         // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-8 ])
	TArray<struct FVertexInstanceID>              OutPolygonPerimeterVertexInstanceIDs;              // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.GetPolygonPerimeterVertices
// 0x0018 (0x0018 - 0x0000)
struct EditableMesh_GetPolygonPerimeterVertices final
{
public:
	struct FPolygonID                             PolygonID;                                         // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-8 ])
	TArray<struct FVertexID>                      OutPolygonPerimeterVertexIDs;                      // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.GetPolygonTriangulatedTriangle
// 0x000C (0x000C - 0x0000)
struct EditableMesh_GetPolygonTriangulatedTriangle final
{
public:
	struct FPolygonID                             PolygonID;                                         // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PolygonTriangleNumber;                             // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTriangleID                            ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.GetPolygonTriangulatedTriangleCount
// 0x0008 (0x0008 - 0x0000)
struct EditableMesh_GetPolygonTriangulatedTriangleCount final
{
public:
	struct FPolygonID                             PolygonID;                                         // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.GetSubdivisionCount
// 0x0004 (0x0004 - 0x0000)
struct EditableMesh_GetSubdivisionCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.GetSubdivisionLimitData
// 0x0030 (0x0030 - 0x0000)
struct EditableMesh_GetSubdivisionLimitData final
{
public:
	struct FSubdivisionLimitData                  ReturnValue;                                       // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.GetTextureCoordinateCount
// 0x0004 (0x0004 - 0x0000)
struct EditableMesh_GetTextureCoordinateCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.GetVertexAdjacentVertices
// 0x0018 (0x0018 - 0x0000)
struct EditableMesh_GetVertexAdjacentVertices final
{
public:
	struct FVertexID                              VertexID;                                          // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-8 ])
	TArray<struct FVertexID>                      OutAdjacentVertexIDs;                              // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.GetVertexConnectedEdge
// 0x000C (0x000C - 0x0000)
struct EditableMesh_GetVertexConnectedEdge final
{
public:
	struct FVertexID                              VertexID;                                          // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ConnectedEdgeNumber;                               // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEdgeID                                ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.GetVertexConnectedEdgeCount
// 0x0008 (0x0008 - 0x0000)
struct EditableMesh_GetVertexConnectedEdgeCount final
{
public:
	struct FVertexID                              VertexID;                                          // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.GetVertexConnectedEdges
// 0x0018 (0x0018 - 0x0000)
struct EditableMesh_GetVertexConnectedEdges final
{
public:
	struct FVertexID                              VertexID;                                          // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-8 ])
	TArray<struct FEdgeID>                        OutConnectedEdgeIDs;                               // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.GetVertexConnectedPolygons
// 0x0018 (0x0018 - 0x0000)
struct EditableMesh_GetVertexConnectedPolygons final
{
public:
	struct FVertexID                              VertexID;                                          // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-8 ])
	TArray<struct FPolygonID>                     OutConnectedPolygonIDs;                            // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.GetVertexCount
// 0x0004 (0x0004 - 0x0000)
struct EditableMesh_GetVertexCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.GetVertexInstanceConnectedPolygon
// 0x000C (0x000C - 0x0000)
struct EditableMesh_GetVertexInstanceConnectedPolygon final
{
public:
	struct FVertexInstanceID                      VertexInstanceID;                                  // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ConnectedPolygonNumber;                            // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPolygonID                             ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.GetVertexInstanceConnectedPolygonCount
// 0x0008 (0x0008 - 0x0000)
struct EditableMesh_GetVertexInstanceConnectedPolygonCount final
{
public:
	struct FVertexInstanceID                      VertexInstanceID;                                  // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.GetVertexInstanceConnectedPolygons
// 0x0018 (0x0018 - 0x0000)
struct EditableMesh_GetVertexInstanceConnectedPolygons final
{
public:
	struct FVertexInstanceID                      VertexInstanceID;                                  // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-8 ])
	TArray<struct FPolygonID>                     OutConnectedPolygonIDs;                            // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.GetVertexInstanceCount
// 0x0004 (0x0004 - 0x0000)
struct EditableMesh_GetVertexInstanceCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.GetVertexInstanceVertex
// 0x0008 (0x0008 - 0x0000)
struct EditableMesh_GetVertexInstanceVertex final
{
public:
	struct FVertexInstanceID                      VertexInstanceID;                                  // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVertexID                              ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.GetVertexPairEdge
// 0x0010 (0x0010 - 0x0000)
struct EditableMesh_GetVertexPairEdge final
{
public:
	struct FVertexID                              VertexID;                                          // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVertexID                              NextVertexID;                                      // 0x0004(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOutEdgeWindingIsReversed;                         // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-8 ])
	struct FEdgeID                                ReturnValue;                                       // 0x000C(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.IsBeingModified
// 0x0001 (0x0001 - 0x0000)
struct EditableMesh_IsBeingModified final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.IsCommitted
// 0x0001 (0x0001 - 0x0000)
struct EditableMesh_IsCommitted final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.IsCommittedAsInstance
// 0x0001 (0x0001 - 0x0000)
struct EditableMesh_IsCommittedAsInstance final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.IsCompactAllowed
// 0x0001 (0x0001 - 0x0000)
struct EditableMesh_IsCompactAllowed final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.IsOrphanedVertex
// 0x0008 (0x0008 - 0x0000)
struct EditableMesh_IsOrphanedVertex final
{
public:
	struct FVertexID                              VertexID;                                          // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-8 ])
};

// Function EditableMesh.EditableMesh.IsPreviewingSubdivisions
// 0x0001 (0x0001 - 0x0000)
struct EditableMesh_IsPreviewingSubdivisions final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.IsSpatialDatabaseAllowed
// 0x0001 (0x0001 - 0x0000)
struct EditableMesh_IsSpatialDatabaseAllowed final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.IsUndoAllowed
// 0x0001 (0x0001 - 0x0000)
struct EditableMesh_IsUndoAllowed final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.IsValidEdge
// 0x0008 (0x0008 - 0x0000)
struct EditableMesh_IsValidEdge final
{
public:
	struct FEdgeID                                EdgeID;                                            // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-8 ])
};

// Function EditableMesh.EditableMesh.IsValidPolygon
// 0x0008 (0x0008 - 0x0000)
struct EditableMesh_IsValidPolygon final
{
public:
	struct FPolygonID                             PolygonID;                                         // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-8 ])
};

// Function EditableMesh.EditableMesh.IsValidPolygonGroup
// 0x0008 (0x0008 - 0x0000)
struct EditableMesh_IsValidPolygonGroup final
{
public:
	struct FPolygonGroupID                        PolygonGroupID;                                    // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-8 ])
};

// Function EditableMesh.EditableMesh.IsValidVertex
// 0x0008 (0x0008 - 0x0000)
struct EditableMesh_IsValidVertex final
{
public:
	struct FVertexID                              VertexID;                                          // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-8 ])
};

// Function EditableMesh.EditableMesh.SearchSpatialDatabaseForPolygonsInVolume
// 0x0020 (0x0020 - 0x0000)
struct EditableMesh_SearchSpatialDatabaseForPolygonsInVolume final
{
public:
	TArray<struct FPlane>                         Planes;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPolygonID>                     OutPolygons;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.SearchSpatialDatabaseForPolygonsPotentiallyIntersectingLineSegment
// 0x0028 (0x0028 - 0x0000)
struct EditableMesh_SearchSpatialDatabaseForPolygonsPotentiallyIntersectingLineSegment final
{
public:
	struct FVector                                LineSegmentStart;                                  // 0x0000(0x000C)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                LineSegmentEnd;                                    // 0x000C(0x000C)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPolygonID>                     OutPolygons;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMesh.SearchSpatialDatabaseForPolygonsPotentiallyIntersectingPlane
// 0x0020 (0x0020 - 0x0000)
struct EditableMesh_SearchSpatialDatabaseForPolygonsPotentiallyIntersectingPlane final
{
public:
	struct FPlane                                 InPlane;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPolygonID>                     OutPolygons;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function EditableMesh.EditableMeshFactory.MakeEditableMesh
// 0x0018 (0x0018 - 0x0000)
struct EditableMeshFactory_MakeEditableMesh final
{
public:
	class UPrimitiveComponent*                    PrimitiveComponent;                                // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LODIndex;                                          // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-8 ])
	class UEditableMesh*                          ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

}

