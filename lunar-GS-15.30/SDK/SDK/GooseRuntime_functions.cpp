#pragma once

/*
* SDK generated by Dumper-8
*
* https://github.com/NotTacs/Dumper-8
*/

// Package: GooseRuntime

#include "Basic.hpp"

#include "GooseRuntime_classes.hpp"
#include "GooseRuntime_parameters.hpp"


namespace SDK
{

// Function GooseRuntime.AthenaGoosePickup.DeployTimerUp_Client
// (Native, Event, Protected, BlueprintEvent)

void AAthenaGoosePickup::DeployTimerUp_Client()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaGoosePickup", "DeployTimerUp_Client");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GooseRuntime.AthenaGoosePickup.DeployTimerUp_Server
// (Native, Event, Protected, BlueprintEvent)

void AAthenaGoosePickup::DeployTimerUp_Server()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaGoosePickup", "DeployTimerUp_Server");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GooseRuntime.AthenaGoosePickup.OnCollide
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class AActor*                           CollidingActor                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAthenaGoosePickup::OnCollide(class AActor* CollidingActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaGoosePickup", "OnCollide");

	Params::AthenaGoosePickup_OnCollide Parms{};

	Parms.CollidingActor = CollidingActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GooseRuntime.AthenaGoosePickup.OnDeployed_Client
// (Native, Event, Protected, BlueprintEvent)

void AAthenaGoosePickup::OnDeployed_Client()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaGoosePickup", "OnDeployed_Client");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GooseRuntime.AthenaGoosePickup.OnDeployed_Server
// (Native, Event, Protected, BlueprintEvent)

void AAthenaGoosePickup::OnDeployed_Server()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaGoosePickup", "OnDeployed_Server");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GooseRuntime.AthenaGoosePickup.OnFalling_Client
// (Native, Event, Protected, BlueprintEvent)

void AAthenaGoosePickup::OnFalling_Client()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaGoosePickup", "OnFalling_Client");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GooseRuntime.AthenaGoosePickup.OnFalling_Server
// (Native, Event, Protected, BlueprintEvent)

void AAthenaGoosePickup::OnFalling_Server()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaGoosePickup", "OnFalling_Server");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GooseRuntime.AthenaGoosePickup.OnImpactedByPlane_Client
// (Native, Event, Protected, BlueprintEvent)

void AAthenaGoosePickup::OnImpactedByPlane_Client()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaGoosePickup", "OnImpactedByPlane_Client");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GooseRuntime.AthenaGoosePickup.OnImpactedByPlane_Server
// (Native, Event, Protected, BlueprintEvent)

void AAthenaGoosePickup::OnImpactedByPlane_Server()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaGoosePickup", "OnImpactedByPlane_Server");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GooseRuntime.AthenaGoosePickup.OnRep_bIsDespawning
// (Final, Native, Protected)

void AAthenaGoosePickup::OnRep_bIsDespawning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaGoosePickup", "OnRep_bIsDespawning");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GooseRuntime.AthenaGoosePickup.OnRep_DisplayIndex
// (Final, Native, Protected)

void AAthenaGoosePickup::OnRep_DisplayIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaGoosePickup", "OnRep_DisplayIndex");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GooseRuntime.AthenaGoosePickup.OnRep_PickupState
// (Final, Native, Protected)

void AAthenaGoosePickup::OnRep_PickupState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaGoosePickup", "OnRep_PickupState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GooseRuntime.AthenaGoosePickup.OnStartDespawnWarning_Client
// (Native, Event, Protected, BlueprintEvent)

void AAthenaGoosePickup::OnStartDespawnWarning_Client()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaGoosePickup", "OnStartDespawnWarning_Client");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GooseRuntime.AthenaGoosePickup.SetStaticMesh
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class UStaticMesh*                      NewStaticMesh                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class UMaterialInterface*>&MaterialsToSwap                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InDisplayIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAthenaGoosePickup::SetStaticMesh(class UStaticMesh* NewStaticMesh, const TArray<class UMaterialInterface*>& MaterialsToSwap, int32 InDisplayIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaGoosePickup", "SetStaticMesh");

	Params::AthenaGoosePickup_SetStaticMesh Parms{};

	Parms.NewStaticMesh = NewStaticMesh;
	Parms.MaterialsToSwap = std::move(MaterialsToSwap);
	Parms.InDisplayIndex = InDisplayIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GooseRuntime.FortAthenaMutator_Goose.HandleClientPawnEnteredVehicle
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const TScriptInterface<class IFortVehicleInterface>&Vehicle                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)
// class AFortPawn*                        Pawn                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SeatIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAthenaMutator_Goose::HandleClientPawnEnteredVehicle(const TScriptInterface<class IFortVehicleInterface>& Vehicle, class AFortPawn* Pawn, int32 SeatIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaMutator_Goose", "HandleClientPawnEnteredVehicle");

	Params::FortAthenaMutator_Goose_HandleClientPawnEnteredVehicle Parms{};

	Parms.Vehicle = Vehicle;
	Parms.Pawn = Pawn;
	Parms.SeatIndex = SeatIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GooseRuntime.FortAthenaMutator_Goose.HandleClientPawnExitedVehicle
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const TScriptInterface<class IFortVehicleInterface>&Vehicle                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)
// class AFortPawn*                        Pawn                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SeatIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAthenaMutator_Goose::HandleClientPawnExitedVehicle(const TScriptInterface<class IFortVehicleInterface>& Vehicle, class AFortPawn* Pawn, int32 SeatIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaMutator_Goose", "HandleClientPawnExitedVehicle");

	Params::FortAthenaMutator_Goose_HandleClientPawnExitedVehicle Parms{};

	Parms.Vehicle = Vehicle;
	Parms.Pawn = Pawn;
	Parms.SeatIndex = SeatIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GooseRuntime.FortAthenaMutator_Goose.HandleClientVehicleDestroyed
// (Final, Native, Protected)
// Parameters:
// class AActor*                           VehicleActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAthenaMutator_Goose::HandleClientVehicleDestroyed(class AActor* VehicleActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaMutator_Goose", "HandleClientVehicleDestroyed");

	Params::FortAthenaMutator_Goose_HandleClientVehicleDestroyed Parms{};

	Parms.VehicleActor = VehicleActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GooseRuntime.FortAthenaMutator_Goose.KillPlayerPawns
// (Final, Native, Protected)
// Parameters:
// const TArray<TWeakObjectPtr<class AFortPlayerPawn>>&PawnsToKill                                            (ConstParm, Parm, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     DeathReasonTags                                        (ConstParm, Parm, NativeAccessSpecifierPublic)
// class AController*                      EventInstigator                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           DamageCauser                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAthenaMutator_Goose::KillPlayerPawns(const TArray<TWeakObjectPtr<class AFortPlayerPawn>>& PawnsToKill, const struct FGameplayTagContainer& DeathReasonTags, class AController* EventInstigator, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaMutator_Goose", "KillPlayerPawns");

	Params::FortAthenaMutator_Goose_KillPlayerPawns Parms{};

	Parms.PawnsToKill = std::move(PawnsToKill);
	Parms.DeathReasonTags = std::move(DeathReasonTags);
	Parms.EventInstigator = EventInstigator;
	Parms.DamageCauser = DamageCauser;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GooseRuntime.FortAthenaMutator_Goose.OnPawnDied
// (Final, Native, Protected)
// Parameters:
// class AFortPlayerPawnAthena*            PlayerPawn                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAthenaMutator_Goose::OnPawnDied(class AFortPlayerPawnAthena* PlayerPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaMutator_Goose", "OnPawnDied");

	Params::FortAthenaMutator_Goose_OnPawnDied Parms{};

	Parms.PlayerPawn = PlayerPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GooseRuntime.FortAthenaMutator_Goose.OnVehicleDied
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class AFortAthenaVehicle*               DestroyedVehicle                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     InTags                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class AController*                      EventInstigator                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           DamageCauser                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAthenaMutator_Goose::OnVehicleDied(class AFortAthenaVehicle* DestroyedVehicle, const struct FGameplayTagContainer& InTags, class AController* EventInstigator, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaMutator_Goose", "OnVehicleDied");

	Params::FortAthenaMutator_Goose_OnVehicleDied Parms{};

	Parms.DestroyedVehicle = DestroyedVehicle;
	Parms.InTags = std::move(InTags);
	Parms.EventInstigator = EventInstigator;
	Parms.DamageCauser = DamageCauser;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GooseRuntime.FortAthenaMutator_Goose.OnVehicleStolen
// (Final, Native, Protected)
// Parameters:
// uint8                                   OldID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   NewID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAthenaMutator_Goose::OnVehicleStolen(uint8 OldID, uint8 NewID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaMutator_Goose", "OnVehicleStolen");

	Params::FortAthenaMutator_Goose_OnVehicleStolen Parms{};

	Parms.OldID = OldID;
	Parms.NewID = NewID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GooseRuntime.FortCheatManager_Goose.GooseGivePlaneBoostGE
// (Final, BlueprintAuthorityOnly, Exec, Native, Public)
// Parameters:
// const int32                             Index_0                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager_Goose::GooseGivePlaneBoostGE(const int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager_Goose", "GooseGivePlaneBoostGE");

	Params::FortCheatManager_Goose_GooseGivePlaneBoostGE Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GooseRuntime.FortCheatManager_Goose.GooseGivePlaneEffect
// (Final, BlueprintAuthorityOnly, Exec, Native, Public)
// Parameters:
// const int32                             Index_0                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager_Goose::GooseGivePlaneEffect(const int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager_Goose", "GooseGivePlaneEffect");

	Params::FortCheatManager_Goose_GooseGivePlaneEffect Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GooseRuntime.FortCheatManager_Goose.GooseGivePlaneHealthGE
// (Final, BlueprintAuthorityOnly, Exec, Native, Public)
// Parameters:
// const int32                             Index_0                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager_Goose::GooseGivePlaneHealthGE(const int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager_Goose", "GooseGivePlaneHealthGE");

	Params::FortCheatManager_Goose_GooseGivePlaneHealthGE Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GooseRuntime.FortCheatManager_Goose.GooseKillPlaneSquad
// (Final, BlueprintAuthorityOnly, Exec, Native, Public)

void UFortCheatManager_Goose::GooseKillPlaneSquad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager_Goose", "GooseKillPlaneSquad");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GooseRuntime.FortCheatManager_Goose.GooseSetPlaneHealthPercent
// (Final, BlueprintAuthorityOnly, Exec, Native, Public)
// Parameters:
// const float                             Percent                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager_Goose::GooseSetPlaneHealthPercent(const float Percent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager_Goose", "GooseSetPlaneHealthPercent");

	Params::FortCheatManager_Goose_GooseSetPlaneHealthPercent Parms{};

	Parms.Percent = Percent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GooseRuntime.FortCheatManager_Goose.GooseSetPlaneLives
// (Final, BlueprintAuthorityOnly, Exec, Native, Public)
// Parameters:
// const int32                             NewLives                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager_Goose::GooseSetPlaneLives(const int32 NewLives)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager_Goose", "GooseSetPlaneLives");

	Params::FortCheatManager_Goose_GooseSetPlaneLives Parms{};

	Parms.NewLives = NewLives;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GooseRuntime.FortCheatManager_Goose.GooseStealPlane
// (Final, BlueprintAuthorityOnly, Exec, Native, Public)

void UFortCheatManager_Goose::GooseStealPlane()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager_Goose", "GooseStealPlane");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GooseRuntime.FortCheatManager_Goose.GooseToggleDrops
// (Final, BlueprintAuthorityOnly, Exec, Native, Public)
// Parameters:
// const bool                              bToggleValue                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager_Goose::GooseToggleDrops(const bool bToggleValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager_Goose", "GooseToggleDrops");

	Params::FortCheatManager_Goose_GooseToggleDrops Parms{};

	Parms.bToggleValue = bToggleValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GooseRuntime.FortCheatManager_Goose.GooseUpgradePlaneGuns
// (Final, BlueprintAuthorityOnly, Exec, Native, Public)
// Parameters:
// const int32                             Index_0                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager_Goose::GooseUpgradePlaneGuns(const int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager_Goose", "GooseUpgradePlaneGuns");

	Params::FortCheatManager_Goose_GooseUpgradePlaneGuns Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

