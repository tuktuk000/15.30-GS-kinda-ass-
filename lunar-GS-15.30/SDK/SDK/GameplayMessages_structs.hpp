#pragma once

/*
* SDK generated by Dumper-8
*
* https://github.com/NotTacs/Dumper-8
*/

// Package: GameplayMessages

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"


namespace SDK
{

// Enum GameplayMessages.EGameplayMessageMatchType
// NumValues: 0x0003
enum class EGameplayMessageMatchType : uint8
{
	ExactMatch                               = 0,
	PartialMatch                             = 1,
	EGameplayMessageMatchType_MAX            = 2,
};

// ScriptStruct GameplayMessages.ReplicatedMessage
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FReplicatedMessage final
{
public:
	uint8                                         Pad_0[0x10];                                       // 0x0000(0x0010)(Fixing Struct Size After Last Property [ Dumper-8 ])
};

// ScriptStruct GameplayMessages.ReplicatedMessageData
// 0x0018 (0x0018 - 0x0000)
struct FReplicatedMessageData final
{
public:
	class UScriptStruct*                          StructType;                                        // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x10];                                       // 0x0008(0x0010)(Fixing Struct Size After Last Property [ Dumper-8 ])
};

// ScriptStruct GameplayMessages.GameplayMessageReceiverHandle
// 0x0014 (0x0014 - 0x0000)
struct FGameplayMessageReceiverHandle final
{
public:
	TWeakObjectPtr<class UGameplayMessageRouter>  Subsystem;                                         // 0x0000(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                           Channel;                                           // 0x0008(0x0008)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         ID;                                                // 0x0010(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

}

